cscope 15 $HOME/filebench-1.5-alpha3               0000692496
	@aslr.c

19 
	~<sys/≥rs⁄Æôy.h
>

21 
	~"fûebích.h
"

22 
	~"a¶r.h
"

24 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

26 
	$löux_dißbÀ_a¶r
()

28 
r
;

30 (Ë
	`≥rs⁄Æôy
(0xffffffff);

31 
r
 = 
	`≥rs⁄Æôy
(0xfffffff‡| 
ADDR_NO_RANDOMIZE
);

32 i‡(
r
 == -1)

33 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot disable ASLR");

34 
	}
}

37 
	$Ÿhî_dißbÀ_a¶r
()

39 
	`fûebích_log
(
LOG_INFO
, "Per-process disabling of ASLR isÇot "

46 
	}
}

	@aslr.h

1 #i‚de‡
_ASLR_H


2 
	#_ASLR_H


	)

4 
	~<fûebích.h
>

6 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

8 
löux_dißbÀ_a¶r
();

10 
ölöe
 

11 
	$dißbÀ_a¶r
()

13  
	`löux_dißbÀ_a¶r
();

14 
	}
}

17 
Ÿhî_dißbÀ_a¶r
();

19 
ölöe
 

20 
	$dißbÀ_a¶r
() {

21  
	`Ÿhî_dißbÀ_a¶r
();

22 
	}
}

	@config.h

16 
	#HAVE_ADDR_NO_RANDOMIZE
 1

	)

19 
	#HAVE_AIO
 1

	)

25 
	#HAVE_AIO_ERROR64
 1

	)

28 
	#HAVE_AIO_RETURN64
 1

	)

31 
	#HAVE_AIO_WRITE64
 1

	)

34 
	#HAVE_ALLOCA
 1

	)

38 
	#HAVE_ALLOCA_H
 1

	)

41 
	#HAVE_ARPA_INET_H
 1

	)

54 
	#HAVE_DIRENT_H
 1

	)

57 
	#HAVE_DLFCN_H
 1

	)

63 
	#HAVE_FADVISE
 1

	)

66 
	#HAVE_FCNTL_H
 1

	)

69 
	#HAVE_FORK
 1

	)

75 
	#HAVE_FSTAT64
 1

	)

78 
	#HAVE_FTOK
 1

	)

81 
	#HAVE_FTRUNCATE
 1

	)

84 
	#HAVE_FTRUNCATE64
 1

	)

87 
	#HAVE_GETCWD
 1

	)

90 
	#HAVE_GETHOSTNAME
 1

	)

96 
	#HAVE_GETPAGESIZE
 1

	)

99 
	#HAVE_GETRLIMIT
 1

	)

102 
	#HAVE_GETTIMEOFDAY
 1

	)

105 
	#HAVE_INTTYPES_H
 1

	)

108 
	#HAVE_IOPRIO
 1

	)

111 
	#HAVE_LIBDL
 1

	)

114 
	#HAVE_LIBINTL_H
 1

	)

117 
	#HAVE_LIBM
 1

	)

120 
	#HAVE_LIBPTHREAD
 1

	)

123 
	#HAVE_LIBRT
 1

	)

126 
	#HAVE_LIMITS_H
 1

	)

129 
	#HAVE_LOCALE_H
 1

	)

132 
	#HAVE_LSEEK64
 1

	)

139 
	#HAVE_MALLOC
 1

	)

142 
	#HAVE_MALLOC_H
 1

	)

145 
	#HAVE_MATH_H
 1

	)

148 
	#HAVE_MEMORY_H
 1

	)

151 
	#HAVE_MEMSET
 1

	)

154 
	#HAVE_MKDIR
 1

	)

157 
	#HAVE_MMAP
 1

	)

160 
	#HAVE_MMAP64
 1

	)

163 
	#HAVE_MUNMAP
 1

	)

169 
	#HAVE_NETDB_H
 1

	)

172 
	#HAVE_NETINET_IN_H
 1

	)

178 
	#HAVE_OFF64_T
 1

	)

181 
	#HAVE_OPEN64
 1

	)

184 
	#HAVE_O_DIRECT
 1

	)

190 
	#HAVE_PREAD64
 1

	)

193 
	#HAVE_PROCSCOPE_PTHREADS
 1

	)

196 
	#HAVE_PROC_SYS_KERNEL_SHMMAX
 1

	)

199 
	#HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL
 1

	)

202 
	#HAVE_PWRITE64
 1

	)

206 
	#HAVE_REALLOC
 1

	)

209 
	#HAVE_RMDIR
 1

	)

212 
	#HAVE_ROBUST_MUTEX
 1

	)

215 
	#HAVE_SEMGET
 1

	)

218 
	#HAVE_SEMOP
 1

	)

221 
	#HAVE_SEMTIMEDOP
 1

	)

224 
	#HAVE_SEM_RMID
 1

	)

227 
	#HAVE_SETRLIMIT
 1

	)

233 
	#HAVE_SIGIGNORE
 1

	)

239 
	#HAVE_SOCKET
 1

	)

245 
	#HAVE_STAT64
 1

	)

252 
	#HAVE_STDBOOL_H
 1

	)

255 
	#HAVE_STDDEF_H
 1

	)

258 
	#HAVE_STDINT_H
 1

	)

261 
	#HAVE_STDLIB_H
 1

	)

264 
	#HAVE_STRCHR
 1

	)

267 
	#HAVE_STRDUP
 1

	)

270 
	#HAVE_STRERROR
 1

	)

273 
	#HAVE_STRFTIME
 1

	)

276 
	#HAVE_STRINGS_H
 1

	)

279 
	#HAVE_STRING_H
 1

	)

288 
	#HAVE_STRNCASECMP
 1

	)

291 
	#HAVE_STRSTR
 1

	)

294 
	#HAVE_STRUCT_STAT_ST_RDEV
 1

	)

297 
	#HAVE_SYSV_SEM
 1

	)

308 
	#HAVE_SYS_PARAM_H
 1

	)

311 
	#HAVE_SYS_PERSONALITY_H
 1

	)

314 
	#HAVE_SYS_SOCKET_H
 1

	)

317 
	#HAVE_SYS_STATVFS_H
 1

	)

320 
	#HAVE_SYS_STAT_H
 1

	)

323 
	#HAVE_SYS_TIME_H
 1

	)

326 
	#HAVE_SYS_TYPES_H
 1

	)

329 
	#HAVE_SYS_WAIT_H
 1

	)

335 
	#HAVE_UNISTD_H
 1

	)

341 
	#HAVE_VFORK
 1

	)

347 
	#HAVE_VPRINTF
 1

	)

350 
	#HAVE_WAITID
 1

	)

353 
	#HAVE_WORKING_FORK
 1

	)

356 
	#HAVE_WORKING_VFORK
 1

	)

359 
	#HAVE__BOOL
 1

	)

363 
	#LSTAT_FOLLOWS_SLASHED_SYMLINK
 1

	)

366 
	#LT_OBJDIR
 ".libs/"

	)

369 
	#PACKAGE
 "fûebích"

	)

372 
	#PACKAGE_BUGREPORT
 ""

	)

375 
	#PACKAGE_NAME
 "fûebích"

	)

378 
	#PACKAGE_STRING
 "fûebích 1.5-Æpha3"

	)

381 
	#PACKAGE_TARNAME
 "fûebích"

	)

384 
	#PACKAGE_URL
 ""

	)

387 
	#PACKAGE_VERSION
 "1.5-Æpha3"

	)

390 
	#RETSIGTYPE
 

	)

401 
	#STDC_HEADERS
 1

	)

404 
	#TIME_WITH_SYS_TIME
 1

	)

413 
	#VERSION
 "1.5-Æpha3"

	)

417 
	#YYTEXT_POINTER
 1

	)

	@cvars/cvar-erlang.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-îœng.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©oi
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RER_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_RATE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
øã
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
øã
 = 
RER_RATE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%d,Ñ©ê%lf", 
h™dÀ
.
sh≠e
, h™dÀ.
øã
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %d. shape isá "

56 "n⁄-zîÿposôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
øã
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value:Ñate = %lf.Ñate isá "

62 "n⁄-zîÿposôivêøti⁄ÆÇumbî", 
h™dÀ
.
øã
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_îœng
(&
h
->
°©e
, h->
sh≠e
, h->
øã
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%d\n", 
RER_SHAPE
, 
RER_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RER_RATE
, 
RER_RATE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RER_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RER_RATE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_RATE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-erlang.h

10 #i‚de‡
_RAND_ERLANG_H


11 
	#_RAND_ERLANG_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RER_SHAPE
 "sh≠e"

	)

17 
	#RER_RATE
 "øã"

	)

20 
	#RER_SHAPE_DEFAULT
 1

	)

21 
	#RER_RATE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	møã
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-exponential.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-exp⁄ítül.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RE_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RE_MEAN_DEFAULT
;

44 
	`cv¨_åa˚
("mó¿%lf", 
h™dÀ
.
món
);

47 i‡(
h™dÀ
.
món
 < 0) {

48 
	`cv¨_åa˚
("Setting meanÅo 0");

49 
h™dÀ
.
món
 = 0;

52 
t
 = 
	`unu£d_tokís
(
li°_hód
);

53 i‡(
t
) {

54 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

55 
out
;

59 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

63 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

64 i‡(!
°©e
) {

65 
	`cv¨_log_îr‹
("Out of memory");

66 
out
;

69 *
°©e
 = 
h™dÀ
;

71 
out
:

72 
	`‰ì_tokís
(
li°_hód
);

74 
	`cv¨_åa˚
("exit");

75  
°©e
;

76 
	}
}

78 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

80 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

82 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

85 
	}
}

87 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

89 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

91 i‡(!
h
) {

92 
	`cv¨_åa˚
("NULL cvar_handle");

96 i‡(!
vÆue
) {

97 
	`cv¨_åa˚
("NULL value");

101 *
vÆue
 = 
	`rds_exp⁄ítül
(&
h
->
°©e
, h->
món
);

104 
	}
}

106 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

108 
	`cv¨_‰ì
(
h™dÀ
);

109 
	}
}

111 c⁄° *
	$cv¨_ußge
()

113 
off£t
;

115 i‡(
ußge
[0])

116  
ußge
;

118 
off£t
 = 0;

120 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

122 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

125 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 "\t%s\t\t%.1f\n", 
RE_MEAN
, 
RE_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "U£ '%c' f‹ássignmít.\n", 
DEFAULT_KEY_VALUE_DELIMITER
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 
RE_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RE_MEAN_DEFAULT
);

135  
ußge
;

136 
	}
}

138 c⁄° *
	$cv¨_vîsi⁄
()

140  
VERSION
;

141 
	}
}

	@cvars/cvar-exponential.h

10 #i‚de‡
_RAND_EXPONENTIAL_H


11 
	#_RAND_EXPONENTIAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RE_MEAN
 "món"

	)

19 
	#RE_MEAN_DEFAULT
 1.0

	)

21 
	#VERSION
 "0.1.1 (Æpha)"

	)

24 
	sh™dÀ
 {

25 
mt_°©e
 
	m°©e
;

26 
	mmón
;

27 } 
	th™dÀ_t
;

30 
	#USAGE_LEN
 2048

	)

32 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-gamma.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<m©h.h
>

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

17 
	#VERSION
 "0.1.1 (Æpha)"

	)

19 
	#USAGE_LEN
 2048

	)

20 
	gußge
[
USAGE_LEN
 + 1];

22 
	#MEAN
 "món"

	)

23 
	#GAMMA
 "gamma"

	)

25 
	#MEAN_DEFAULT
 4096.0

	)

26 
	#GAMMA_DEFAULT
 1.5

	)

28 
	sh™dÀ
 {

29 
	mmón
;

30 
	msˇÀdmón
;

31 
	mgamma
;

32 } 
	th™dÀ_t
;

42 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

43 *
xi
)

45 
p
, 
U
, 
V
, 
X
, 
q
;

47 
p
 = 
M_E
/(
a
 + M_E);

48 
G2
:

50 
U
 = (*
§c
)(
xi
);

54 
V
 = (*
§c
)(
xi
);

56 } 
V
 == 0);

58 i‡(
U
 < 
p
) {

59 
X
 = 
	`pow
(
V
, 1/
a
);

61 
q
 = 
	`exp
(-
X
);

63 
X
 = 1 - 
	`log
(
V
);

64 
q
 = 
	`pow
(
X
, 
a
-1);

72 
U
 = (*
§c
)(
xi
);

74 i‡(
U
 >
q
)

75 
G2
;

76  (
X
);

77 
	}
}

85 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

86 *
xi
)

88 
U
, 
Y
, 
X
, 
V
;

90 
A1
:

92 
U
 = (*
§c
)(
xi
);

94 
Y
 = 
	`èn
(
M_PI
*
U
);

95 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

97 i‡(
X
 <= 0)

98 
A1
;

101 
V
 = (*
§c
)(
xi
);

103 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

104 
A1
;

106  (
X
);

107 
	}
}

114 
	$deÁu…_§c
(*
xi
)

116  (
	`dønd48
());

117 
	}
}

125 
	$gamma_di°_knuth
(
a
, 
b
)

127 i‡(
a
 <= 1.0)

128  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

130  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

131 
	}
}

140 
	$gamma_di°_knuth_§c
(
a
, 
b
,

141 (*
§c
)(*), *
xi
)

143 i‡(
a
 <= 1.0)

144  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

146  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

147 
	}
}

150 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

151 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

153 
cv¨_tokí_t
 *
li°_hód
;;

154 
cv¨_tokí_t
 *
t
;

155 
h™dÀ_t
 
h™dÀ
;

156 
h™dÀ_t
 *
°©e
 = 
NULL
;

157 
ªt
 = 0;

159 
	`cv¨_åa˚
("entry");

162 
li°_hód
 = 
NULL
;

163 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

164 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

165 i‡(
ªt
)

166 
out
;

169 
t
 = 
	`föd_tokí
(
li°_hód
, 
MEAN
);

170 i‡(
t
 &&Å->
vÆue
) {

171 
t
->
u£d
 = 1;

172 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

174 
h™dÀ
.
món
 = 
MEAN_DEFAULT
;

176 
t
 = 
	`föd_tokí
(
li°_hód
, 
GAMMA
);

177 i‡(
t
 &&Å->
vÆue
) {

178 
t
->
u£d
 = 1;

179 
h™dÀ
.
gamma
 = 
	`©of
(
t
->
vÆue
);

181 
h™dÀ
.
gamma

GAMMA_DEFAULT
;

183 i‡(!
h™dÀ
.
gamma
) {

184 
	`cv¨_log_îr‹
("InvalidÖarameter values: mean = %lf "

186 "th™ 0", 
h™dÀ
.
món
, h™dÀ.
gamma
);

187 
out
;

190 
h™dÀ
.
sˇÀdmón
 = h™dÀ.
món
 / h™dÀ.
gamma
;

192 
	`cv¨_åa˚
("mó¿%lf, gamm®%lf", 
h™dÀ
.
món
, h™dÀ.
gamma
);

194 
t
 = 
	`unu£d_tokís
(
li°_hód
);

195 i‡(
t
) {

196 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

197 
out
;

202 
°©e
 = (
h™dÀ_t
 *)
	`cv¨_mÆloc
((handle_t));

203 i‡(!
°©e
) {

204 
	`cv¨_log_îr‹
("Out of memory");

205 
out
;

208 *
°©e
 = 
h™dÀ
;

210 
out
:

211 
	`‰ì_tokís
(
li°_hód
);

213 
	`cv¨_åa˚
("exit");

214  
°©e
;

215 
	}
}

217 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

219 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

222 
	}
}

224 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

226 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

228 i‡(!
h
) {

229 
	`cv¨_log_îr‹
("NULL cvar_handle");

233 i‡(!
vÆue
) {

234 
	`cv¨_log_îr‹
("NULL value");

238 *
vÆue
 = 
	`gamma_di°_knuth
(
h
->
gamma
, h->
sˇÀdmón
);

241 
	}
}

243 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

245 
	`cv¨_‰ì
(
h™dÀ
);

246 
	}
}

248 c⁄° *
	$cv¨_ußge
()

250 
off£t
;

252 i‡(
ußge
[0])

253  
ußge
;

255 
off£t
 = 0;

257 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

259 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

262 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

263 "\t%s\t\t%.1f\n", 
MEAN
, 
MEAN_DEFAULT
);

264 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

265 "\t%s\t\t%.1f\n", 
GAMMA
, 
GAMMA_DEFAULT
);

267 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

269 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

270 
DEFAULT_KEY_VALUE_DELIMITER
);

271 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

273 
MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
MEAN_DEFAULT
,

274 
DEFAULT_PARAMETER_DELIMITER
,

275 
GAMMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
GAMMA_DEFAULT
);

277  
ußge
;

278 
	}
}

280 c⁄° *
	$cv¨_vîsi⁄
()

282  
VERSION
;

283 
	}
}

	@cvars/cvar-lognormal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-logn‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RLN_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RLN_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

53 i‡(
h™dÀ
.
sh≠e
 < 0) {

54 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

55 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sh≠e
);

56 
out
;

59 i‡(
h™dÀ
.
sˇÀ
 < 0) {

60 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

61 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

62 
out
;

65 
t
 = 
	`unu£d_tokís
(
li°_hód
);

66 i‡(
t
) {

67 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

68 
out
;

72 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

76 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

77 i‡(!
°©e
) {

78 
	`cv¨_log_îr‹
("Out of memory");

79 
out
;

82 *
°©e
 = 
h™dÀ
;

84 
out
:

85 
	`‰ì_tokís
(
li°_hód
);

87 
	`cv¨_åa˚
("exit");

88  
°©e
;

89 
	}
}

91 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

93 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

95 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

98 
	}
}

100 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

102 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

104 i‡(!
h
) {

105 
	`cv¨_åa˚
("NULL cvar_handle");

109 i‡(!
vÆue
) {

110 
	`cv¨_åa˚
("NULL value");

114 *
vÆue
 = 
	`rds_logn‹mÆ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

117 
	}
}

119 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

121 
	`cv¨_‰ì
(
h™dÀ
);

122 
	}
}

124 c⁄° *
	$cv¨_ußge
()

126 
off£t
;

128 i‡(
ußge
[0])

129  
ußge
;

131 
off£t
 = 0;

133 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "\t%s\t\t%.1f\n", 
RLN_SHAPE
, 
RLN_SHAPE_DEFAULT
);

140 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

141 "\t%s\t\t%.1f\n", 
RLN_SCALE
, 
RLN_SCALE_DEFAULT
);

143 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

145 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

146 
DEFAULT_KEY_VALUE_DELIMITER
);

148 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 
RLN_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SHAPE_DEFAULT
,

151 
DEFAULT_PARAMETER_DELIMITER
,

152 
RLN_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SCALE_DEFAULT
);

154  
ußge
;

155 
	}
}

157 c⁄° *
	$cv¨_vîsi⁄
()

159  
VERSION
;

160 
	}
}

	@cvars/cvar-lognormal.h

10 #i‚de‡
_RAND_LOGNORMAL_H


11 
	#_RAND_LOGNORMAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RLN_SHAPE
 "sh≠e"

	)

17 
	#RLN_SCALE
 "sˇÀ"

	)

20 
	#RLN_SHAPE_DEFAULT
 1.0

	)

21 
	#RLN_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-normal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-n‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RN_MEAN_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_SIGMA
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sigma
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sigma
 = 
RN_SIGMA_DEFAULT
;

51 
	`cv¨_åa˚
("mó¿%lf, sigm®%lf", 
h™dÀ
.
món
, h™dÀ.
sigma
);

53 
t
 = 
	`unu£d_tokís
(
li°_hód
);

54 i‡(
t
) {

55 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

56 
out
;

60 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

64 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

65 i‡(!
°©e
) {

66 
	`cv¨_log_îr‹
("Out of memory");

67 
out
;

70 *
°©e
 = 
h™dÀ
;

72 
out
:

73 
	`‰ì_tokís
(
li°_hód
);

75 
	`cv¨_åa˚
("exit");

76  
°©e
;

77 
	}
}

79 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

81 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

83 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

86 
	}
}

88 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

90 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

92 i‡(!
h
) {

93 
	`cv¨_åa˚
("NULL cvar_handle");

97 i‡(!
vÆue
) {

98 
	`cv¨_åa˚
("NULL value");

102 *
vÆue
 = 
	`rds_n‹mÆ
(&
h
->
°©e
, h->
món
, h->
sigma
);

105 
	}
}

107 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

109 
	`cv¨_‰ì
(
h™dÀ
);

110 
	}
}

112 c⁄° *
	$cv¨_ußge
()

114 
off£t
;

116 i‡(
ußge
[0])

117  
ußge
;

119 
off£t
 = 0;

121 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

123 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

127 "\t%s\t\t%.1f\n", 
RN_MEAN
, 
RN_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "\t%s\t\t%.1f\n", 
RN_SIGMA
, 
RN_SIGMA_DEFAULT
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

134 
DEFAULT_KEY_VALUE_DELIMITER
);

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
RN_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_MEAN_DEFAULT
,

139 
DEFAULT_PARAMETER_DELIMITER
,

140 
RN_SIGMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_SIGMA_DEFAULT
);

142  
ußge
;

143 
	}
}

145 c⁄° *
	$cv¨_vîsi⁄
()

147  
VERSION
;

148 
	}
}

	@cvars/cvar-normal.h

9 #i‚de‡
_RAND_NORMAL_H


10 
	#_RAND_NORMAL_H


	)

12 
	~"mtwi°/mtwi°.h
"

15 
	#RN_MEAN
 "món"

	)

16 
	#RN_SIGMA
 "sigma"

	)

19 
	#RN_MEAN_DEFAULT
 0.0

	)

20 
	#RN_SIGMA_DEFAULT
 1.0

	)

22 
	#VERSION
 "0.1.1 (Æpha)"

	)

25 
	sh™dÀ
 {

26 
mt_°©e
 
	m°©e
;

27 
	mmón
;

28 
	msigma
;

29 } 
	th™dÀ_t
;

32 
	#USAGE_LEN
 2048

	)

34 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-triangular.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-åünguœr.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RT_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RT_UPPER_DEFAULT
;

51 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_MODE
);

52 i‡(
t
 &&Å->
vÆue
) {

53 
t
->
u£d
 = 1;

54 
h™dÀ
.
mode
 = 
	`©of
(
t
->
vÆue
);

56 
h™dÀ
.
mode
 = 
RT_MODE_DEFAULT
;

58 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf, modê%lf", 
h™dÀ
.
lowî
,

59 
h™dÀ
.
uµî
, h™dÀ.
mode
);

62 i‡(
h™dÀ
.
uµî
 < h™dÀ.
lowî
) {

63 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

64 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

65 
out
;

68 i‡((
h™dÀ
.
mode
 > h™dÀ.
uµî
Ë|| (h™dÀ.modê< h™dÀ.
lowî
)) {

69 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lf, mode = %lfánd "

71 
h™dÀ
.
lowî
, h™dÀ.
mode
, h™dÀ.
uµî
);

72 
out
;

76 
t
 = 
	`unu£d_tokís
(
li°_hód
);

77 i‡(
t
) {

78 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

79 
out
;

83 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

87 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

88 i‡(!
°©e
) {

89 
	`cv¨_log_îr‹
("Out of memory");

90 
out
;

93 *
°©e
 = 
h™dÀ
;

95 
out
:

96 
	`‰ì_tokís
(
li°_hód
);

98 
	`cv¨_åa˚
("exit");

99  
°©e
;

100 
	}
}

102 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

104 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

106 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

109 
	}
}

111 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

113 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

115 i‡(!
h
) {

116 
	`cv¨_log_îr‹
("NULL cvar_handle");

120 i‡(!
vÆue
) {

121 
	`cv¨_log_îr‹
("NULL value");

125 *
vÆue
 = 
	`rds_åünguœr
(&
h
->
°©e
, h->
lowî
, h->
uµî
, h->
mode
);

128 
	}
}

130 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

132 
	`cv¨_‰ì
(
h™dÀ
);

133 
	}
}

135 c⁄° *
	$cv¨_ußge
()

137 
off£t
;

139 i‡(
ußge
[0])

140  
ußge
;

142 
off£t
 = 0;

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 "\t%s\t\t%.1f\n", 
RT_LOWER
, 
RT_LOWER_DEFAULT
);

151 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

152 "\t%s\t\t%.1f\n", 
RT_UPPER
, 
RT_UPPER_DEFAULT
);

153 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

154 "\t%s\t\t%.1f\n", 
RT_MODE
, 
RT_MODE_DEFAULT
);

156 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

158 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

159 
DEFAULT_KEY_VALUE_DELIMITER
);

161 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

163 
RT_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_LOWER_DEFAULT
,

164 
DEFAULT_PARAMETER_DELIMITER
,

165 
RT_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_UPPER_DEFAULT
,

166 
DEFAULT_PARAMETER_DELIMITER
,

167 
RT_MODE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_MODE_DEFAULT
);

169  
ußge
;

170 
	}
}

172 c⁄° *
	$cv¨_vîsi⁄
()

174  
VERSION
;

175 
	}
}

	@cvars/cvar-triangular.h

10 #i‚de‡
_RAND_TRIANGULAR_H


11 
	#_RAND_TRIANGULAR_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RT_LOWER
 "lowî"

	)

17 
	#RT_UPPER
 "uµî"

	)

18 
	#RT_MODE
 "mode"

	)

21 
	#RT_LOWER_DEFAULT
 0.0

	)

22 
	#RT_UPPER_DEFAULT
 1.0

	)

23 
	#RT_MODE_DEFAULT
 0.5

	)

25 
	#VERSION
 "0.1.1 (Æpha)"

	)

28 
	sh™dÀ
 {

29 
mt_°©e
 
	m°©e
;

30 
	mlowî
;

31 
	muµî
;

32 
	mmode
;

33 } 
	th™dÀ_t
;

36 
	#USAGE_LEN
 2048

	)

38 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-uniform.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-unif‹m.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RU_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RU_UPPER_DEFAULT
;

51 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

54 i‡(
h™dÀ
.
lowî
 > h™dÀ.
uµî
) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

56 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

59 
t
 = 
	`unu£d_tokís
(
li°_hód
);

60 i‡(
t
) {

61 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

62 
out
;

66 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

70 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

71 i‡(!
°©e
) {

72 
	`cv¨_log_îr‹
("Out of memory");

73 
out
;

76 *
°©e
 = 
h™dÀ
;

78 
out
:

79 
	`‰ì_tokís
(
li°_hód
);

81 
	`cv¨_åa˚
("exit");

82  
°©e
;

83 
	}
}

85 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

87 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

89 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

92 
	}
}

94 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

96 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

98 i‡(!
h
) {

99 
	`cv¨_log_îr‹
("NULL cvar_handle");

103 i‡(!
vÆue
) {

104 
	`cv¨_log_îr‹
("NULL value");

108 *
vÆue
 = 
	`rds_unif‹m
(&
h
->
°©e
, h->
lowî
, h->
uµî
);

111 
	}
}

113 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

115 
	`cv¨_‰ì
(
h™dÀ
);

116 
	}
}

118 c⁄° *
	$cv¨_ußge
()

120 
off£t
;

122 i‡(
ußge
[0])

123  
ußge
;

125 
off£t
 = 0;

127 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

132 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "\t%s\t\t%.1f\n", 
RU_LOWER
, 
RU_LOWER_DEFAULT
);

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 "\t%s\t\t%.1f\n", 
RU_UPPER
, 
RU_UPPER_DEFAULT
);

137 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

140 
DEFAULT_KEY_VALUE_DELIMITER
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

143 
RU_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_LOWER_DEFAULT
,

144 
DEFAULT_PARAMETER_DELIMITER
,

145 
RU_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_UPPER_DEFAULT
);

147  
ußge
;

148 
	}
}

150 c⁄° *
	$cv¨_vîsi⁄
()

152  
VERSION
;

153 
	}
}

	@cvars/cvar-uniform.h

10 #i‚de‡
_RAND_UNIFORM_H


11 
	#_RAND_UNIFORM_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RU_LOWER
 "lowî"

	)

17 
	#RU_UPPER
 "uµî"

	)

20 
	#RU_LOWER_DEFAULT
 0.0

	)

21 
	#RU_UPPER_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	mlowî
;

29 
	muµî
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-weibull.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-weibuŒ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RW_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RW_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

56 "n⁄-zîo,Öosôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
sˇÀ
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

62 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_weibuŒ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%.1f\n", 
RW_SHAPE
, 
RW_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RW_SCALE
, 
RW_SCALE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RW_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RW_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SCALE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-weibull.h

10 #i‚de‡
_RAND_WEIBULL_H


11 
	#_RAND_WEIBULL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RW_SHAPE
 "sh≠e"

	)

17 
	#RW_SCALE
 "sˇÀ"

	)

20 
	#RW_SHAPE_DEFAULT
 1.0

	)

21 
	#RW_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar.h

9 #i‚de‡
_CVAR_H


10 
	#_CVAR_H


	)

22 
cv¨_moduÀ_öô
();

37 *
cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

38 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
±r
));

51 
	`cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
);

62 
	`cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
);

74 
	`cv¨_‰ì_h™dÀ
(*
cv¨_h™dÀ
, (*
cv¨_‰ì
)(*
±r
));

87 
	`cv¨_moduÀ_exô
();

98 c⁄° *
	`cv¨_ußge
();

108 c⁄° *
	`cv¨_vîsi⁄
();

	@cvars/cvar_tokens.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"cv¨_åa˚.h
"

12 
	~"cv¨_tokís.h
"

19 
	$tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

20 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
)

22 *
∑øm
;

23 *
∑øm_°¨t
, *
∑øm_íd
;

24 *
key_°¨t
, *
key_íd
;

25 
cv¨_tokí_t
 *
lhód
, *
¥ev
, *
cuº
;

26 
m‹e_∑øms
;

27 
no_vÆue
;

28 
ªt
 = 0;

30 i‡(!
∑ømëîs
)

31 
out
;

33 
ªt
 = -1;

35 
lhód
 = 
¥ev
 = 
NULL
;

37 
∑øm
 = 
	`°rdup
(
∑ømëîs
);

38 i‡(!
∑øm
) {

39 
	`cv¨_log_îr‹
("Out of memory");

40 
˛ónup
;

43 
∑øm_°¨t
 = 
∑øm
;

44 
m‹e_∑øms
 = 1;

46 
m‹e_∑øms
) {

47 
∑øm_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
∑ømëî_dñimôî
);

48 i‡(
∑øm_íd
)

49 *
∑øm_íd
 = '\0';

51 
∑øm_íd
 = 
∑øm_°¨t
 + 
	`°æí
(param_start);

52 
m‹e_∑øms
 = 0;

55 i‡(
∑øm_°¨t
 !
∑øm_íd
) {

56 
key_°¨t
 = 
∑øm_°¨t
;

57 
key_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
key_vÆue_dñimôî
);

58 i‡(
key_íd
) {

59 *
key_íd
 = '\0';

60 
no_vÆue
 = 0;

62 
key_íd
 = 
∑øm_íd
;

63 
no_vÆue
 = 1;

66 i‡(
key_°¨t
 =
key_íd
) {

67 
	`cv¨_log_îr‹
("Empty keyátÖosition %lu inÖarameter string "

68 "\"%s\"", (
key_°¨t
 - 
∑øm
)/() + 1,

69 
∑ømëîs
);

70 
˛ónup
;

74 
cuº
 = (
cv¨_tokí_t
 *Ë
	`mÆloc
((cvar_token_t));

75 i‡(!
cuº
) {

76 
	`cv¨_log_îr‹
("Out of memory");

77 
˛ónup
;

80 
	`mem£t
(
cuº
, 0x00, (
cv¨_tokí_t
));

82 
cuº
->
key
 = 
	`°rdup
(
key_°¨t
);

83 i‡(!
cuº
->
key
) {

84 
	`cv¨_log_îr‹
("Out of memory");

85 
˛ónup
;

88 i‡(!
no_vÆue
) {

89 
cuº
->
vÆue
 = 
	`°rdup
(
key_íd
+1);

90 i‡(!
cuº
->
vÆue
) {

91 
	`cv¨_log_îr‹
("Out of memory");

92 
˛ónup
;

96 i‡(!
¥ev
)

97 
lhód
 = 
¥ev
 = 
cuº
;

99 
¥ev
->
√xt
 = 
cuº
;

100 
¥ev
 = 
cuº
;

104 i‡(
m‹e_∑øms
)

105 
∑øm_°¨t
 = 
∑øm_íd
 + 1;

108 *
li°_hód
 = 
lhód
;

109 
ªt
 = 0;

111 
out
:

112  
ªt
;

114 
˛ónup
:

115 
	`‰ì_tokís
(
lhód
);

116 
lhód
 = 
NULL
;

117 
out
;

118 
	}
}

125 
cv¨_tokí_t
 *
	$föd_tokí
(
cv¨_tokí_t
 *
li°_hód
, c⁄° *
key
)

127 
cv¨_tokí_t
 *
t
;

129 i‡(!
li°_hód
 || !
key
)

130  
NULL
;

132 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

133 i‡(
t
->
key
 && !
	`°rcmp
(t->key, key))

134  
t
;

137  
NULL
;

138 
	}
}

145 
cv¨_tokí_t
 *
	$unu£d_tokís
(
cv¨_tokí_t
 *
li°_hód
)

147 
cv¨_tokí_t
 *
t
;

149 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

150 i‡(!
t
->
u£d
)

154  
t
;

155 
	}
}

157 
	$‰ì_tokí
(
cv¨_tokí_t
 *
tokí
)

159 i‡(!
tokí
)

162 i‡(
tokí
->
key
)

163 
	`‰ì
(
tokí
->
key
);

164 i‡(
tokí
->
vÆue
)

165 
	`‰ì
(
tokí
->
vÆue
);

167 
	`‰ì
(
tokí
);

170 
	}
}

176 
	$‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
)

178 
cv¨_tokí_t
 *
cuº
;

180 i‡(!
li°_hód
)

183 (
cuº
 = 
li°_hód
->
√xt
Ë!
NULL
) {

184 
li°_hód
->
√xt
 = 
cuº
->next;

185 
	`‰ì_tokí
(
cuº
);

188 
	`‰ì_tokí
(
li°_hód
);

191 
	}
}

	@cvars/cvar_tokens.h

9 #i‚de‡
_CVAR_TOKENS_H


10 
	#_CVAR_TOKENS_H


	)

12 
	#DEFAULT_PARAMETER_DELIMITER
 ';'

	)

13 
	#DEFAULT_KEY_VALUE_DELIMITER
 ':'

	)

16 
	scv¨_tokí
 {

17 *
	mkey
;

18 *
	mvÆue
;

19 
	mu£d
;

20 
cv¨_tokí
 *
	m√xt
;

21 } 
	tcv¨_tokí_t
;

27 
tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

28 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
);

34 
cv¨_tokí_t
 *
föd_tokí
(cv¨_tokí_à*
li°_hód
, c⁄° *
key
);

40 
cv¨_tokí_t
 *
unu£d_tokís
(cv¨_tokí_à*
li°_hód
);

46 
‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
);

	@cvars/cvar_trace.h

9 #i‚de‡
_CVAR_TRACE_H


10 
	#_CVAR_TRACE_H


	)

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

15 
	#cv¨_log_îr‹
(
fmt
, ...Ë
	`Ârötf
(
°dîr
, fmà".\n", ##
__VA_ARGS__
)

	)

17 #ifde‡
DEBUG


19 
	#cv¨_åa˚
(
fmt
, ...Ë
	`Ârötf
(
°dout
, "%s: %d: %s: " fmt ".\n",\

20 
__FILE__
, 
__LINE__
, 
__func__
, ##
__VA_ARGS__
)

	)

23 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

25 *
buf
 = (*)
buff
;

26 
i
;

27 *
sbuf
 = 
NULL
;

29 i‡(
Àn
 == 0)

32 
sbuf
 = (*)
	`mÆloc
(2 + 2*
Àn
 + 1);

33 i‡(
sbuf
 =
NULL
) {

34 
	`Ârötf
(
°dout
, "out of memory. unableÅoÖrint "

39 
sbuf
[2*
Àn
 + 2] = '\0';

41 
	`•rötf
(
sbuf
, "%s", "0x");

43 
i
 = 0; i < 
Àn
; i++) {

44 i‡(((
buf
[
i
] & 0xF0) >> 4) < 0x0A)

45 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", '0' +

46 ()((
buf
[
i
] & 0xF0) >> 4));

48 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", 'a' +

49 (Ë(((
buf
[
i
] & 0xF0) >> 4) - 0x0A));

51 i‡((
buf
[
i
] & 0x0F) < 0x0A)

52 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", '0' +

53 ()(
buf
[
i
] & 0x0F));

55 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", 'a' +

56 (Ë((
buf
[
i
] & 0x0F) - 0x0A));

59 
	`Ârötf
(
°dout
, "%s.\n", 
sbuf
);

60 
	`‰ì
(
sbuf
);

63 
	}
}

67 
	#cv¨_åa˚
(
fmt
, ...)

	)

69 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

72 
	}
}

	@cvars/mtwist/mttest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

72 
	~"mtwi°.h
"

73 
	~<öây≥s.h
>

74 
	~<uni°d.h
>

75 
	~<°dio.h
>

76 
	~<°dlib.h
>

77 
	~<sys/ªsour˚.h
>

78 
	~<sys/time.h
>

80 
maö
(
¨gc
, * 
¨gv
[]);

81 
ªp‹t_timög
(
lo›s
, 
rußge
 * 
thí
);

82 
ªp‹t_˛ock_timög
(
timevÆ
 * 
thí
);

87 
	#TIMING_LOOP_BASE
 1000000

	)

92 
	#TIMING_LOOPS
 (300 * 
TIMING_LOOP_BASE
)

	)

102 
uöt32_t
 
	gc‹ª˘_vÆues
[] =

1106 
	$maö
(

1107 
¨gc
,

1108 * 
¨gv
[])

1110 
i
;

1111 
	`uöt32_t
 (*
fun˝å
)();

1112 
uöt32_t
 
øndom_vÆue
;

1113 
uöt64_t
 
l⁄gl⁄g_vÆue
;

1114 
doubÀ_vÆue
;

1115 vﬁ©ûê
uöt32_t
 
dummy_l⁄g
;

1116 vﬁ©ûê
uöt64_t
 
dummy_l⁄gl⁄g
;

1117 vﬁ©ûê
dummy_doubÀ
;

1118 
uöt32_t
 
good£edªsu…
;

1119 
FILE
* 
ßvefûe
;

1120 
uöt32_t
 
£edªsu…
;

1121 
mt_°©e
 
°©e
;

1122 
rußge
 
thí
;

1123 
timevÆ
 
timeofday
;

1125 
timög_lo›s
 = 
TIMING_LOOPS
;

1127 
	`£tbuf
(
°dout
, (*Ë
NULL
);

1132 i‡(
¨gc
 > 1)

1133 
timög_lo›s
 = 
	`©ﬁ
(
¨gv
[1]Ë* 
TIMING_LOOP_BASE
;

1140 (Ë
	`¥ötf
 ("ValidityÅest...");

1141 
	`mt_£ed32√w
(5489);

1142 
ßvefûe
 = 
	`f›í
("mtsave", "w");

1143 
	`mt_ßve°©e
(
ßvefûe
);

1144 
	`f˛o£
(
ßvefûe
);

1145 
	`mt_£ed32√w
(1);

1146 
ßvefûe
 = 
	`f›í
("mtsave", "r");

1147 
	`mt_lﬂd°©e
(
ßvefûe
);

1148 
	`f˛o£
(
ßvefûe
);

1149 
	`u∆ök
("mtsave");

1150 
i
 = 0; i <  
c‹ª˘_vÆues
 /  correct_values[0]; i++)

1152 
øndom_vÆue
 = 
	`mt_Ã™d
();

1153 i‡(
øndom_vÆue
 !
c‹ª˘_vÆues
[
i
])

1155 (Ë
	`Ârötf
 (
°dîr
,

1156 "FaûuªáàvÆuê%ld:Éx≥˘ed %" 
PRIu32
 ", got %" PRIu32 "\n",

1157 
i
, 
c‹ª˘_vÆues
[i], 
øndom_vÆue
);

1161 (Ë
	`¥ötf
 ("passed.\n");

1166 
fun˝å
 = &
mt_Ã™d
;

1167 
øndom_vÆue
 = (*
fun˝å
)();

1176 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g†took ", 
timög_lo›s
);

1177 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1178 
i
 = 0; i < 
timög_lo›s
; i++)

1179 
øndom_vÆue
 +
	`mt_Ã™d
();

1180 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1182 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g†took ", 
timög_lo›s
);

1183 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1184 
i
 = 0; i < 
timög_lo›s
; i++)

1185 
øndom_vÆue
 +
	`mts_Ã™d
(&
°©e
);

1186 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1188 
dummy_l⁄g
 = 
øndom_vÆue
;

1189 ()
dummy_l⁄g
;

1191 
l⁄gl⁄g_vÆue
 = 0;

1202 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄gÜ⁄g†took ", 
timög_lo›s
);

1203 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1204 
i
 = 0; i < 
timög_lo›s
; i++)

1205 
l⁄gl⁄g_vÆue
 +
	`mt_Œønd
();

1206 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1208 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄gÜ⁄g†took ", 
timög_lo›s
);

1209 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1210 
i
 = 0; i < 
timög_lo›s
; i++)

1211 
l⁄gl⁄g_vÆue
 +
	`mts_Œønd
(&
°©e
);

1212 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1214 
dummy_l⁄gl⁄g
 = 
l⁄gl⁄g_vÆue
;

1215 ()
dummy_l⁄gl⁄g
;

1217 
doubÀ_vÆue
 = 0.0;

1223 (Ë
	`¥ötf
 ("%ld deÁu… fa° doubÀ†took ", 
timög_lo›s
);

1224 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1225 
i
 = 0; i < 
timög_lo›s
; i++)

1226 
doubÀ_vÆue
 +
	`mt_dønd
();

1227 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1229 (Ë
	`¥ötf
 ("%ld sèã-ba£d fa° doubÀ†took ", 
timög_lo›s
);

1230 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1231 
i
 = 0; i < 
timög_lo›s
; i++)

1232 
doubÀ_vÆue
 +
	`mts_dønd
(&
°©e
);

1233 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1235 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g doubÀ†took ", 
timög_lo›s
);

1236 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1237 
i
 = 0; i < 
timög_lo›s
; i++)

1238 
doubÀ_vÆue
 +
	`mt_ldønd
();

1239 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1241 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g doubÀ†took ", 
timög_lo›s
);

1242 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1243 
i
 = 0; i < 
timög_lo›s
; i++)

1244 
doubÀ_vÆue
 +
	`mts_ldønd
(&
°©e
);

1245 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1247 
dummy_doubÀ
 = 
doubÀ_vÆue
;

1248 ()
dummy_doubÀ
;

1253 (Ë
	`¥ötf
 ("Initializing from mt_seedÅook ");

1254 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1255 
£edªsu…
 = 
	`mt_£ed
();

1256 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1257 i‡(
£edªsu…
 == 0)

1258 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_seed!\n");

1260 (Ë
	`¥ötf
 ("Initializing from mt_goodseedÅook ");

1261 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1262 
good£edªsu…
 = 
	`mt_good£ed
();

1263 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1264 i‡(
good£edªsu…
 == 0)

1265 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_goodseed!\n");

1266 i‡(
£edªsu…
 =
good£edªsu…
)

1267 (Ë
	`¥ötf
 ("OOPS! mt_seedánd mt_goodseed bothÑeturned 0x%x!\n",

1268 
£edªsu…
);

1270 (Ë
	`¥ötf
 ("Initializing from mt_bestseedÅook ");

1271 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1272 
	`mt_be°£ed
();

1273 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1276 
	}
}

1278 
	$ªp‹t_timög
(

1279 
lo›s
,

1280 
rußge
 * 
thí
)

1282 
diff
;

1283 
mi¸odiff
;

1284 
rußge
 
now
;

1285 
£cs
;

1287 
	`gërußge
(
RUSAGE_SELF
, &
now
);

1288 
diff
 = 
now
.
ru_utime
.
tv_£c
 - 
thí
->ru_utime.tv_sec;

1289 
mi¸odiff
 = 
now
.
ru_utime
.
tv_u£c
 - 
thí
->ru_utime.tv_usec;

1290 i‡(
mi¸odiff
 < 0)

1292 
diff
--;

1293 
mi¸odiff
 += 1000000;

1295 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1296 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄d†(%ld/£c).\n", 
diff
, 
mi¸odiff
,

1297 ()(
lo›s
 / 
£cs
));

1298 
	}
}

1300 
	$ªp‹t_˛ock_timög
(

1301 
timevÆ
 * 
thí
)

1303 
diff
;

1304 
mi¸odiff
;

1305 
timevÆ
 
now
;

1306 
£cs
;

1308 
	`gëtimeofday
(&
now
, 
NULL
);

1309 
diff
 = 
now
.
tv_£c
 - 
thí
->tv_sec;

1310 
mi¸odiff
 = 
now
.
tv_u£c
 - 
thí
->tv_usec;

1311 i‡(
mi¸odiff
 < 0)

1313 
diff
--;

1314 
mi¸odiff
 += 1000000;

1316 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1317 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄ds.\n", 
diff
, 
mi¸odiff
);

1318 
	}
}

	@cvars/mtwist/mtwist.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

179 #ifde‡
_WIN32


180 #unde‡
WIN32


181 
	#WIN32


	)

184 
	~<öây≥s.h
>

185 
	~<°dio.h
>

186 
	~<°dlib.h
>

187 #ifde‡
WIN32


188 
	~<sys/timeb.h
>

190 
	~<sys/time.h
>

193 
	~"mtwi°.h
"

203 
uöt32_t
 
	$mts_Ã™d
(

204 
mt_°©e
* 
°©e
)

206 
uöt32_t
 
øndom_vÆue
;

208 i‡(
°©e
->
°©ïå
 <= 0)

209 
	`mts_ª‰esh
(
°©e
);

211 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

212 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

213  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

214 
	}
}

216 #ifde‡
UINT64_MAX


232 
uöt64_t
 
	$mts_Œønd
(

233 
mt_°©e
* 
°©e
)

235 
uöt32_t
 
øndom_vÆue_1
;

236 
uöt32_t
 
øndom_vÆue_2
;

243 i‡(--
°©e
->
°©ïå
 <= 0)

245 i‡(
°©e
->
°©ïå
 < 0)

247 
	`mts_ª‰esh
(
°©e
);

248 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

252 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

253 
	`mts_ª‰esh
(
°©e
);

257 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

259 
	`MT_TEMPER
(
øndom_vÆue_1
);

261 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

262 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

264  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

265 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

266 
	}
}

274 
	$mts_dønd
(

275 
mt_°©e
* 
°©e
)

277 
uöt32_t
 
øndom_vÆue
;

279 i‡(
°©e
->
°©ïå
 <= 0)

280 
	`mts_ª‰esh
(
°©e
);

282 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

283 
	`MT_TEMPER
(
øndom_vÆue
);

285  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

286 
	}
}

293 
	$mts_ldønd
(

294 
mt_°©e
* 
°©e
)

296 #ifde‡
UINT64_MAX


297 
uöt64_t
 
föÆ_vÆue
;

299 
uöt32_t
 
øndom_vÆue_1
;

300 
uöt32_t
 
øndom_vÆue_2
;

307 i‡(--
°©e
->
°©ïå
 <= 0)

309 i‡(
°©e
->
°©ïå
 < 0)

311 
	`mts_ª‰esh
(
°©e
);

312 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

316 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

317 
	`mts_ª‰esh
(
°©e
);

321 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

323 
	`MT_TEMPER
(
øndom_vÆue_1
);

325 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

326 
	`MT_TEMPER
(
øndom_vÆue_2
);

328 #ifde‡
UINT64_MAX


329 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

330  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

332  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

334 
	}
}

342 
uöt32_t
 
	$mt_Ã™d
()

344 
uöt32_t
 
øndom_vÆue
;

346 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

347 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

349 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

350 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

352  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

353 
	}
}

355 #ifde‡
UINT64_MAX


362 
uöt64_t
 
	$mt_Œønd
()

364 
uöt32_t
 
øndom_vÆue_1
;

365 
uöt32_t
 
øndom_vÆue_2
;

372 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

374 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

376 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

377 
øndom_vÆue_1
 =

378 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

382 
øndom_vÆue_1
 =

383 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

384 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

388 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

390 
	`MT_TEMPER
(
øndom_vÆue_1
);

392 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

393 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

395  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

396 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

397 
	}
}

405 
	$mt_dønd
()

407 
uöt32_t
 
øndom_vÆue
;

409 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

410 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

412 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

413 
	`MT_TEMPER
(
øndom_vÆue
);

415  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

416 
	}
}

423 
	$mt_ldønd
()

425 #ifde‡
UINT64_MAX


426 
uöt64_t
 
föÆ_vÆue
;

428 
uöt32_t
 
øndom_vÆue_1
;

429 
uöt32_t
 
øndom_vÆue_2
;

436 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

438 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

440 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

441 
øndom_vÆue_1
 =

442 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

446 
øndom_vÆue_1
 =

447 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

448 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

452 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

454 
	`MT_TEMPER
(
øndom_vÆue_1
);

456 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

457 
	`MT_TEMPER
(
øndom_vÆue_2
);

459 #ifde‡
UINT64_MAX


460 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

461  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

463  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

465 
	}
}

467 #ifde‡
__˝lu•lus


471 
	g°d
::
o°ªam
& 
›î©‹
<<(

472 
°d
::
o°ªam
& 
°ªam
,

473 c⁄° 
	gmt_¥ng
& 
	g∫g
)

475 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

477 i‡(!(
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©evec
[
i
] << ' '))

478  
	g°ªam
;

481  
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©ïå
;

487 
	g°d
::
i°ªam
& 
›î©‹
>>(

488 
°d
::
i°ªam
& 
°ªam
,

489 
	gmt_¥ng
& 
	g∫g
)

491 
	g∫g
.
	g°©e
.
	göôülized
 = 
∫g
.
°©e
.
°©ïå
 = 0;

492 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

494 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©evec
[
i
]))

495  
	g°ªam
;

498 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©ïå
))

500 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

501  
	g°ªam
;

507 i‡(
	g∫g
.
	g°©e
.
	g°©ïå
 < 0 ||Ñng.°©e.°©ïå > 
	gMT_STATE_SIZE
)

509 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

510  
	g°ªam
;

513 
mts_m¨k_öôülized
(&
∫g
.
°©e
);

515  
	g°ªam
;

522 
uöt32_t
 
mts_dev£ed
(
mt_°©e
* 
°©e
, * 
£ed_dev
);

533 
	#RECURRENCE_OFFSET
 397

	)

539 
	#MATRIX_A
 0x9908b0d‡

	)

549 
	#BIT_WIDTH
 32

	)

557 
	#UPPER_MASK
 0x80000000

	)

558 
	#LOWER_MASK
 0x7ffffff‡

	)

564 
	#COMBINE_BITS
(
x
, 
y
) \

565 (((
x
Ë& 
UPPER_MASK
Ë| ((
y
Ë& 
LOWER_MASK
))

	)

571 
	#MATRIX_MULTIPLY
(
‹igöÆ
, 
√w
) \

572 ((
‹igöÆ
Ë^ ((
√w
) >> 1) \

573 ^ 
m©rix_decidî
[(
√w
Ë& 0x1])

	)

579 
	#KNUTH_MULTIPLIER_OLD
 \

580 69069

	)

586 
	#KNUTH_MULTIPLIER_NEW
 \

587 1812433253ul

	)

588 
	#KNUTH_SHIFT
 30

589 

	)

593 
	#DEFAULT_SEED32_OLD
 \

594 4357

	)

595 
	#DEFAULT_SEED32_NEW
 \

596 5489ul

	)

601 
	#DEVRANDOM
 "/dev/øndom"

	)

602 
	#DEVURANDOM
 "/dev/uøndom"

	)

609 
mt_°©e
 
	gmt_deÁu…_°©e
;

620 
	gmt_32_to_doubÀ
;

622 
	gmt_64_to_doubÀ
;

632 
uöt32_t
 
	gm©rix_decidî
[2] =

633 {0x0, 
MATRIX_A
};

645 
	$mts_m¨k_öôülized
(

646 
mt_°©e
* 
°©e
)

648 
i
;

655 
mt_32_to_doubÀ
 = 1.0;

656 
i
 = 0; i < 
BIT_WIDTH
; i++)

657 
mt_32_to_doubÀ
 /= 2.0;

658 
mt_64_to_doubÀ
 = 
mt_32_to_doubÀ
;

659 
i
 = 0; i < 
BIT_WIDTH
; i++)

660 
mt_64_to_doubÀ
 /= 2.0;

662 
°©e
->
öôülized
 = 1;

663 
	}
}

682 
	$mts_£ed32
(

683 
mt_°©e
* 
°©e
,

684 
uöt32_t
 
£ed
)

686 
i
;

688 i‡(
£ed
 == 0)

689 
£ed
 = 
DEFAULT_SEED32_OLD
;

696 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffff;

697 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

698 
°©e
->
°©evec
[
i
] =

699 (
KNUTH_MULTIPLIER_OLD
 * 
°©e
->
°©evec
[
i
 + 1]) & 0xffffffff;

701 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

702 
	`mts_m¨k_öôülized
(
°©e
);

710 
	`mts_ª‰esh
(
°©e
);

711 
	}
}

718 
	$mts_£ed32√w
(

719 
mt_°©e
* 
°©e
,

720 
uöt32_t
 
£ed
)

722 
i
;

723 
uöt32_t
 
√xtvÆ
;

730 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffffUL;

731 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

733 
√xtvÆ
 = 
°©e
->
°©evec
[
i
 + 1] >> 
KNUTH_SHIFT
;

734 
√xtvÆ
 ^
°©e
->
°©evec
[
i
 + 1];

735 
√xtvÆ
 *
KNUTH_MULTIPLIER_NEW
;

736 
√xtvÆ
 +(
MT_STATE_SIZE
 - 1Ë- 
i
;

737 
°©e
->
°©evec
[
i
] = 
√xtvÆ
 & 0xffffffffUL;

740 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

741 
	`mts_m¨k_öôülized
(
°©e
);

749 
	`mts_ª‰esh
(
°©e
);

750 
	}
}

769 
	$mts_£edfuŒ
(

770 
mt_°©e
* 
°©e
,

771 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

774 
had_nz
 = 0;

775 
i
;

777 
i
 = 0; i < 
MT_STATE_SIZE
; i++)

779 i‡(
£eds
[
i
] != 0)

780 
had_nz
 = 1;

781 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 
i
 - 1] = 
£eds
[i];

784 i‡(!
had_nz
)

794 
	`ab‹t
();

797 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

798 
	`mts_m¨k_öôülized
(
°©e
);

799 
	}
}

807 
uöt32_t
 
	$mts_£ed
(

808 
mt_°©e
* 
°©e
)

810  
	`mts_dev£ed
(
°©e
, 
DEVURANDOM
);

811 
	}
}

819 
uöt32_t
 
	$mts_good£ed
(

820 
mt_°©e
* 
°©e
)

822  
	`mts_dev£ed
(
°©e
, 
DEVRANDOM
);

823 
	}
}

830 
uöt32_t
 
	$mts_dev£ed
(

831 
mt_°©e
* 
°©e
,

832 * 
£ed_dev
)

834 
byã§ód
;

835 
√xtbyã
;

836 
FILE
* 
ønfûe
;

839 
ønbuf„r
[ (
uöt32_t
)];

841 
uöt32_t
 
øndomvÆue
;

843 
øndomuni⁄
;

844 #ifde‡
WIN32


845 
_timeb
 
tb
;

847 
timevÆ
 
tv
;

850 
ønfûe
 = 
	`f›í
(
£ed_dev
, "rb");

856 i‡(
ønfûe
 =
NULL
)

857 
ønfûe
 = 
	`f›í
(
DEVRANDOM
, "rb");

858 i‡(
ønfûe
 !
NULL
)

860 
	`£tbuf
(
ønfûe
, 
NULL
);

861 
√xtbyã
 = 0;

862 
√xtbyã
 < () 
øndomuni⁄
.
ønbuf„r
;

863 
√xtbyã
 +
byã§ód
)

865 
byã§ód
 = 
	`‰ód
(&
øndomuni⁄
.
ønbuf„r
[
√xtbyã
], (
size_t
)1,

866  
øndomuni⁄
.
ønbuf„r
 - 
√xtbyã
, 
ønfûe
);

867 i‡(
byã§ód
 == 0)

870 
	`f˛o£
(
ønfûe
);

871 i‡(
√xtbyã
 = 
øndomuni⁄
.
ønbuf„r
)

873 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

874  
øndomuni⁄
.
øndomvÆue
;

883 #ifde‡
WIN32


884 (Ë
	`_·ime
 (&
tb
);

886 (Ë
	`gëtimeofday
 (&
tv
, 
NULL
);

892 #ifde‡
WIN32


893 
øndomuni⁄
.
øndomvÆue
 = 
tb
.
time
 * 1000 +Åb.
mûlôm
;

895 
øndomuni⁄
.
øndomvÆue
 = 
tv
.
tv_£c
 * 1000000 +Åv.
tv_u£c
;

897 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

898  
øndomuni⁄
.
øndomvÆue
;

899 
	}
}

910 
	$mts_be°£ed
(

911 
mt_°©e
* 
°©e
)

913 
byã§ód
;

914 
√xtbyã
;

915 
FILE
* 
ønfûe
;

917 
ønfûe
 = 
	`f›í
("/dev/random", "rb");

918 i‡(
ønfûe
 =
NULL
)

920 
	`mts_good£ed
(
°©e
);

924 
√xtbyã
 = 0;

925 
√xtbyã
 < () 
°©e
->
°©evec
;

926 
√xtbyã
 +
byã§ód
)

928 
byã§ód
 = 
	`‰ód
((*)&
°©e
->
°©evec
[0] + 
√xtbyã
, (
size_t
)1,

929  
°©e
->
°©evec
 - 
√xtbyã
, 
ønfûe
);

930 i‡(
byã§ód
 == 0)

935 
	`f˛o£
(
ønfûe
);

936 
	`mts_good£ed
(
°©e
);

940 
	`f˛o£
(
ønfûe
);

941 
	}
}

950 
	$mts_ª‰esh
(

951 
mt_°©e
* 
°©e
)

953 
i
;

954 
uöt32_t
*

955 
°©e_±r
;

956 
uöt32_t


957 
vÆue1
;

958 
uöt32_t


959 
vÆue2
;

965 i‡(!
°©e
->
öôülized
)

967 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1058 
°©e_±r
 = &
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1];

1059 
vÆue1
 = *
°©e_±r
;

1060 
i
 = (
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
) / 2; --i >= 0; )

1062 
°©e_±r
 -= 2;

1063 
vÆue2
 = 
°©e_±r
[1];

1064 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1065 
°©e_±r
[2] =

1066 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 2], 
vÆue1
);

1067 
vÆue1
 = 
°©e_±r
[0];

1068 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1069 
°©e_±r
[1] =

1070 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue2
);

1072 
vÆue2
 = *--
°©e_±r
;

1073 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1074 
°©e_±r
[1] =

1075 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue1
);

1077 
i
 = (
RECURRENCE_OFFSET
 - 1) / 2; --i >= 0; )

1079 
°©e_±r
 -= 2;

1080 
vÆue1
 = 
°©e_±r
[1];

1081 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1082 
°©e_±r
[2] =

1083 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 2],

1084 
vÆue2
);

1085 
vÆue2
 = 
°©e_±r
[0];

1086 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1087 
°©e_±r
[1] =

1088 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 1],

1089 
vÆue1
);

1097 
vÆue1
 = 
	`COMBINE_BITS
(
vÆue2
, 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1]);

1098 *
°©e_±r
 =

1099 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
], 
vÆue1
);

1105 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

1106 
	}
}

1114 
	$mts_ßve°©e
(

1115 
FILE
* 
°©efûe
,

1116 
mt_°©e
* 
°©e
)

1118 
i
;

1120 i‡(!
°©e
->
öôülized
)

1121 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1126 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1128 
	`Ârötf
(
°dîr
,

1130 
°©e
->
°©ïå
);

1131 
	`mts_ª‰esh
(
°©e
);

1134 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1136 i‡(
	`Ârötf
(
°©efûe
, "%" 
PRIu32
 " ", 
°©e
->
°©evec
[
i
]) < 0)

1140 i‡(
	`Ârötf
(
°©efûe
, "%d\n", 
°©e
->
°©ïå
) < 0)

1144 
	}
}

1149 
	$mts_lﬂd°©e
(

1150 
FILE
* 
°©efûe
,

1151 
mt_°©e
* 
°©e
)

1153 
i
;

1158 
°©e
->
öôülized
 = sèã->
°©ïå
 = 0;

1160 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1162 i‡(
	`fsˇnf
(
°©efûe
, "%" 
SCNu32
, &
°©e
->
°©evec
[
i
]) != 1)

1166 i‡(
	`fsˇnf
(
°©efûe
, "%d", &
°©e
->
°©ïå
) != 1)

1173 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1175 
°©e
->
°©ïå
 = 0;

1179 
	`mts_m¨k_öôülized
(
°©e
);

1182 
	}
}

1189 
	$mt_£ed32
(

1190 
uöt32_t
 
£ed
)

1192 
	`mts_£ed32
(&
mt_deÁu…_°©e
, 
£ed
);

1193 
	}
}

1200 
	$mt_£ed32√w
(

1201 
uöt32_t
 
£ed
)

1203 
	`mts_£ed32√w
(&
mt_deÁu…_°©e
, 
£ed
);

1204 
	}
}

1211 
	$mt_£edfuŒ
(

1212 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

1214 
	`mts_£edfuŒ
(&
mt_deÁu…_°©e
, 
£eds
);

1215 
	}
}

1220 
uöt32_t
 
	$mt_£ed
()

1222  
	`mts_£ed
(&
mt_deÁu…_°©e
);

1223 
	}
}

1228 
uöt32_t
 
	$mt_good£ed
()

1230  
	`mts_good£ed
(&
mt_deÁu…_°©e
);

1231 
	}
}

1236 
	$mt_be°£ed
()

1238 
	`mts_be°£ed
(&
mt_deÁu…_°©e
);

1239 
	}
}

1247 
mt_°©e
* 
	$mt_gë°©e
()

1249  &
mt_deÁu…_°©e
;

1250 
	}
}

1256 
	$mt_ßve°©e
(

1257 
FILE
* 
°©efûe
)

1259  
	`mts_ßve°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1260 
	}
}

1265 
	$mt_lﬂd°©e
(

1266 
FILE
* 
°©efûe
)

1268  
	`mts_lﬂd°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1269 
	}
}

	@cvars/mtwist/mtwist.h

1 #i‚de‡
MTWIST_H


2 
	#MTWIST_H


	)

144 
	~<°dio.h
>

145 #ifde‡
__˝lu•lus


146 
	~<io°ªam
>

149 
	#__STDC_LIMIT_MACROS


	)

150 
	~<°döt.h
>

157 
	#MT_STATE_SIZE
 624

	)

177 
uöt32_t
 
	m°©evec
[
MT_STATE_SIZE
];

179 
	m°©ïå
;

180 
	möôülized
;

182 
	tmt_°©e
;

184 #ifde‡
__˝lu•lus


192 
mts_m¨k_öôülized
(
mt_°©e
* 
°©e
);

194 
mts_£ed32
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

196 
mts_£ed32√w
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

198 
mts_£edfuŒ
(
mt_°©e
* 
°©e
,

199 
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

201 
uöt32_t
 
mts_£ed
(
mt_°©e
* 
°©e
);

207 
uöt32_t
 
mts_good£ed
(
mt_°©e
* 
°©e
);

214 
mts_be°£ed
(
mt_°©e
* 
°©e
);

222 
mts_ª‰esh
(
mt_°©e
* 
°©e
);

224 
mts_ßve°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

227 
mts_lﬂd°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

234 
mt_£ed32
(
uöt32_t
 
£ed
);

236 
mt_£ed32√w
(
uöt32_t
 
£ed
);

238 
mt_£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

240 
uöt32_t
 
mt_£ed
();

244 
uöt32_t
 
mt_good£ed
();

250 
mt_be°£ed
();

258 
mt_°©e
* 
mt_gë°©e
();

261 
mt_ßve°©e
(
FILE
* 
°©efûe
);

264 
mt_lﬂd°©e
(
FILE
* 
°©efûe
);

268 #ifde‡
__˝lu•lus


280 #ifde‡
__˝lu•lus


283 
uöt32_t
 
mts_Ã™d
(
mt_°©e
* 
°©e
);

285 #ifde‡
UINT64_MAX


286 
uöt64_t
 
mts_Œønd
(
mt_°©e
* 
°©e
);

289 
mts_dønd
(
mt_°©e
* 
°©e
);

292 
mts_ldønd
(
mt_°©e
* 
°©e
);

296 
uöt32_t
 
mt_Ã™d
();

297 #ifde‡
UINT64_MAX


298 
uöt64_t
 
mt_Œønd
();

301 
mt_dønd
();

304 
mt_ldønd
();

316 
	#MT_TEMPERING_MASK_B
 0x9d2c5680

	)

317 
	#MT_TEMPERING_MASK_C
 0xefc60000

	)

318 
	#MT_TEMPERING_SHIFT_U
(
y
) \

319 (
y
 >> 11)

	)

320 
	#MT_TEMPERING_SHIFT_S
(
y
) \

321 (
y
 << 7)

	)

322 
	#MT_TEMPERING_SHIFT_T
(
y
) \

323 (
y
 << 15)

	)

324 
	#MT_TEMPERING_SHIFT_L
(
y
) \

325 (
y
 >> 18)

	)

334 
	#MT_PRE_TEMPER
(
vÆue
) \

337 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

338 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

339 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

341 0)

	)

342 
	#MT_FINAL_TEMPER
(
vÆue
) \

343 ((
vÆue
Ë^ 
	`MT_TEMPERING_SHIFT_L
(vÆue))

	)

344 
	#MT_TEMPER
(
vÆue
) \

347 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

348 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

349 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

350 
vÆue
 ^
	`MT_TEMPERING_SHIFT_L
(value); \

352 0)

	)

362 
mt_°©e
 
mt_deÁu…_°©e
;

364 
mt_32_to_doubÀ
;

366 
mt_64_to_doubÀ
;

369 #ifde‡
__˝lu•lus


376 ˛as†
	cmt_¥ng


378 
‰õnd
 
˛ass
 
	gmt_empúiˇl_di°ributi⁄
;

379 
	gpublic
:

388 
mt_¥ng
(

389 
boﬁ
 
pickSìd
 = 
Ál£
)

393 
°©e
.
°©ïå
 = 0;

394 
	g°©e
.
	göôülized
 = 0;

395 i‡(
	gpickSìd
)

396 ()
mts_£ed
(&
°©e
);

398 
mt_¥ng
(
uöt32_t
 
√w£ed
)

401 
	g°©e
.
	g°©ïå
 = 0;

402 
	g°©e
.
	göôülized
 = 0;

403 
mts_£ed32
(&
°©e
, 
√w£ed
);

405 
mt_¥ng
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

408 
	g°©e
.
	g°©ïå
 = 0;

409 
	g°©e
.
	göôülized
 = 0;

410 
mts_£edfuŒ
(&
°©e
, 
£eds
);

412 ~
mt_¥ng
() { }

421 
£ed32
(
uöt32_t
 
√w£ed
)

424 
mts_£ed32
(&
°©e
, 
√w£ed
);

426 
£ed32√w
(
uöt32_t
 
√w£ed
)

429 
mts_£ed32√w
(&
°©e
, 
√w£ed
);

431 
£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

434 
mts_£edfuŒ
(&
°©e
, 
£eds
);

436 
uöt32_t
 
£ed
()

438  
mts_£ed
(&
°©e
);

440 
uöt32_t
 
good£ed
()

442  
mts_good£ed
(&
°©e
);

444 
be°£ed
()

446 
mts_be°£ed
(&
°©e
);

448 
‰õnd
 
	g°d
::
o°ªam
&

449 
›î©‹
<<(
°d
::
o°ªam
& 
°ªam
, c⁄° 
	gmt_¥ng
& 
	g∫g
);

450 
‰õnd
 
	g°d
::
i°ªam
&

451 
›î©‹
>>(
°d
::
i°ªam
& 
°ªam
, 
	gmt_¥ng
& 
	g∫g
);

456 
uöt32_t
 
Ã™d
()

458  
mts_Ã™d
(&
°©e
);

460 #ifde‡
UINT64_MAX


461 
uöt64_t
 
Œønd
()

463  
mts_Œønd
(&
°©e
);

466 
dønd
()

468  
mts_dønd
(&
°©e
);

470 
ldønd
()

472  
mts_ldønd
(&
°©e
);

485 
›î©‹
()()

487  
mts_dønd
(&
°©e
);

489 
	g¥Ÿe˘ed
:

493 
mt_°©e
 
°©e
;

	@cvars/mtwist/randistrs.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

105 
	~"mtwi°.h
"

106 
	~"øndi°rs.h
"

107 
	~<m©h.h
>

108 
	~<°dlib.h
>

149 #i‚de‡
RD_MAX_BIAS


150 
	#RD_MAX_BIAS
 0.0001

	)

152 #i‚de‡
RD_UNIFORM_THRESHOLD


153 
	#RD_UNIFORM_THRESHOLD
 (()(()(1u << 31Ë* 2.0 * 
RD_MAX_BIAS
))

	)

163 
öt32_t
 
	$rds_iunif‹m
(

164 
mt_°©e
 * 
°©e
,

165 
öt32_t
 
lowî
,

166 
öt32_t
 
uµî
)

168 
uöt32_t
 
ønge
 = 
uµî
 - 
lowî
;

171 i‡(
ønge
 <
RD_UNIFORM_THRESHOLD
)

172  
lowî
 + (
öt32_t
)(
	`mts_ldønd
(
°©e
Ë* 
ønge
);

190 #ifde‡
MT_CACHING


191 
uöt32_t
 
œ°ønge
 = 0;

192 
uöt32_t
 
øngemask
 = 0;

194 
uöt32_t
 
øngemask
 = 0;

196 
uöt32_t


197 
ønvÆ
;

199 #ifde‡
MT_CACHING


200 i‡(
ønge
 !
œ°ønge
)

212 #ifde‡
MT_CACHING


213 
œ°ønge
 = 
ønge
;

215 
øngemask
 = 1;

216 
øngemask
 < 
ønge
 &&Ñangemask != 0;

217 
øngemask
 <<= 1)

225 
øngemask
 -= 1;

233 
ønvÆ
 = 
	`mts_Ã™d
(
°©e
Ë& 
øngemask
;

235 
ønvÆ
 >
ønge
);

236  
lowî
 + 
ønvÆ
;

238 
	}
}

240 #ifde‡
INT64_MAX


245 
öt64_t
 
	$rds_liunif‹m
(

246 
mt_°©e
 * 
°©e
,

247 
öt64_t
 
lowî
,

248 
öt64_t
 
uµî
)

250 
uöt64_t
 
ønge
 = 
uµî
 - 
lowî
;

260 #ifde‡
MT_CACHING


261 
uöt32_t
 
œ°ønge
 = 0;

262 
uöt32_t
 
øngemask
 = 0;

264 
uöt32_t
 
øngemask
 = 0;

266 
uöt32_t
 
ønvÆ
;

268 #ifde‡
MT_CACHING


269 i‡(
ønge
 !
œ°ønge
)

275 #ifde‡
MT_CACHING


276 
œ°ønge
 = 
ønge
;

278 
øngemask
 = 1;

279 
øngemask
 < 
ønge
 &&Ñangemask != 0;

280 
øngemask
 <<= 1)

288 
øngemask
 -= 1;

296 
ønvÆ
 = 
	`mts_Œønd
(
°©e
Ë& 
øngemask
;

298 
ønvÆ
 >
ønge
);

299  
lowî
 + 
ønvÆ
;

300 
	}
}

306 
	$rds_unif‹m
(

307 
mt_°©e
 * 
°©e
,

308 
lowî
,

309 
uµî
)

311  
lowî
 + 
	`mts_dønd
(
°©e
Ë* (
uµî
 -Üower);

312 
	}
}

317 
	$rds_lunif‹m
(

318 
mt_°©e
 * 
°©e
,

319 
lowî
,

320 
uµî
)

322  
lowî
 + 
	`mts_ldønd
(
°©e
Ë* (
uµî
 -Üower);

323 
	}
}

328 
	$rds_exp⁄ítül
(

329 
mt_°©e
 * 
°©e
,

330 
món
)

332 
øndom_vÆue
;

335 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

336 
øndom_vÆue
 == 0.0);

337  -
món
 * 
	`log
(
øndom_vÆue
);

338 
	}
}

343 
	$rds_Àxp⁄ítül
(

344 
mt_°©e
 * 
°©e
,

345 
món
)

347 
øndom_vÆue
;

350 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

351 
øndom_vÆue
 == 0.0);

352  -
món
 * 
	`log
(
øndom_vÆue
);

353 
	}
}

358 
	$rds_îœng
(

359 
mt_°©e
 * 
°©e
,

360 
p
,

361 
món
)

363 
‹dî
;

364 
øndom_vÆue
;

368 i‡(
p
 <= 1)

369 
p
 = 1;

370 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

371 
‹dî
 = 1; ordî < 
p
; order++)

372 
øndom_vÆue
 *
	`mts_dønd
(
°©e
);

374 
øndom_vÆue
 == 0.0);

375  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

376 
	}
}

381 
	$rds_Àæ™g
(

382 
mt_°©e
 * 
°©e
,

383 
p
,

384 
món
)

386 
‹dî
;

387 
øndom_vÆue
;

391 i‡(
p
 <= 1)

392 
p
 = 1;

393 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

394 
‹dî
 = 1; ordî < 
p
; order++)

395 
øndom_vÆue
 *
	`mts_ldønd
(
°©e
);

397 
øndom_vÆue
 == 0.0);

398  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

399 
	}
}

404 
	$rds_weibuŒ
(

405 
mt_°©e
 * 
°©e
,

406 
sh≠e
,

407 
sˇÀ
)

409 
øndom_vÆue
;

412 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

413 
øndom_vÆue
 == 0.0);

414  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

415 
	}
}

420 
	$rds_lweibuŒ
(

421 
mt_°©e
 * 
°©e
,

422 
sh≠e
,

423 
sˇÀ
)

425 
øndom_vÆue
;

428 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

429 
øndom_vÆue
 == 0.0);

430  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

431 
	}
}

437 
	$rds_n‹mÆ
(

438 
mt_°©e
 * 
°©e
,

439 
món
,

440 
sigma
)

442 
mag
;

443 
off£t
;

444 
xønvÆ
;

445 
yønvÆ
;

455 
xønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

456 
yønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

457 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

459 
mag
 > 1.0 || mag == 0.0);

461 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

462  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

473 
	}
}

479 
	$rds_ ‹mÆ
(

480 
mt_°©e
 * 
°©e
,

481 
món
,

482 
sigma
)

484 
mag
;

485 
off£t
;

486 
xønvÆ
;

487 
yønvÆ
;

497 
xønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

498 
yønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

499 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

501 
mag
 > 1.0 || mag == 0.0);

503 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

504  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

515 
	}
}

521 
	$rds_logn‹mÆ
(

522 
mt_°©e
 * 
°©e
,

523 
sh≠e
,

524 
sˇÀ
)

526  
	`exp
(
	`rds_n‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

527 
	}
}

533 
	$rds_Œogn‹mÆ
(

534 
mt_°©e
 * 
°©e
,

535 
sh≠e
,

536 
sˇÀ
)

538  
	`exp
(
	`rds_ ‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

539 
	}
}

545 
	$rds_åünguœr
(

546 
mt_°©e
 * 
°©e
,

547 
lowî
,

548 
uµî
,

549 
mode
)

551 
øn_vÆue
;

552 
sˇÀd_mode
;

554 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

555 
øn_vÆue
 = 
	`mts_dønd
(
°©e
);

556 i‡(
øn_vÆue
 <
sˇÀd_mode
)

557 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

559 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

560  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

561 
	}
}

567 
	$rds_…rünguœr
(

568 
mt_°©e
 * 
°©e
,

569 
lowî
,

570 
uµî
,

571 
mode
)

573 
øn_vÆue
;

574 
sˇÀd_mode
;

576 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

577 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

578 i‡(
øn_vÆue
 <
sˇÀd_mode
)

579 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

581 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

582  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

583 
	}
}

589 
size_t
 
	$rds_öt_empúiˇl
(

590 
mt_°©e
 * 
°©e
,

591 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

593 
øn_vÆue
;

594 
size_t
 
ªsu…
;

596 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

597 
øn_vÆue
 *
c⁄åﬁ
->
n
;

598 
ªsu…
 = (
size_t
)
øn_vÆue
;

599 i‡(
øn_vÆue
 < 
c⁄åﬁ
->
cutoff
[
ªsu…
])

600  
ªsu…
;

602  
c⁄åﬁ
->
ªm≠
[
ªsu…
];

603 
	}
}

610 
	$rds_doubÀ_empúiˇl
(

611 
mt_°©e
 * 
°©e
,

612 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

614  
c⁄åﬁ
->
vÆues
[
	`rds_öt_empúiˇl
(
°©e
, control)];

615 
	}
}

623 
	$rds_c⁄töuous_empúiˇl
(

624 
mt_°©e
 * 
°©e
,

625 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

627 
size_t
 
ödex
;

629 
ödex
 = 
	`rds_öt_empúiˇl
(
°©e
, 
c⁄åﬁ
);

630  
c⁄åﬁ
->
vÆues
[
ödex
]

631 + 
	`mts_ldønd
(
°©e
)

632 * (
c⁄åﬁ
->
vÆues
[
ödex
 + 1] - control->values[index]);

633 
	}
}

639 
öt32_t
 
	$rd_iunif‹m
(

640 
öt32_t
 
lowî
,

641 
öt32_t
 
uµî
)

643  
	`rds_iunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

644 
	}
}

646 #ifde‡
INT64_MAX


651 
öt64_t
 
	$rd_liunif‹m
(

652 
öt64_t
 
lowî
,

653 
öt64_t
 
uµî
)

655  
	`rds_liunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

656 
	}
}

662 
	$rd_unif‹m
(

663 
lowî
,

664 
uµî
)

666  
	`rds_unif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

667 
	}
}

672 
	$rd_lunif‹m
(

673 
lowî
,

674 
uµî
)

676  
	`rds_lunif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

677 
	}
}

682 
	$rd_exp⁄ítül
(

683 
món
)

685  
	`rds_exp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

686 
	}
}

691 
	$rd_Àxp⁄ítül
(

692 
món
)

694  
	`rds_Àxp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

695 
	}
}

700 
	$rd_îœng
(

701 
p
,

702 
món
)

704  
	`rds_îœng
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

705 
	}
}

710 
	$rd_Àæ™g
(

711 
p
,

712 
món
)

714  
	`rds_Àæ™g
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

715 
	}
}

720 
	$rd_weibuŒ
(

721 
sh≠e
,

722 
sˇÀ
)

724  
	`rds_weibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

725 
	}
}

730 
	$rd_lweibuŒ
(

731 
sh≠e
,

732 
sˇÀ
)

734  
	`rds_lweibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

735 
	}
}

741 
	$rd_n‹mÆ
(

742 
món
,

743 
sigma
)

745  
	`rds_n‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

746 
	}
}

752 
	$rd_ ‹mÆ
(

753 
món
,

754 
sigma
)

756  
	`rds_ ‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

757 
	}
}

763 
	$rd_logn‹mÆ
(

764 
sh≠e
,

765 
sˇÀ
)

767  
	`rds_logn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

768 
	}
}

774 
	$rd_Œogn‹mÆ
(

775 
sh≠e
,

776 
sˇÀ
)

778  
	`rds_Œogn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

779 
	}
}

785 
	$rd_åünguœr
(

786 
lowî
,

787 
uµî
,

788 
mode
)

790  
	`rds_åünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

791 
	}
}

797 
	$rd_…rünguœr
(

798 
lowî
,

799 
uµî
,

800 
mode
)

802  
	`rds_…rünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

803 
	}
}

881 
rd_empúiˇl_c⁄åﬁ
* 
	$rd_empúiˇl_£tup
(

882 
size_t
 
n_¥obs
,

883 c⁄° * 
¥obs
,

884 c⁄° * 
vÆues
)

886 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
;

887 
size_t
 
i
;

888 
size_t
 
j
;

889 
size_t
 
n_high
;

890 
size_t
 
n_low
;

891 
size_t
* 
°ack_high
;

892 
size_t
* 
°ack_low
;

893 
¥ob_tŸÆ
;

895 
c⁄åﬁ
 = (
rd_empúiˇl_c⁄åﬁ
*)
	`mÆloc
( *control);

896 i‡(
c⁄åﬁ
 =
NULL
)

897  
NULL
;

898 
c⁄åﬁ
->
n
 = 
n_¥obs
;

899 
c⁄åﬁ
->
cutoff
 = (*)
	`mÆloc
(
n_¥obs
 *  ());

900 
c⁄åﬁ
->
ªm≠
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

901 
c⁄åﬁ
->
vÆues
 = (*)
	`mÆloc
((
n_¥obs
 + 1) *  ());

902 i‡(
c⁄åﬁ
->
cutoff
 =
NULL
 || c⁄åﬁ->
ªm≠
 == NULL

903 || 
c⁄åﬁ
->
vÆues
 =
NULL
)

905 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

906  
NULL
;

908 i‡(
vÆues
 !
NULL
)

918 
i
 = 0; i <
n_¥obs
; i++)

919 
c⁄åﬁ
->
vÆues
[
i
] = values[i];

926 
i
 = 0; i <
n_¥obs
; i++)

927 
c⁄åﬁ
->
vÆues
[
i
] = ()ò/ 
n_¥obs
;

929 
°ack_high
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

930 i‡(
°ack_high
 =
NULL
)

932 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

933  
NULL
;

935 
°ack_low
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

936 i‡(
°ack_low
 =
NULL
)

938 
	`‰ì
(
°ack_high
);

939 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

940  
NULL
;

942 
n_high
 = 
n_low
 = 0;

953 
i
 = 0, 
¥ob_tŸÆ
 = 0.0; i < 
n_¥obs
; i++)

954 
¥ob_tŸÆ
 +
¥obs
[
i
];

955 
i
 = 0; i < 
n_¥obs
; i++)

957 
c⁄åﬁ
->
ªm≠
[
i
] = i;

958 
c⁄åﬁ
->
cutoff
[
i
] = 
¥obs
[i] / 
¥ob_tŸÆ
 - 1.0 / 
n_¥obs
;

959 i‡(
c⁄åﬁ
->
cutoff
[
i
] >= 0.0)

960 
°ack_high
[
n_high
++] = 
i
;

962 
°ack_low
[
n_low
++] = 
i
;

970 
n_low
 > 0)

972 
i
 = 
°ack_low
[--
n_low
];

973 
j
 = 
°ack_high
[
n_high
 - 1];

1000 
c⁄åﬁ
->
cutoff
[
j
] +c⁄åﬁ->cutoff[
i
];

1001 
c⁄åﬁ
->
cutoff
[
i
] = i + 1.0 + c⁄åﬁ->cutoff[i] * 
n_¥obs
;

1002 
c⁄åﬁ
->
ªm≠
[
i
] = 
j
;

1006 i‡(
c⁄åﬁ
->
cutoff
[
j
] < 0.0)

1008 
°ack_low
[
n_low
++] = 
j
;

1009 --
n_high
;

1018 
i
 = 0; i < 
n_high
; i++)

1020 
j
 = 
°ack_high
[
i
];

1021 
c⁄åﬁ
->
cutoff
[
j
] = j + 1.0;

1023 
	`‰ì
(
°ack_high
);

1024 
	`‰ì
(
°ack_low
);

1025  
c⁄åﬁ
;

1026 
	}
}

1031 
	$rd_empúiˇl_‰ì
(

1032 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1034 i‡(
c⁄åﬁ
 =
NULL
)

1036 i‡(
c⁄åﬁ
->
cutoff
 !
NULL
)

1037 
	`‰ì
(
c⁄åﬁ
->
cutoff
);

1038 i‡(
c⁄åﬁ
->
ªm≠
 !
NULL
)

1039 
	`‰ì
(
c⁄åﬁ
->
ªm≠
);

1040 i‡(
c⁄åﬁ
->
vÆues
 !
NULL
)

1041 
	`‰ì
(
c⁄åﬁ
->
vÆues
);

1042 
	`‰ì
(
c⁄åﬁ
);

1043 
	}
}

1049 
size_t
 
	$rd_öt_empúiˇl
(

1050 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1052  
	`rds_öt_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1053 
	}
}

1059 
	$rd_doubÀ_empúiˇl
(

1060 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1062  
	`rds_doubÀ_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1063 
	}
}

1069 
	$rd_c⁄töuous_empúiˇl
(

1070 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1072  
	`rds_c⁄töuous_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1073 
	}
}

	@cvars/mtwist/randistrs.h

1 #i‚de‡
RANDISTRS_H


2 
	#RANDISTRS_H


	)

189 
	~"mtwi°.h
"

190 #ifde‡
__˝lu•lus


191 
	~<°dex˚±
>

192 
	~<ve˘‹
>

201 
size_t
 
	mn
;

202 * 
	mcutoff
;

205 
size_t
* 
	mªm≠
;

206 * 
	mvÆues
;

208 
	trd_empúiˇl_c⁄åﬁ
;

210 #ifde‡
__˝lu•lus


218 
öt32_t
 
rds_iunif‹m
(
mt_°©e
* 
°©e
, i¡32_à
lowî
,

219 
öt32_t
 
uµî
);

221 #ifde‡
INT64_MAX


222 
öt64_t
 
rds_liunif‹m
(
mt_°©e
* 
°©e
, i¡64_à
lowî
,

223 
öt64_t
 
uµî
);

226 
rds_unif‹m
(
mt_°©e
* 
°©e
,

227 
lowî
, 
uµî
);

229 
rds_lunif‹m
(
mt_°©e
* 
°©e
,

230 
lowî
, 
uµî
);

232 
rds_exp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

234 
rds_Àxp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

236 
rds_îœng
(
mt_°©e
* 
°©e
, 
p
, 
món
);

238 
rds_Àæ™g
(
mt_°©e
* 
°©e
, 
p
, 
món
);

240 
rds_weibuŒ
(
mt_°©e
* 
°©e
,

241 
sh≠e
, 
sˇÀ
);

243 
rds_lweibuŒ
(
mt_°©e
* 
°©e
,

244 
sh≠e
, 
sˇÀ
);

246 
rds_n‹mÆ
(
mt_°©e
* 
°©e
,

247 
món
, 
sigma
);

249 
rds_ ‹mÆ
(
mt_°©e
* 
°©e
,

250 
món
, 
sigma
);

252 
rds_logn‹mÆ
(
mt_°©e
* 
°©e
,

253 
sh≠e
, 
sˇÀ
);

255 
rds_Œogn‹mÆ
(
mt_°©e
* 
°©e
,

256 
sh≠e
, 
sˇÀ
);

258 
rds_åünguœr
(
mt_°©e
* 
°©e
,

259 
lowî
, 
uµî
, 
mode
);

261 
rds_…rünguœr
(
mt_°©e
* 
°©e
,

262 
lowî
, 
uµî
, 
mode
);

264 
size_t
 
rds_öt_empúiˇl
(
mt_°©e
* 
°©e
,

265 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

267 
rds_doubÀ_empúiˇl
(
mt_°©e
* 
°©e
,

268 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

270 
rds_c⁄töuous_empúiˇl
(
mt_°©e
* 
°©e
,

271 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

277 
öt32_t
 
rd_iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
);

279 #ifde‡
INT64_MAX


280 
öt64_t
 
rd_liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
);

283 
rd_unif‹m
(
lowî
, 
uµî
);

285 
rd_lunif‹m
(
lowî
, 
uµî
);

287 
rd_exp⁄ítül
(
món
);

289 
rd_Àxp⁄ítül
(
món
);

291 
rd_îœng
(
p
, 
món
);

293 
rd_Àæ™g
(
p
, 
món
);

295 
rd_weibuŒ
(
sh≠e
, 
sˇÀ
);

297 
rd_lweibuŒ
(
sh≠e
, 
sˇÀ
);

299 
rd_n‹mÆ
(
món
, 
sigma
);

301 
rd_ ‹mÆ
(
món
, 
sigma
);

303 
rd_logn‹mÆ
(
sh≠e
, 
sˇÀ
);

305 
rd_Œogn‹mÆ
(
sh≠e
, 
sˇÀ
);

307 
rd_åünguœr
(
lowî
, 
uµî
, 
mode
);

309 
rd_…rünguœr
(
lowî
, 
uµî
,

310 
mode
);

311 
rd_empúiˇl_c⁄åﬁ
*

312 
rd_empúiˇl_£tup
(
size_t
 
n_¥obs
,

313 c⁄° * 
¥obs
, c⁄° * 
vÆues
);

315 
rd_empúiˇl_‰ì
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

317 
size_t
 
rd_öt_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

319 
rd_doubÀ_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

321 
rd_c⁄töuous_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

324 #ifde‡
__˝lu•lus


328 #ifde‡
__˝lu•lus


334 ˛as†
	cmt_di°ributi⁄
 : 
public
 
mt_¥ng


336 
public
:

341 
mt_di°ributi⁄
(

343 
boﬁ
 
pickSìd
 = 
Ál£
)

346 : 
mt_¥ng
(
pickSìd
)

349 
mt_di°ributi⁄
(
uöt32_t
 
√w£ed
)

351 : 
mt_¥ng
(
√w£ed
)

354 
mt_di°ributi⁄
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

356 : 
mt_¥ng
(
£eds
)

359 ~
mt_di°ributi⁄
() { }

365 
öt32_t
 
iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
)

368  
rds_iunif‹m
(&
°©e
, 
lowî
, 
uµî
);

370 #ifde‡
INT64_MAX


371 
öt64_t
 
liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
)

374  
rds_liunif‹m
(&
°©e
, 
lowî
, 
uµî
);

377 
unif‹m
(
lowî
, 
uµî
)

380  
rds_unif‹m
(&
°©e
, 
lowî
, 
uµî
);

382 
lunif‹m
(
lowî
, 
uµî
)

385  
rds_lunif‹m
(&
°©e
, 
lowî
, 
uµî
);

387 
exp⁄ítül
(
món
)

390  
rds_exp⁄ítül
(&
°©e
, 
món
);

392 
Àxp⁄ítül
(
món
)

395  
rds_Àxp⁄ítül
(&
°©e
, 
món
);

397 
îœng
(
p
, 
món
)

400  
rds_îœng
(&
°©e
, 
p
, 
món
);

402 
Àæ™g
(
p
, 
món
)

405  
rds_Àæ™g
(&
°©e
, 
p
, 
món
);

407 
weibuŒ
(
sh≠e
, 
sˇÀ
)

410  
rds_weibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

412 
lweibuŒ
(
sh≠e
, 
sˇÀ
)

415  
rds_lweibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

417 
n‹mÆ
(
món
, 
sigma
)

420  
rds_n‹mÆ
(&
°©e
, 
món
, 
sigma
);

422 
 ‹mÆ
(
món
, 
sigma
)

425  
rds_ ‹mÆ
(&
°©e
, 
món
, 
sigma
);

427 
logn‹mÆ
(
sh≠e
, 
sˇÀ
)

430  
rds_logn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

432 
Œogn‹mÆ
(
sh≠e
, 
sˇÀ
)

435  
rds_Œogn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

437 
åünguœr
(
lowî
, 
uµî
, 
mode
)

440  
rds_åünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

442 
…rünguœr
(
lowî
, 
uµî
, 
mode
)

445  
rds_…rünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

456 ˛as†
	cmt_empúiˇl_di°ributi⁄


458 
	gpublic
:

459 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
,

460 c⁄° 
°d
::
ve˘‹
<>& 
vÆues
)

461 : 
c
(
NULL
)

463 i‡(
vÆues
.
size
(Ë!
¥obs
.size() + 1)

464 
throw
 
°d
::
övÆid_¨gumít
(

466 
	gc
 = 
rd_empúiˇl_£tup
(
¥obs
.
size
(),

467 &
¥obs
.
‰⁄t
(), &
vÆues
.front());

469 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
)

470 : 
c
(
rd_empúiˇl_£tup
(
¥obs
.
size
(), &¥obs.
‰⁄t
(), 
NULL
))

473 ~
mt_empúiˇl_di°ributi⁄
()

475 
rd_empúiˇl_‰ì
(
c
);

478 
size_t
 
öt_empúiˇl
(
mt_¥ng
& 
∫g
)

481  
rds_öt_empúiˇl
(&
∫g
.
°©e
, 
c
);

483 
doubÀ_empúiˇl
(
mt_¥ng
& 
∫g
)

486  
rds_doubÀ_empúiˇl
(&
∫g
.
°©e
, 
c
);

488 
c⁄töuous_empúiˇl
(
mt_¥ng
& 
∫g
)

491  
rds_c⁄töuous_empúiˇl
(&
∫g
.
°©e
, 
c
);

493 
	g¥iv©e
:

500 
mt_empúiˇl_di°ributi⁄
(

501 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
sour˚
);

502 
	gmt_empúiˇl_di°ributi⁄
& 
	g›î©‹
=(

503 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
rhs
);

508 
rd_empúiˇl_c⁄åﬁ
*

509 
	gc
;

	@cvars/mtwist/rdtest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

83 
	~"øndi°rs.h
"

84 
	~<°dio.h
>

85 
	~<°dlib.h
>

86 
	~<°rög.h
>

88 
maö
(
¨gc
, * 
¨gv
[]);

89 
ußge
();

91 
	#SEED_PARAM
 1

	)

92 
	#COUNT_PARAM
 2

	)

93 
	#DISTR_PARAM
 3

	)

94 
	#PARAM_OFFSET
 4

	)

96 
	$maö
(

97 
¨gc
,

98 * 
¨gv
[])

100 
rd_empúiˇl_c⁄åﬁ
*

101 
c⁄åﬁ
 = 
NULL
;

102 
size_t
 
how_m™y
;

103 
size_t
 
i
;

104 
size_t
 
√eded_∑øms
 = 0;

106 
size_t
 
n_∑øms
;

107 
size_t
 
n_¥obs
 = 0;

108 * 
∑øms
;

109 * 
¥obs
 = 
NULL
;

110 
øn_vÆue
 = 0.0;

112 
uöt32_t
 
£ed
;

113 * 
vÆues
 = 
NULL
;

115 i‡(
¨gc
 <
PARAM_OFFSET
)

116 
	`ußge
();

118 
£ed
 = 
	`©oi
 (
¨gv
[
SEED_PARAM
]);

119 
how_m™y
 = 
	`©oi
 (
¨gv
[
COUNT_PARAM
]);

121 
n_∑øms
 = 
¨gc
 - 
PARAM_OFFSET
;

122 
∑øms
 = (*Ë
	`mÆloc
 ( (Ë* 
n_∑øms
);

123 i‡(
∑øms
 =
NULL
)

125 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖarams\n");

128 
i
 = 0; i < 
n_∑øms
; i++)

129 
∑øms
[
i
] = 
	`©of
 (
¨gv
[ò+ 
PARAM_OFFSET
]);

131 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

132 
√eded_∑øms
 = 2;

133 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

134 
√eded_∑øms
 = 2;

135 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

136 
√eded_∑øms
 = 1;

137 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

139 i‡(
n_∑øms
 < 2 || 
∑øms
[0] < 1.0)

140 
	`ußge
();

141 
√eded_∑øms
 = 2;

143 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

144 
√eded_∑øms
 = 2;

145 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

146 
√eded_∑øms
 = 2;

147 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

148 
√eded_∑øms
 = 2;

149 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

150 
√eded_∑øms
 = 3;

151 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

153 i‡(
n_∑øms
 % 2 != 0 ||Ç_params < 4)

154 
	`ußge
();

155 
n_¥obs
 = 
n_∑øms
 / 2;

156 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

157 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

158 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

160 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

163 
i
 = 0; i < 
n_¥obs
; i++)

165 
vÆues
[
i
] = 
∑øms
[i * 2];

166 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

167 i‡(
¥obs
[
i
] < 0)

169 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

170 
	`exô
(2);

173 
vÆues
[
n_¥obs
] = 0.0;

174 
√eded_∑øms
 = 
n_∑øms
;

175 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

177 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

179 i‡(
n_∑øms
 % 2 == 0 ||Ç_params < 5)

180 
	`ußge
();

181 
n_¥obs
 = (
n_∑øms
 - 1) / 2;

182 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

183 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

184 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

186 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

189 
i
 = 0; i < 
n_¥obs
; i++)

191 
vÆues
[
i
] = 
∑øms
[i * 2];

192 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

193 i‡(
¥obs
[
i
] < 0)

195 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

196 
	`exô
(2);

199 
vÆues
[
n_¥obs
] = 
∑øms
[n_probs * 2];

200 
√eded_∑øms
 = 
n_∑øms
;

201 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

204 
	`ußge
();

206 i‡(
n_∑øms
 !
√eded_∑øms
)

207 
	`ußge
();

212 i‡(
£ed
 == 0)

213 
	`mt_good£ed
();

215 
	`mt_£ed32
(
£ed
);

217 
i
 = 0; i < 
how_m™y
; i++)

219 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

220 
øn_vÆue
 = 
	`rd_iunif‹m
 ((
öt32_t
)
∑øms
[0], (int32_t)params[1]);

221 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

222 
øn_vÆue
 = 
	`rd_unif‹m
 (
∑øms
[0],Öarams[1]);

223 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

224 
øn_vÆue
 = 
	`rd_exp⁄ítül
 (
∑øms
[0]);

225 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

226 
øn_vÆue
 = 
	`rd_îœng
 ((Ë
∑øms
[0],Öarams[1]);

227 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

228 
øn_vÆue
 = 
	`rd_weibuŒ
 (
∑øms
[0],Öarams[1]);

229 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

230 
øn_vÆue
 = 
	`rd_n‹mÆ
 (
∑øms
[0],Öarams[1]);

231 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

232 
øn_vÆue
 = 
	`rd_logn‹mÆ
 (
∑øms
[0],Öarams[1]);

233 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

234 
øn_vÆue
 = 
	`rd_åünguœr
 (
∑øms
[0],Öarams[1],Öarams[2]);

235 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

236 
øn_vÆue
 = 
	`rd_doubÀ_empúiˇl
 (
c⁄åﬁ
);

237 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

238 
øn_vÆue
 = 
	`rd_c⁄töuous_empúiˇl
 (
c⁄åﬁ
);

239 (Ë
	`¥ötf
 ("%f\n", 
øn_vÆue
);

242 
	}
}

244 
	$ußge
()

246 (Ë
	`Ârötf
 (
°dîr
, "Usage:Ñdtest seed count distributionÖ0 ...\n");

247 (Ë
	`Ârötf
 (
°dîr
, "Distributions:\n");

248 (Ë
	`Ârötf
 (
°dîr
, "\tiuniformÜower upper\n");

249 (Ë
	`Ârötf
 (
°dîr
, "\tuniformÜower upper\n");

250 (Ë
	`Ârötf
 (
°dîr
, "\texponential mean\n");

251 (Ë
	`Ârötf
 (
°dîr
, "\terlangÖ mean\n");

252 (Ë
	`Ârötf
 (
°dîr
, "\tweibull shape scale\n");

253 (Ë
	`Ârötf
 (
°dîr
, "\tnormal mean sigma\n");

254 (Ë
	`Ârötf
 (
°dîr
, "\tlognormal shape scale\n");

255 (Ë
	`Ârötf
 (
°dîr
, "\ttriangularÜower upper mode\n");

256 (Ë
	`Ârötf
 (
°dîr
, "\tempirical v0Ö0 v1Ö1 ... vn-1Ön-1\n");

257 (Ë
	`Ârötf
 (
°dîr
,

259 
	`exô
(2);

260 
	}
}

	@cvars/test/sanity.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<dlf˙.h
>

12 
	~<°döt.h
>

13 
	~<fb_cv¨.h
>

15 *
	gpgm«me
;

17 
	$¥öt_ußge
()

19 
	`¥ötf
("Usage: %s <libraryÇame> <parameter string> "

20 "<cou¡>\n", 
pgm«me
);

21 
	`¥ötf
("Example: %sÜibrand-triangular.so.1 "

23 " 10\n", 
pgm«me
);

25 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[])

29 *
cv¨_lib
;

30 *
cv¨_h™dÀ
;

31 *
lib«me
;

32 *
∑ømëîs
;

33 
cou¡
;

34 
ªt
;

35 
cv¨_›î©i⁄s_t
 
cv¨_›
;

36 
d
;

39 
pgm«me
 = 
¨gv
[0];

41 i‡(
¨gc
 < 4) {

42 
	`¥ötf
("InsufficientÖarameters.\n");

43 
	`¥öt_ußge
();

44 
ªt
 = -1;

45 
exô
;

49 
lib«me
 = 
¨gv
[1];

50 
cv¨_lib
 = 
	`dl›í
(
lib«me
, 
RTLD_NOW
 | 
RTLD_GLOBAL
);

51 i‡(!
cv¨_lib
) {

52 
	`¥ötf
("U«bÀÅÿlﬂdÜibøry: %s.\n", 
	`dÀº‹
());

53 
ªt
 = -2;

54 
exô
;

58 
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_INIT
);

60 
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_ALLOC_HANDLE
);

61 i‡(!
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

62 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

63 
ªt
 = -3;

64 
dl˛o£
;

67 
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_REVALIDATE_HANDLE
);

68 i‡(!
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

69 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

70 
ªt
 = -4;

71 
dl˛o£
;

74 
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_NEXT_VALUE
);

75 i‡(!
cv¨_›
.
cv¨_√xt_vÆue
) {

76 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE
 ": %s.\n", 
	`dÀº‹
());

77 
ªt
 = -5;

78 
dl˛o£
;

81 
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_FREE_HANDLE
);

82 i‡(!
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

83 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE
 ": %s.\n", 
	`dÀº‹
());

84 
ªt
 = -6;

85 
dl˛o£
;

88 
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_EXIT
);

90 
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_USAGE
);

92 
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_VERSION
);

94 i‡(
cv¨_›
.
cv¨_moduÀ_öô
) {

95 
ªt
 = 
cv¨_›
.
	`cv¨_moduÀ_öô
();

96 i‡(
ªt
) {

97 
	`¥ötf
("Custom variable module initialization failed.\n");

98 
dl˛o£
;

102 i‡(
cv¨_›
.
cv¨_vîsi⁄
)

103 
	`¥ötf
("V¨übÀ: %†(%s)\n", 
lib«me
, 
cv¨_›
.
	`cv¨_vîsi⁄
());

105 
	`¥ötf
("V¨übÀ: %s\n", 
lib«me
);

107 i‡(
cv¨_›
.
cv¨_ußge
)

108 
	`¥ötf
("%s\n", 
cv¨_›
.
	`cv¨_ußge
());

111 
∑ømëîs
 = 
¨gv
[2];

112 
cv¨_h™dÀ
 = 
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
, 
mÆloc
, 
‰ì
);

113 i‡(!
cv¨_h™dÀ
) {

114 
	`¥ötf
("Custom variable handleállocation failed.\n");

115 
ªt
 = -7;

116 
cv¨_‰ì
;

120 
ªt
 = 
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
cv¨_h™dÀ
);

121 i‡(
ªt
) {

122 
	`¥ötf
("Custom variable handleÑevalidation failed.\n");

123 
ªt
 = -10;

124 
cv¨_‰ì
;

127 
cou¡
 = 
	`©oi
(
¨gv
[3]);

128 i‡(
cou¡
 > 0) {

129 
cou¡
 > 1) {

130 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

131 i‡(
ªt
) {

132 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

133 
ªt
 = -11;

134 
cv¨_‰ì
;

136 
	`¥ötf
("%lf,", 
d
);

137 
cou¡
--;

139 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

140 i‡(
ªt
) {

141 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

142 
ªt
 = -11;

143 
cv¨_‰ì
;

145 
	`¥ötf
("%lf.\n", 
d
);

148 
ªt
 = 0;

149 
	`¥ötf
("\nAll done.\n");

151 
cv¨_‰ì
:

152 
cv¨_›
.
	`cv¨_‰ì_h™dÀ
(
cv¨_h™dÀ
, 
‰ì
);

154 i‡(
cv¨_›
.
cv¨_moduÀ_exô
)

155 
cv¨_›
.
	`cv¨_moduÀ_exô
();

157 
dl˛o£
:

158 
	`dl˛o£
(
cv¨_lib
);

160 
exô
:

161  
ªt
;

162 
	}
}

	@eventgen.c

42 
	~<sys/time.h
>

44 
	~"fûebích.h
"

45 
	~"v¨s.h
"

46 
	~"evítgí.h
"

47 
	~"Êow›.h
"

48 
	~"ùc.h
"

50 
	#FB_SEC2NSEC
 1000000000UL

	)

66 
	$evítgí_thªad
()

68 
hπime_t
 
œ°
;

70 
œ°
 = 
	`gëhπime
();

71 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
FALSE
;

74 
time•ec
 
¶ì±ime
;

75 
hπime_t
 
dñè
;

76 
cou¡
, 
øã
;

78 i‡(
fûebích_shm
->
shm_evítgí_hz
 =
NULL
) {

79 (Ë
	`¶ìp
(1);

82 
øã
 = 
	`avd_gë_öt
(
fûebích_shm
->
shm_evítgí_hz
);

83 i‡(
øã
 > 0)

84 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
TRUE
;

90 
¶ì±ime
.
tv_£c
 = 0;

91 
¶ì±ime
.
tv_n£c
 = 
FB_SEC2NSEC
 / 
øã
;

93 
¶ì±ime
.
tv_n£c
 *= 10;

94 i‡(
¶ì±ime
.
tv_n£c
 < 1000UL)

95 
¶ì±ime
.
tv_n£c
 = 1000UL;

97 
¶ì±ime
.
tv_£c
 = sÀïtime.
tv_n£c
 / 
FB_SEC2NSEC
;

98 i‡(
¶ì±ime
.
tv_£c
 > 0)

99 
¶ì±ime
.
tv_n£c
 -(¶ì±ime.
tv_£c
 * 
FB_SEC2NSEC
);

101 ()
	`«no¶ìp
(&
¶ì±ime
, 
NULL
);

103 
dñè
 = 
	`gëhπime
(Ë- 
œ°
;

104 
œ°
 = 
	`gëhπime
();

106 
cou¡
 = (
øã
 * 
dñè
Ë/ 
FB_SEC2NSEC
;

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "delta %lluns count %d",

109 (
u_l⁄gl⁄g_t
)
dñè
, 
cou¡
);

112 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

121 i‡(
fûebích_shm
->
shm_evítgí_q
 < (5 * 
øã
))

122 
fûebích_shm
->
shm_evítgí_q
 +
cou¡
;

124 ()
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_evítgí_cv
);

126 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

128 
	}
}

134 
	$evítgí_öô
()

136 
±hªad_t
 
tid
;

138 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

139 (*(*)(*))
evítgí_thªad
, 0) != 0) {

140 
	`fûebích_log
(
LOG_ERROR
, "createÅimerÅhread failed: %s",

141 
	`°ªº‹
(
î∫o
));

142 
	`exô
(1);

144 
	}
}

151 
	$evítgí_£å©e
(
avd_t
 
øã
)

153 
fûebích_shm
->
shm_evítgí_hz
 = 
øã
;

154 i‡(
øã
 =
NULL
) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	}
}

165 
	$evítgí_ª£t
()

167 
fûebích_shm
->
shm_evítgí_q
 = 0;

168 
	}
}

	@eventgen.h

26 #i‚def 
_FB_EVENTGEN_H


27 
	#_FB_EVENTGEN_H


	)

29 
	~"fûebích.h
"

31 
evítgí_öô
();

32 
evítgí_£å©e
(
avd_t
 
øã
);

33 
evítgí_ª£t
();

	@fb_avl.c

93 
	~"fûebích.h
"

94 
	~"fb_avl.h
"

107 c⁄° 
	gavl_chûd2bÆ™˚
[2] = {-1, 1};

108 c⁄° 
	gavl_bÆ™˚2chûd
[] = {0, 0, 1};

124 
	$avl_wÆk
(
avl_åì_t
 *
åì
, *
ﬁdnode
, 
À·
)

126 
size_t
 
off
 = 
åì
->
avl_off£t
;

127 
avl_node_t
 *
node
 = 
	`AVL_DATA2NODE
(
ﬁdnode
, 
off
);

128 
right
 = 1 - 
À·
;

129 
was_chûd
;

135 i‡(
node
 =
NULL
)

136  (
NULL
);

144 i‡(
node
->
avl_chûd
[
À·
] !
NULL
) {

145 
node
 =Çode->
avl_chûd
[
À·
];

146 
node
->
avl_chûd
[
right
] !
NULL
;

147 
node
 =Çode->
avl_chûd
[
right
])

154 
was_chûd
 = 
	`AVL_XCHILD
(
node
);

155 
node
 = 
	`AVL_XPARENT
(node);

156 i‡(
node
 =
NULL
)

157  (
NULL
);

158 i‡(
was_chûd
 =
right
)

163  (
	`AVL_NODE2DATA
(
node
, 
off
));

164 
	}
}

171 
	$avl_fú°
(
avl_åì_t
 *
åì
)

173 
avl_node_t
 *
node
;

174 
avl_node_t
 *
¥ev
 = 
NULL
;

175 
size_t
 
off
 = 
åì
->
avl_off£t
;

177 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[0])

178 
¥ev
 = 
node
;

180 i‡(
¥ev
 !
NULL
)

181  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

182  (
NULL
);

183 
	}
}

190 
	$avl_œ°
(
avl_åì_t
 *
åì
)

192 
avl_node_t
 *
node
;

193 
avl_node_t
 *
¥ev
 = 
NULL
;

194 
size_t
 
off
 = 
åì
->
avl_off£t
;

196 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[1])

197 
¥ev
 = 
node
;

199 i‡(
¥ev
 !
NULL
)

200  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

201  (
NULL
);

202 
	}
}

214 
	$avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
)

216 
chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

217 
avl_node_t
 *
node
 = 
	`AVL_INDEX2NODE
(
whîe
);

218 *
d©a
;

219 
size_t
 
off
 = 
åì
->
avl_off£t
;

221 i‡(
node
 =
NULL
) {

222 i‡(
åì
->
avl_roŸ
 !
NULL
)

223 
	`fûebích_log
(
LOG_ERROR
,

225  (
NULL
);

227 
d©a
 = 
	`AVL_NODE2DATA
(
node
, 
off
);

228 i‡(
chûd
 !
dúe˘i⁄
)

229  (
d©a
);

231  (
	`avl_wÆk
(
åì
, 
d©a
, 
dúe˘i⁄
));

232 
	}
}

245 
	$avl_föd
(
avl_åì_t
 *
åì
, *
vÆue
, 
avl_ödex_t
 *
whîe
)

247 
avl_node_t
 *
node
;

248 
avl_node_t
 *
¥ev
 = 
NULL
;

249 
chûd
 = 0;

250 
diff
;

251 
size_t
 
off
 = 
åì
->
avl_off£t
;

253 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;

254 
node
 =Çode->
avl_chûd
[
chûd
]) {

256 
¥ev
 = 
node
;

258 
diff
 = 
åì
->
	`avl_com∑r
(
vÆue
, 
	`AVL_NODE2DATA
(
node
, 
off
));

259 i‡(!((-1 <
diff
) && (diff <= 1))) {

260 
	`fûebích_log
(
LOG_ERROR
, "avl compareÉrror");

261  (
NULL
);

263 i‡(
diff
 == 0) {

264 i‡(
whîe
 !
NULL
)

265 *
whîe
 = 0;

267  (
	`AVL_NODE2DATA
(
node
, 
off
));

269 
chûd
 = 
avl_bÆ™˚2chûd
[1 + 
diff
];

273 i‡(
whîe
 !
NULL
)

274 *
whîe
 = 
	`AVL_MKINDEX
(
¥ev
, 
chûd
);

276  (
NULL
);

277 
	}
}

295 
	$avl_rŸ©i⁄
(
avl_åì_t
 *
åì
, 
avl_node_t
 *
node
, 
bÆ™˚
)

297 
À·
 = !(
bÆ™˚
 < 0);

298 
right
 = 1 - 
À·
;

299 
À·_hóvy
 = 
bÆ™˚
 >> 1;

300 
right_hóvy
 = -
À·_hóvy
;

301 
avl_node_t
 *
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

302 
avl_node_t
 *
chûd
 = 
node
->
avl_chûd
[
À·
];

303 
avl_node_t
 *
¸ight
;

304 
avl_node_t
 *
gchûd
;

305 
avl_node_t
 *
gright
;

306 
avl_node_t
 *
gÀ·
;

307 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

308 
chûd_bÆ
 = 
	`AVL_XBALANCE
(
chûd
);

337 i‡(
chûd_bÆ
 !
right_hóvy
) {

345 
chûd_bÆ
 +
right_hóvy
;

350 
¸ight
 = 
chûd
->
avl_chûd
[
right
];

351 
node
->
avl_chûd
[
À·
] = 
¸ight
;

352 i‡(
¸ight
 !
NULL
) {

353 
	`AVL_SETPARENT
(
¸ight
, 
node
);

354 
	`AVL_SETCHILD
(
¸ight
, 
À·
);

360 
chûd
->
avl_chûd
[
right
] = 
node
;

361 
	`AVL_SETBALANCE
(
node
, -
chûd_bÆ
);

362 
	`AVL_SETCHILD
(
node
, 
right
);

363 
	`AVL_SETPARENT
(
node
, 
chûd
);

368 
	`AVL_SETBALANCE
(
chûd
, 
chûd_bÆ
);

369 
	`AVL_SETCHILD
(
chûd
, 
which_chûd
);

370 
	`AVL_SETPARENT
(
chûd
, 
∑ª¡
);

371 i‡(
∑ª¡
 !
NULL
)

372 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
chûd
;

374 
åì
->
avl_roŸ
 = 
chûd
;

376  (
chûd_bÆ
 == 0);

412 
gchûd
 = 
chûd
->
avl_chûd
[
right
];

413 
gÀ·
 = 
gchûd
->
avl_chûd
[
À·
];

414 
gright
 = 
gchûd
->
avl_chûd
[
right
];

421 
node
->
avl_chûd
[
À·
] = 
gright
;

422 i‡(
gright
 !
NULL
) {

423 
	`AVL_SETPARENT
(
gright
, 
node
);

424 
	`AVL_SETCHILD
(
gright
, 
À·
);

427 
chûd
->
avl_chûd
[
right
] = 
gÀ·
;

428 i‡(
gÀ·
 !
NULL
) {

429 
	`AVL_SETPARENT
(
gÀ·
, 
chûd
);

430 
	`AVL_SETCHILD
(
gÀ·
, 
right
);

440 
bÆ™˚
 = 
	`AVL_XBALANCE
(
gchûd
);

441 
gchûd
->
avl_chûd
[
À·
] = 
chûd
;

442 
	`AVL_SETBALANCE
(
chûd
, (
bÆ™˚
 =
right_hóvy
 ? 
À·_hóvy
 : 0));

443 
	`AVL_SETPARENT
(
chûd
, 
gchûd
);

444 
	`AVL_SETCHILD
(
chûd
, 
À·
);

446 
gchûd
->
avl_chûd
[
right
] = 
node
;

447 
	`AVL_SETBALANCE
(
node
, (
bÆ™˚
 =
À·_hóvy
 ? 
right_hóvy
 : 0));

448 
	`AVL_SETPARENT
(
node
, 
gchûd
);

449 
	`AVL_SETCHILD
(
node
, 
right
);

451 
	`AVL_SETBALANCE
(
gchûd
, 0);

452 
	`AVL_SETPARENT
(
gchûd
, 
∑ª¡
);

453 
	`AVL_SETCHILD
(
gchûd
, 
which_chûd
);

454 i‡(
∑ª¡
 !
NULL
)

455 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
gchûd
;

457 
åì
->
avl_roŸ
 = 
gchûd
;

460 
	}
}

474 
	$avl_ö£π
(
avl_åì_t
 *
åì
, *
√w_d©a
, 
avl_ödex_t
 
whîe
)

476 
avl_node_t
 *
node
;

477 
avl_node_t
 *
∑ª¡
 = 
	`AVL_INDEX2NODE
(
whîe
);

478 
ﬁd_bÆ™˚
;

479 
√w_bÆ™˚
;

480 
which_chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

481 
size_t
 
off
 = 
åì
->
avl_off£t
;

483 i‡(
åì
 =
NULL
) {

484 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

487 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

488 i‡(((
uöçå_t
)
√w_d©a
 & 0x7) != 0) {

489 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

494 
node
 = 
	`AVL_DATA2NODE
(
√w_d©a
, 
off
);

499 ++
åì
->
avl_numnodes
;

501 
node
->
avl_chûd
[0] = 
NULL
;

502 
node
->
avl_chûd
[1] = 
NULL
;

504 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

505 
	`AVL_SETBALANCE
(
node
, 0);

506 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

507 i‡(
∑ª¡
 !
NULL
) {

508 i‡(
∑ª¡
->
avl_chûd
[
which_chûd
] !
NULL
)

509 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

512 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

514 i‡(
åì
->
avl_roŸ
 !
NULL
)

515 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

518 
åì
->
avl_roŸ
 = 
node
;

527 
node
 = 
∑ª¡
;

528 i‡(
node
 =
NULL
)

534 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

535 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 + 
avl_chûd2bÆ™˚
[
which_chûd
];

540 i‡(
√w_bÆ™˚
 == 0) {

541 
	`AVL_SETBALANCE
(
node
, 0);

549 i‡(
ﬁd_bÆ™˚
 != 0)

552 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

553 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

554 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

560 (Ë
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
);

561 
	}
}

576 
	$avl_ö£π_hîe
(

577 
avl_åì_t
 *
åì
,

578 *
√w_d©a
,

579 *
hîe
,

580 
dúe˘i⁄
)

582 
avl_node_t
 *
node
;

583 
chûd
 = 
dúe˘i⁄
;

585 i‡((
åì
 =
NULL
Ë|| (
√w_d©a
 =NULLË|| (
hîe
 == NULL) ||

586 !((
dúe˘i⁄
 =
AVL_BEFORE
Ë|| (dúe˘i⁄ =
AVL_AFTER
))) {

587 
	`fûebích_log
(
LOG_ERROR
,

596 
node
 = 
	`AVL_DATA2NODE
(
hîe
, 
åì
->
avl_off£t
);

598 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
) {

599 
node
 =Çode->
avl_chûd
[
chûd
];

600 
chûd
 = 1 - child;

601 
node
->
avl_chûd
[
chûd
] !
NULL
)

602 
node
 =Çode->
avl_chûd
[
chûd
];

605 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
)

606 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "OverwritingÉxistingÖointer");

608 
	`avl_ö£π
(
åì
, 
√w_d©a
, 
	`AVL_MKINDEX
(
node
, 
chûd
));

609 
	}
}

615 
	$avl_add
(
avl_åì_t
 *
åì
, *
√w_node
)

617 
avl_ödex_t
 
whîe
;

622 i‡(
	`avl_föd
(
åì
, 
√w_node
, &
whîe
Ë!
NULL
) {

623 
	`fûebích_log
(
LOG_ERROR
,

627 
	`avl_ö£π
(
åì
, 
√w_node
, 
whîe
);

628 
	}
}

654 
	$avl_ªmove
(
avl_åì_t
 *
åì
, *
d©a
)

656 
avl_node_t
 *
dñëe
;

657 
avl_node_t
 *
∑ª¡
;

658 
avl_node_t
 *
node
;

659 
avl_node_t
 
tmp
;

660 
ﬁd_bÆ™˚
;

661 
√w_bÆ™˚
;

662 
À·
;

663 
right
;

664 
which_chûd
;

665 
size_t
 
off
 = 
åì
->
avl_off£t
;

667 i‡(
åì
 =
NULL
) {

668 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

672 
dñëe
 = 
	`AVL_DATA2NODE
(
d©a
, 
off
);

684 i‡(
dñëe
->
avl_chûd
[0] !
NULL
 && delete->avl_child[1] != NULL) {

689 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
dñëe
);

690 
À·
 = 
avl_bÆ™˚2chûd
[
ﬁd_bÆ™˚
 + 1];

691 
right
 = 1 - 
À·
;

697 
node
 = 
dñëe
->
avl_chûd
[
À·
];

698 
node
->
avl_chûd
[
right
] !
NULL
;

699 
node
 =Çode->
avl_chûd
[
right
])

706 
tmp
 = *
node
;

708 *
node
 = *
dñëe
;

709 i‡(
node
->
avl_chûd
[
À·
] ==Çode)

710 
node
->
avl_chûd
[
À·
] = &
tmp
;

712 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

713 i‡(
∑ª¡
 !
NULL
)

714 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
node
)] =Çode;

716 
åì
->
avl_roŸ
 = 
node
;

717 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
À·
],Çode);

718 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
right
],Çode);

724 
dñëe
 = &
tmp
;

725 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

726 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
dñëe
)] = delete;

727 
which_chûd
 = (
dñëe
->
avl_chûd
[1] != 0);

728 i‡(
dñëe
->
avl_chûd
[
which_chûd
] !
NULL
)

729 
	`AVL_SETPARENT
(
dñëe
->
avl_chûd
[
which_chûd
], delete);

737 i‡(
åì
->
avl_numnodes
 == 0) {

738 
	`fûebích_log
(
LOG_ERROR
,

743 --
åì
->
avl_numnodes
;

744 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

745 
which_chûd
 = 
	`AVL_XCHILD
(
dñëe
);

746 i‡(
dñëe
->
avl_chûd
[0] !
NULL
)

747 
node
 = 
dñëe
->
avl_chûd
[0];

749 
node
 = 
dñëe
->
avl_chûd
[1];

754 i‡(
node
 !
NULL
) {

755 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

756 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

758 i‡(
∑ª¡
 =
NULL
) {

759 
åì
->
avl_roŸ
 = 
node
;

762 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

777 
node
 = 
∑ª¡
;

778 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

779 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 - 
avl_chûd2bÆ™˚
[
which_chûd
];

780 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

781 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

788 i‡(
ﬁd_bÆ™˚
 == 0) {

789 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

800 i‡(
√w_bÆ™˚
 == 0)

801 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

802 i‡(!
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
))

804 } 
∑ª¡
 !
NULL
);

805 
	}
}

807 
	#AVL_REINSERT
(
åì
, 
obj
) \

808 
	`avl_ªmove
((
åì
), (
obj
)); \

809 
	`avl_add
((
åì
), (
obj
))

	)

811 
boﬁón_t


812 
	$avl_upd©e_…
(
avl_åì_t
 *
t
, *
obj
)

814 *
√ighb‹
;

816 i‡(!(((
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
)Ë=
NULL
) ||

817 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) <= 0))) {

818 
	`fûebích_log
(
LOG_ERROR
,

820  (
B_FALSE
);

823 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

824 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

825 
	`AVL_REINSERT
(
t
, 
obj
);

826  (
B_TRUE
);

829  (
B_FALSE
);

830 
	}
}

832 
boﬁón_t


833 
	$avl_upd©e_gt
(
avl_åì_t
 *
t
, *
obj
)

835 *
√ighb‹
;

837 i‡(!(((
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
)Ë=
NULL
) ||

838 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) >= 0))) {

839 
	`fûebích_log
(
LOG_ERROR
,

841  (
B_FALSE
);

844 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

845 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

846 
	`AVL_REINSERT
(
t
, 
obj
);

847  (
B_TRUE
);

850  (
B_FALSE
);

851 
	}
}

853 
boﬁón_t


854 
	$avl_upd©e
(
avl_åì_t
 *
t
, *
obj
)

856 *
√ighb‹
;

858 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

859 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

860 
	`AVL_REINSERT
(
t
, 
obj
);

861  (
B_TRUE
);

864 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

865 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

866 
	`AVL_REINSERT
(
t
, 
obj
);

867  (
B_TRUE
);

870  (
B_FALSE
);

871 
	}
}

877 
	$avl_¸óã
(
avl_åì_t
 *
åì
, (*
com∑r
) (const *, const *),

878 
size_t
 
size
, size_à
off£t
)

880 i‡((
åì
 =
NULL
Ë|| (
com∑r
 =NULLË|| (
size
 == 0) ||

881 (
size
 < (
off£t
 +  (
avl_node_t
)))) {

882 
	`fûebích_log
(
LOG_ERROR
,

887 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

888 i‡((
off£t
 & 0x7) != 0) {

889 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

894 
åì
->
avl_com∑r
 = 
com∑r
;

895 
åì
->
avl_roŸ
 = 
NULL
;

896 
åì
->
avl_numnodes
 = 0;

897 
åì
->
avl_size
 = 
size
;

898 
åì
->
avl_off£t
 = 
off£t
;

899 
	}
}

906 
	$avl_de°roy
(
avl_åì_t
 *
åì
)

908 i‡((
åì
 =
NULL
Ë|| (åì->
avl_numnodes
 != 0) ||

909 (
åì
->
avl_roŸ
 !
NULL
))

910 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "avl_tree: TreeÇot destroyed");

911 
	}
}

918 
	$avl_numnodes
(
avl_åì_t
 *
åì
)

920 i‡(
åì
 =
NULL
) {

921 
	`fûebích_log
(
LOG_ERROR
, "avl_numnodes: NullÅreeÖointer");

924  (
åì
->
avl_numnodes
);

925 
	}
}

927 
boﬁón_t


928 
	$avl_is_em±y
(
avl_åì_t
 *
åì
)

930 i‡(
åì
 =
NULL
) {

931 
	`fûebích_log
(
LOG_ERROR
, "avl_is_empty: NullÅreeÖointer");

934  (
åì
->
avl_numnodes
 == 0);

935 
	}
}

937 
	#CHILDBIT
 (1L)

	)

959 
	$avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
)

961 
avl_node_t
 *
node
;

962 
avl_node_t
 *
∑ª¡
;

963 
chûd
;

964 *
fú°
;

965 
size_t
 
off
 = 
åì
->
avl_off£t
;

970 i‡(*
cookõ
 =
NULL
) {

971 
fú°
 = 
	`avl_fú°
(
åì
);

976 i‡(
fú°
 =
NULL
) {

977 *
cookõ
 = (*)
CHILDBIT
;

978  (
NULL
);

981 
node
 = 
	`AVL_DATA2NODE
(
fú°
, 
off
);

982 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

983 
check_right_side
;

989 
∑ª¡
 = (
avl_node_t
 *)((
uöçå_t
)(*
cookõ
Ë& ~
CHILDBIT
);

990 i‡(
∑ª¡
 =
NULL
) {

991 i‡(
åì
->
avl_roŸ
 !
NULL
) {

992 i‡(
åì
->
avl_numnodes
 != 1) {

993 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

997 
åì
->
avl_roŸ
 = 
NULL
;

998 
åì
->
avl_numnodes
 = 0;

1000  (
NULL
);

1006 
chûd
 = (
uöçå_t
)(*
cookõ
Ë& 
CHILDBIT
;

1007 
∑ª¡
->
avl_chûd
[
chûd
] = 
NULL
;

1008 i‡(
åì
->
avl_numnodes
 <= 1)

1009 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1012 --
åì
->
avl_numnodes
;

1017 i‡(
chûd
 =1 || 
∑ª¡
->
avl_chûd
[1] =
NULL
) {

1018 
node
 = 
∑ª¡
;

1019 
∑ª¡
 = 
	`AVL_XPARENT
(parent);

1020 
d⁄e
;

1026 
node
 = 
∑ª¡
->
avl_chûd
[1];

1027 
node
->
avl_chûd
[0] !
NULL
) {

1028 
∑ª¡
 = 
node
;

1029 
node
 =Çode->
avl_chûd
[0];

1036 
check_right_side
:

1037 i‡(
node
->
avl_chûd
[1] !
NULL
) {

1038 i‡(
	`AVL_XBALANCE
(
node
) != 1)

1039 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1041 
∑ª¡
 = 
node
;

1042 
node
 =Çode->
avl_chûd
[1];

1043 i‡(
node
->
avl_chûd
[0] !
NULL
 ||

1044 
node
->
avl_chûd
[1] !
NULL
)

1045 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1049 i‡(
	`AVL_XBALANCE
(
node
) > 0)

1050 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1054 
d⁄e
:

1055 i‡(
∑ª¡
 =
NULL
) {

1056 *
cookõ
 = (*)
CHILDBIT
;

1057 i‡(
node
 !
åì
->
avl_roŸ
)

1058 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1061 *
cookõ
 = (*)((
uöçå_t
)
∑ª¡
 | 
	`AVL_XCHILD
(
node
));

1064  (
	`AVL_NODE2DATA
(
node
, 
off
));

1065 
	}
}

	@fb_avl.h

27 #i‚def 
_FB_AVL_H


28 
	#_FB_AVL_H


	)

30 
	~"fûebích.h
"

74 #i‡!
deföed
(
_LP64
Ë&& !(
__WORDSIZE
 == 64)

76 
	savl_node
 {

77 
avl_node
 *
	mavl_chûd
[2];

78 
avl_node
 *
	mavl_∑ª¡
;

79 
	mavl_chûd_ödex
;

80 
	mavl_bÆ™˚
;

83 
	#AVL_XPARENT
(
n
Ë(“)->
avl_∑ª¡
)

	)

84 
	#AVL_SETPARENT
(
n
, 
p
Ë(“)->
avl_∑ª¡
 = (p))

	)

86 
	#AVL_XCHILD
(
n
Ë(“)->
avl_chûd_ödex
)

	)

87 
	#AVL_SETCHILD
(
n
, 
c
Ë(“)->
avl_chûd_ödex
 = ()(c))

	)

89 
	#AVL_XBALANCE
(
n
Ë(“)->
avl_bÆ™˚
)

	)

90 
	#AVL_SETBALANCE
(
n
, 
b
Ë(“)->
avl_bÆ™˚
 = ()(b))

	)

105 
	savl_node
 {

106 
avl_node
 *
	mavl_chûd
[2];

107 
uöçå_t
 
	mavl_pcb
;

115 
	#AVL_XPARENT
(
n
Ë((
avl_node
 *)(“)->
avl_pcb
 & ~7))

	)

116 
	#AVL_SETPARENT
(
n
, 
p
) \

117 ((
n
)->
avl_pcb
 = ((“)->avl_pcb & 7Ë| (
uöçå_t
)(
p
)))

	)

122 
	#AVL_XCHILD
(
n
Ë((“)->
avl_pcb
 >> 2Ë& 1)

	)

123 
	#AVL_SETCHILD
(
n
, 
c
) \

124 ((
n
)->
avl_pcb
 = (
uöçå_t
)((“)->avl_pcb & ~4Ë| ((
c
Ë<< 2)))

	)

131 
	#AVL_XBALANCE
(
n
Ë(()((“)->
avl_pcb
 & 3Ë- 1))

	)

132 
	#AVL_SETBALANCE
(
n
, 
b
) \

133 ((
n
)->
avl_pcb
 = (
uöçå_t
)(((“)->avl_pcb & ~3Ë| ((
b
Ë+ 1))))

	)

141 
	#AVL_NODE2DATA
(
n
, 
o
Ë((*)((
uöçå_t
)“Ë- (o)))

	)

142 
	#AVL_DATA2NODE
(
d
, 
o
Ë((
avl_node
 *)((
uöçå_t
)(dË+ (o)))

	)

148 
	#AVL_INDEX2NODE
(
x
Ë((
avl_node_t
 *)((xË& ~1))

	)

149 
	#AVL_INDEX2CHILD
(
x
Ë((xË& 1)

	)

150 
	#AVL_MKINDEX
(
n
, 
c
Ë((
avl_ödex_t
)“Ë| (c))

	)

158 
	savl_åì
 {

159 
avl_node
 *
	mavl_roŸ
;

160 (*
	mavl_com∑r
)(const *, const *);

161 
size_t
 
	mavl_off£t
;

162 
	mavl_numnodes
;

163 
size_t
 
	mavl_size
;

170 *
avl_wÆk
(
avl_åì
 *, *, );

216 
avl_åì
 
	tavl_åì_t
;

221 
avl_node
 
	tavl_node_t
;

227 
uöçå_t
 
	tavl_ödex_t
;

233 
	#AVL_BEFORE
 (0)

	)

234 
	#AVL_AFTER
 (1)

	)

260 
avl_¸óã
(
avl_åì_t
 *
åì
,

261 (*
com∑r
Ë(c⁄° *, c⁄° *), 
size_t
 
size
, size_à
off£t
);

272 *
	`avl_föd
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 *
whîe
);

280 
	`avl_ö£π
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 
whîe
);

293 
	`avl_ö£π_hîe
(
avl_åì_t
 *
åì
, *
√w_d©a
, *
hîe
,

294 
dúe˘i⁄
);

302 *
	`avl_fú°
(
avl_åì_t
 *
åì
);

303 *
	`avl_œ°
(
avl_åì_t
 *
åì
);

313 
	#AVL_NEXT
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_AFTER
)

	)

314 
	#AVL_PREV
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_BEFORE
)

	)

339 *
	`avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
);

349 
	`avl_add
(
avl_åì_t
 *
åì
, *
node
);

357 
	`avl_ªmove
(
avl_åì_t
 *
åì
, *
node
);

366 
boﬁón_t
 
	`avl_upd©e
(
avl_åì_t
 *, *);

367 
boﬁón_t
 
	`avl_upd©e_…
(
avl_åì_t
 *, *);

368 
boﬁón_t
 
	`avl_upd©e_gt
(
avl_åì_t
 *, *);

373 
	`avl_numnodes
(
avl_åì_t
 *
åì
);

378 
boﬁón_t
 
	`avl_is_em±y
(
avl_åì_t
 *
åì
);

401 *
	`avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
);

409 
	`avl_de°roy
(
avl_åì_t
 *
åì
);

	@fb_cvar.c

9 
	~<sys/ty≥s.h
>

10 
	~<dúít.h
>

11 
	~<limôs.h
>

12 
	~<dlf˙.h
>

14 
	~"ùc.h
"

15 
	~"fb_cv¨.h
"

18 
Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
);

19 *
gëty≥
(c⁄° *
fûíame
);

20 
cv¨_libøry_t
 *
öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
);

21 *
lﬂd_libøry
(c⁄° *
fûíame
);

22 
‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
);

23 
öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
);

26 
cv¨_libøry_t
 **
	gcv¨_libørõs
;

31 
cv¨_t
 *

32 
	$cv¨_Æloc
()

34 
cv¨_t
 *
cv¨
;

36 i‡((
cv¨
 = (
cv¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_CVAR
)Ë=
NULL
) {

37 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for custom variable");

38  (
NULL
);

42 
cv¨
->
√xt
 = 
fûebích_shm
->
shm_cv¨_li°
;

43 
fûebích_shm
->
shm_cv¨_li°
 = 
cv¨
;

45  (
cv¨
);

46 
	}
}

53 
	$öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
)

55 
DIR
 *
libdú
 = 
NULL
;

56 
dúít
 *dirent;

57 *
fûíame
 = 
NULL
;

58 
ªt
 = -1;

59 
dú∑th_Àn
 = 
	`°æí
(
dú∑th
);

60 
dúíéí
;

62 
fûíame
 = (*Ë
	`mÆloc
(
dú∑th_Àn
 + 1 + 
NAME_MAX
 + 1);

63 i‡(!
fûíame
) {

64 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

65 
out
;

68 
	`°r˝y
(
fûíame
, 
dú∑th
);

69 
fûíame
[
dú∑th_Àn
] = '/';

71 
fûíame
[
dú∑th_Àn
 + 
NAME_MAX
] = '\0';

73 
libdú
 = 
	`›ídú
(
dú∑th
);

74 i‡(!
libdú
) {

75 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo open cvar directory");

76 
ªt
 = 0;

77 
out
;

80 (
dúít
 = 
	`ªaddú
(
libdú
)Ë!
NULL
) {

81 i‡(!
	`°rcmp
(".", 
dúít
->
d_«me
) || !strcmp("..", dirent->d_name))

84 
dúíéí
 = 
	`°æí
(
dúít
->
d_«me
);

85 i‡(
	`°rcmp
(".so", 
dúít
->
d_«me
 + 
dúíéí
 - 3))

88 
	`°∫˝y
(
fûíame
 + 
dú∑th_Àn
 + 1, 
dúít
->
d_«me
, 
NAME_MAX
);

89 
ªt
 = 
	`Æloc_cv¨_lib_öfo
(
fûíame
);

90 i‡(
ªt
)

91 
out
;

94 
ªt
 = 0;

96 
out
:

97 i‡(
fûíame
)

98 
	`‰ì
(
fûíame
);

100 i‡(
libdú
)

101 
	`˛o£dú
(
libdú
);

103  
ªt
;

104 
	}
}

110 
	$Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
)

112 
ªt
 = -1;

113 
cv¨_libøry_öfo_t
 *
˛i
 = 
NULL
;

114 
cv¨_libøry_öfo_t
 *
t
;

116 
˛i
 = (
cv¨_libøry_öfo_t
 *Ë
	`ùc_mÆloc
(
FILEBENCH_CVAR_LIB_INFO
);

117 i‡(!
˛i
)

118 
out
;

120 
˛i
->
fûíame
 = 
	`ùc_°øŒoc
(filename);

121 i‡(!
˛i
->
fûíame
)

122 
out
;

124 
˛i
->
ty≥
 = 
	`ùc_°øŒoc
(
	`gëty≥
(
fûíame
));

125 i‡(!
˛i
->
ty≥
)

126 
out
;

128 
˛i
->
√xt
 = 
NULL
;

130 i‡(
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

131 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å->
√xt
 !
NULL
;

132 
t
 =Å->
√xt
);

134 
˛i
->
ödex
 = 
t
->index + 1;

135 
t
->
√xt
 = 
˛i
;

137 
˛i
->
ödex
 = 0;

138 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
 = 
˛i
;

141 
ªt
 = 0;

143 
out
:

144 i‡(
ªt
 && 
˛i
) {

146 
	`ùc_‰ì
(
FILEBENCH_CVAR_LIB_INFO
, (*Ë
˛i
);

149  
ªt
;

150 
	}
}

156 *
	$gëty≥
(c⁄° *
fûíame
)

158 
lib¥efix
[] = "lib";

159 c⁄° *
lib«me
;

160 *
ty≥
;

161 
ty≥_Àn
;

162 c⁄° *
t
;

164 
lib«me
 = 
	`°ºchr
(
fûíame
, '/');

165 i‡(!
lib«me
)

166 
lib«me
 = 
fûíame
;

168 
lib«me
++;

170 i‡(!
lib«me
) {

171 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

172  
NULL
;

178 i‡(!
	`°∫cmp
(
lib¥efix
, 
lib«me
, (libprefix) - 1))

179 
lib«me
 +(Ë* ((
lib¥efix
) - 1);

181 i‡(!
lib«me
) {

182 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

183  
NULL
;

187 
ty≥_Àn
 = 0;

188 
t
 = 
lib«me
; *t != '\0' && *t != '.';Å++)

189 
ty≥_Àn
++;

191 
ty≥
 = (*Ë
	`mÆloc
(
ty≥_Àn
 + 1);

192 i‡(!
ty≥
) {

193 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

194  
NULL
;

196 
	`°∫˝y
(
ty≥
, 
lib«me
, 
ty≥_Àn
);

197 
ty≥
[
ty≥_Àn
] = '\0';

199  
ty≥
;

200 
	}
}

207 
	$öô_cv¨_libørõs
()

209 
cou¡
;

210 
ªt
 = -1;

211 
i
;

213 
cv¨_libøry_öfo_t
 *
t
;

215 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

220 
cou¡
 = 0;

221 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;

222 
t
 =Å->
√xt
)

223 
cou¡
++;

225 
cv¨_libørõs
 = (
cv¨_libøry_t
 **)

226 
	`mÆloc
((
cv¨_libøry_t
 *Ë* 
cou¡
);

228 i‡(!
cv¨_libørõs
) {

229 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

230 
out
;

233 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
, 
i
 = 0;Å !
NULL
;

234 
t
 =Å->
√xt
, 
i
++) {

235 i‡((
cv¨_libørõs
[
i
] = 
	`öô_cv¨_libøry
(
t
)Ë=
NULL
) {

236 
out
;

240 
ªt
 = 0;

242 
out
:

243  
ªt
;

244 
	}
}

246 
cv¨_libøry_t


247 *
	$öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
)

249 
cv¨_libøry_t
 *
c
 = 
NULL
;

250 
ªt
;

252 
c
 = (
cv¨_libøry_t
 *Ë
	`mÆloc
((cvar_library_t));

253 i‡(!
c
) {

254 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

255 
out
;

258 
c
->
cv¨_lib_öfo
 = cvar_lib_info;

259 
c
->
lib_h™dÀ
 = 
	`lﬂd_libøry
(
cv¨_lib_öfo
->
fûíame
);

260 i‡(!
c
->
lib_h™dÀ
)

261 
˛ónup
;

263 
ªt
 = 
	`öô_cv¨_libøry_›s
(
c
);

264 i‡(
ªt
)

265 
˛ónup
;

267 i‡(
c
->
cv¨_›
.
cv¨_moduÀ_öô
) {

268 
ªt
 = 
c
->
cv¨_›
.
	`cv¨_moduÀ_öô
();

269 i‡(
ªt
) {

270 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo initialize custom variable ofÅype"

272 
cv¨_lib_öfo
->
ty≥
, 
ªt
);

273 
˛ónup
;

277 
out
:

278  
c
;

280 
˛ónup
:

281 i‡(
c
) {

282 
	`‰ì_cv¨_libøry
(
c
);

283 
	`‰ì
(
c
);

284 
c
 = 
NULL
;

286 
out
;

287 
	}
}

290 *
	$lﬂd_libøry
(c⁄° *
fûíame
)

292 *
lib_h™dÀ
 = 
	`dl›í
(
fûíame
, 
RTLD_LOCAL
 | 
RTLD_NOW
);

293 i‡(!
lib_h™dÀ
)

294 
	`fûebích_log
(
LOG_ERROR
, "UnableÅoÜoadÜibrary %s: %s",

295 
fûíame
, 
	`dÀº‹
());

297  
lib_h™dÀ
;

298 
	}
}

301 
	$‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
)

303 i‡(
c
) {

304 i‡(
c
->
lib_h™dÀ
) {

305 
	`dl˛o£
(
c
->
lib_h™dÀ
);

308 
	}
}

311 
	$öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
)

313 
ªt
 = -1;

315 
c
->
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_INIT
);

317 
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_ALLOC_HANDLE
);

318 i‡(!
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

319 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE


320 ": %s.", 
	`dÀº‹
());

321 
out
;

324 
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
,

325 
FB_CVAR_REVALIDATE_HANDLE
);

326 i‡(!
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

327 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_REVALIDATE_HANDLE


328 ": %s", 
	`dÀº‹
());

331 
c
->
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_NEXT_VALUE
);

332 i‡(!
c
->
cv¨_›
.
cv¨_√xt_vÆue
) {

333 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE


334 ": %s.", 
	`dÀº‹
());

335 
out
;

338 
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_FREE_HANDLE
);

339 i‡(!
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

340 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE


341 ": %s.", 
	`dÀº‹
());

342 
out
;

345 
c
->
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_EXIT
);

347 
c
->
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_USAGE
);

349 
c
->
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_VERSION
);

351 
ªt
 = 0;

353 
out
:

354  
ªt
;

355 
	}
}

358 
	$öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
)

360 
ªt
 = -1;

361 
cv¨_libøry_t
 *
cv¨_lib
;

362 
cv¨_libøry_öfo_t
 *
t
;

364 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

365 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

369 i‡(!
t
) {

370 
	`fûebích_log
(
LOG_ERROR
, "Undeföed cu°om v¨übÀ %s", 
ty≥
);

371 
out
;

374 
cv¨
->
cv¨_lib_öfo
 = 
t
;

376 
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

377 
cv¨
->
cv¨_h™dÀ
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
,

378 
ùc_cv¨_hó∑Œoc
, 
ùc_cv¨_hóp‰ì
);

379 i‡(!
cv¨
->
cv¨_h™dÀ
)

380 
out
;

382 
ªt
 = 0;

384 
out
:

385  
ªt
;

386 
	}
}

389 
	$gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
)

391 
ªt
;

392 
vÆue
 = 0.0;

393 
fböt_t
 
round
 = 
cv¨
->round;

395 
	`ùc_muãx_lock
(&
cv¨
->
cv¨_lock
);

396 
cv¨_libøry_t
 *
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

397 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨
->
cv¨_h™dÀ
, &
vÆue
);

398 
	`ùc_muãx_u∆ock
(&
cv¨
->
cv¨_lock
);

400 i‡(
ªt
) {

401 
	`fûebích_log
(
LOG_ERROR
, "UnableÅo getÇext_value from custom variable"

402 " o‡ty≥ %s", 
cv¨
->
cv¨_lib_öfo
->
ty≥
);

403 
	`fûebích_shutdown
(1);

406 i‡(
round
) {

407 
fböt_t
 
num
, 
lowî
, 
uµî
;

409 
num
 = (
fböt_t
Ë
vÆue
;

410 
lowî
 = 
num
 - (num % 
round
);

411 
uµî
 = 
lowî
 + 
round
;

413 
vÆue
 = (
num
 - 
lowî
Ë> (
uµî
 -Çum) ? upper :Üower;

416 i‡(
vÆue
 < 
cv¨
->
mö
)

417 
vÆue
 = 
cv¨
->
mö
;

418 i‡(
vÆue
 > 
cv¨
->
max
)

419 
vÆue
 = 
cv¨
->
max
;

421  
vÆue
;

422 
	}
}

428 
	$ªvÆid©e_cv¨_h™dÀs
()

430 
cv¨_t
 *
t
;

431 
cv¨_libøry_t
 *
cv¨_lib
;

432 
ªt
;

434 i‡(!
fûebích_shm
->
shm_cv¨_li°
)

437 
t
 = 
fûebích_shm
->
shm_cv¨_li°
;Å !
NULL
;Å =Å->
√xt
) {

438 
cv¨_lib
 = 
cv¨_libørõs
[
t
->
cv¨_lib_öfo
->
ödex
];

439 i‡(
cv¨_lib
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

440 
	`ùc_muãx_lock
(&
t
->
cv¨_lock
);

441 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
t
->
cv¨_h™dÀ
);

442 
	`ùc_muãx_u∆ock
(&
t
->
cv¨_lock
);

444 i‡(
ªt
) {

445 
	`fûebích_log
(
LOG_ERROR
, "Revalidation failed for cvar_handle "

446 "o‡ty≥ %†wôhÉº‹ codê%d", 
t
->
cv¨_lib_öfo
->
ty≥
,

447 
ªt
);

448  
ªt
;

454 
	}
}

	@fb_cvar.h

9 #i‚de‡
_FB_CVAR_H


10 
	#_FB_CVAR_H


	)

12 
	~<°döt.h
>

13 
	~<sys/ty≥s.h
>

16 
	#FB_CVAR_MODULE_INIT
 "cv¨_moduÀ_öô"

	)

17 
	#FB_CVAR_ALLOC_HANDLE
 "cv¨_Æloc_h™dÀ"

	)

18 
	#FB_CVAR_REVALIDATE_HANDLE
 "cv¨_ªvÆid©e_h™dÀ"

	)

19 
	#FB_CVAR_NEXT_VALUE
 "cv¨_√xt_vÆue"

	)

20 
	#FB_CVAR_FREE_HANDLE
 "cv¨_‰ì_h™dÀ"

	)

21 
	#FB_CVAR_MODULE_EXIT
 "cv¨_moduÀ_exô"

	)

22 
	#FB_CVAR_USAGE
 "cv¨_ußge"

	)

23 
	#FB_CVAR_VERSION
 "cv¨_vîsi⁄"

	)

27 
	scv¨_libøry_öfo
 {

28 *
	mfûíame
;

31 *
	mty≥
;

34 
	mödex
;

35 
cv¨_libøry_öfo
 *
	m√xt
;

36 } 
	tcv¨_libøry_öfo_t
;

40 
	scv¨
 {

43 
±hªad_muãx_t
 
	mcv¨_lock
;

45 *
	mcv¨_h™dÀ
;

46 
	mmö
;

47 
	mmax
;

48 
uöt64_t
 
	mround
;

49 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

50 
cv¨
 *
	m√xt
;

51 } 
	tcv¨_t
;

55 
	scv¨_›î©i⁄s
 {

56 (*
	mcv¨_moduÀ_öô
)();

57 *(*
	mcv¨_Æloc_h™dÀ
)(c⁄° *
	mcv¨_∑ømëîs
,

58 *(*
	mcv¨_mÆloc
)(
size_t
 
	msize
), (*
	mcv¨_‰ì
)(*
	m±r
));

59 (*
	mcv¨_ªvÆid©e_h™dÀ
)(*
	mcv¨_h™dÀ
);

60 (*
	mcv¨_√xt_vÆue
)(*
	mcv¨_h™dÀ
, *
	mvÆue
);

61 (*
	mcv¨_‰ì_h™dÀ
)(*
	mcv¨_h™dÀ
, (*
	mcv¨_‰ì
)(*
	m±r
));

62 (*
	mcv¨_moduÀ_exô
)();

63 c⁄° *(*
	mcv¨_ußge
)();

64 c⁄° *(*
	mcv¨_vîsi⁄
)();

65 } 
	tcv¨_›î©i⁄s_t
;

70 
	scv¨_libøry
 {

71 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

72 *
	mlib_h™dÀ
;

73 
cv¨_›î©i⁄s_t
 
	mcv¨_›
;

74 } 
	tcv¨_libøry_t
;

77 
cv¨_libøry_t
 **
cv¨_libørõs
;

79 
cv¨_t
 * 
cv¨_Æloc
();

80 
öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
);

81 
öô_cv¨_libørõs
();

82 
öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
);

83 
gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
);

84 
ªvÆid©e_cv¨_h™dÀs
();

	@fb_localfs.c

28 
	~"c⁄fig.h
"

29 
	~"fûebích.h
"

30 
	~"Êow›.h
"

31 
	~"thªadÊow.h
"

33 
	~<f˙é.h
>

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<uni°d.h
>

37 
	~<libgí.h
>

38 
	~<sys/mm™.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sys/∑øm.h
>

42 
	~<sys/ªsour˚.h
>

43 
	~<°rögs.h
>

45 
	~"fûebích.h
"

46 
	~"f•lug.h
"

48 #ifde‡
HAVE_AIO


49 
	~<aio.h
>

59 
fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
);

60 
fb_lfs_›í
(
fb_fdesc_t
 *, *, , );

61 
fb_lfs_¥ód
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

62 
fb_lfs_ªad
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

63 
fb_lfs_pwrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

64 
fb_lfs_wrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

65 
fb_lfs_l£ek
(
fb_fdesc_t
 *, 
off64_t
, );

66 
fb_lfs_åunˇã
(
fb_fdesc_t
 *, 
off64_t
);

67 
fb_lfs_ª«me
(const *, const *);

68 
fb_lfs_˛o£
(
fb_fdesc_t
 *);

69 
fb_lfs_lök
(const *, const *);

70 
fb_lfs_symlök
(const *, const *);

71 
fb_lfs_u∆ök
(*);

72 
ssize_t
 
fb_lfs_ªadlök
(c⁄° *, *, 
size_t
);

73 
fb_lfs_mkdú
(*, );

74 
fb_lfs_rmdú
(*);

75 
DIR
 *
fb_lfs_›ídú
(*);

76 
dúít
 *
fb_lfs_ªaddú
(
DIR
 *);

77 
fb_lfs_˛o£dú
(
DIR
 *);

78 
fb_lfs_fsync
(
fb_fdesc_t
 *);

79 
fb_lfs_°©
(*, 
°©64
 *);

80 
fb_lfs_f°©
(
fb_fdesc_t
 *, 
°©64
 *);

81 
fb_lfs_ac˚ss
(const *, );

82 
fb_lfs_ªcur_rm
(*);

84 
f•lug_func_t
 
	gfb_lfs_funcs
 =

87 
fb_lfs_‰ìmem
,

88 
fb_lfs_›í
,

89 
fb_lfs_¥ód
,

90 
fb_lfs_ªad
,

91 
fb_lfs_pwrôe
,

92 
fb_lfs_wrôe
,

93 
fb_lfs_l£ek
,

94 
fb_lfs_åunˇã
,

95 
fb_lfs_ª«me
,

96 
fb_lfs_˛o£
,

97 
fb_lfs_lök
,

98 
fb_lfs_symlök
,

99 
fb_lfs_u∆ök
,

100 
fb_lfs_ªadlök
,

101 
fb_lfs_mkdú
,

102 
fb_lfs_rmdú
,

103 
fb_lfs_›ídú
,

104 
fb_lfs_ªaddú
,

105 
fb_lfs_˛o£dú
,

106 
fb_lfs_fsync
,

107 
fb_lfs_°©
,

108 
fb_lfs_f°©
,

109 
fb_lfs_ac˚ss
,

110 
fb_lfs_ªcur_rm


113 #ifde‡
HAVE_AIO


118 
fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

119 
fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

121 
Êow›_¥Ÿo_t
 
	gfb_lfsÊow_funcs
[] = {

122 {
FLOW_TYPE_AIO
, 
FLOW_ATTR_WRITE
, "aiowrôe", 
Êow›_öô_gíîic
,

123 
fb_lfsÊow_aiowrôe
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_AIO
, 0, "aiowaô", 
Êow›_öô_gíîic
,

125 
fb_lfsÊow_aiowaô
, 
Êow›_de°ru˘_gíîic
}

136 
	$fb_lfs_funcvecöô
()

138 
fs_fun˘i⁄s_vec
 = &
fb_lfs_funcs
;

139 
	}
}

146 
	$fb_lfs_√wÊow›s
()

148 #ifde‡
HAVE_AIO


149 
n›s
;

150 
n›s
 =  (
fb_lfsÊow_funcs
Ë/  (
Êow›_¥Ÿo_t
);

151 
	`Êow›_add_‰om_¥Ÿo
(
fb_lfsÊow_funcs
, 
n›s
);

153 
	}
}

162 
	$fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
)

164 
off64_t
 
À·
;

165 
ªt
 = 0;

167 
À·
 = 
size
;Üe· > 0;Üe· -
MMAP_SIZE
) {

168 
off64_t
 
thism≠size
;

169 
ˇddr_t
 
addr
;

171 
thism≠size
 = 
	`MIN
(
MMAP_SIZE
, 
À·
);

172 
addr
 = 
	`mm≠64
(0, 
thism≠size
, 
PROT_READ
|
PROT_WRITE
,

173 
MAP_SHARED
, 
fd
->
fd_num
, 
size
 - 
À·
);

174 
ªt
 +
	`msync
(
addr
, 
thism≠size
, 
MS_INVALIDATE
);

175 (Ë
	`munm≠
(
addr
, 
thism≠size
);

177  (
ªt
);

178 
	}
}

184 
	$fb_lfs_¥ód
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
fûeoff£t
)

186  (
	`¥ód64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
fûeoff£t
));

187 
	}
}

193 
	$fb_lfs_ªad
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

195  (
	`ªad
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

196 
	}
}

198 #ifde‡
HAVE_AIO


216 
aiﬁi°_t
 *

217 
	$aio_Æloˇã
(
Êow›_t
 *
Êow›
)

219 
aiﬁi°_t
 *
aiﬁi°
;

221 i‡((
aiﬁi°
 = 
	`mÆloc
( (
aiﬁi°_t
))Ë=
NULL
) {

222 
	`fûebích_log
(
LOG_ERROR
, "mallocáiolist failed");

223 
	`fûebích_shutdown
(1);

226 
	`bzîo
(
aiﬁi°
, (*aiolist));

229 i‡(
Êow›
->
fo_thªad
->
tf_aiﬁi°
 =
NULL
) {

230 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

231 
aiﬁi°
->
Æ_√xt
 = 
NULL
;

233 
aiﬁi°
->
Æ_√xt
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

234 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

236  (
aiﬁi°
);

237 
	}
}

246 
	$aio_dóŒoˇã
(
Êow›_t
 *
Êow›
, 
aiocb64
 *
aiocb
)

248 
aiﬁi°_t
 *
aiﬁi°
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

249 
aiﬁi°_t
 *
¥evious
 = 
NULL
;

250 
aiﬁi°_t
 *
m©ch
 = 
NULL
;

252 i‡(
aiocb
 =
NULL
) {

253 
	`fûebích_log
(
LOG_ERROR
, "nulláiocb deallocate");

254  (
FILEBENCH_OK
);

257 
aiﬁi°
) {

258 i‡(
aiocb
 =&(
aiﬁi°
->
Æ_aiocb
)) {

259 
m©ch
 = 
aiﬁi°
;

262 
¥evious
 = 
aiﬁi°
;

263 
aiﬁi°
 =áiﬁi°->
Æ_√xt
;

266 i‡(
m©ch
 =
NULL
)

267  (
FILEBENCH_ERROR
);

270 i‡(
¥evious
)

271 
¥evious
->
Æ_√xt
 = 
m©ch
->al_next;

273 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
m©ch
->
Æ_√xt
;

275  (
FILEBENCH_OK
);

276 
	}
}

290 
	$fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

292 
ˇddr_t
 
iobuf
;

293 
fböt_t
 
wss
;

294 
fböt_t
 
iosize
;

295 
fb_fdesc_t
 *
fdesc
;

296 
ªt
;

298 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

300 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

301 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

302  (
ªt
);

304 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

305 
uöt64_t
 
fûeoff£t
;

306 
aiocb64
 *
aiocb
;

307 
aiﬁi°_t
 *
aiﬁi°
;

309 i‡(
wss
 < 
iosize
) {

310 
	`fûebích_log
(
LOG_ERROR
,

312 
Êow›
->
fo_«me
);

313  (
FILEBENCH_ERROR
);

316 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

318 
aiﬁi°
 = 
	`aio_Æloˇã
(
Êow›
);

319 
aiﬁi°
->
Æ_ty≥
 = 
AL_WRITE
;

320 
aiocb
 = &
aiﬁi°
->
Æ_aiocb
;

322 
aiocb
->
aio_fûdes
 = 
fdesc
->
fd_num
;

323 
aiocb
->
aio_buf
 = 
iobuf
;

324 
aiocb
->
aio_nbyãs
 = (
size_t
)
iosize
;

325 
aiocb
->
aio_off£t
 = (
off64_t
)
fûeoff£t
;

326 
aiocb
->
aio_ªq¥io
 = 0;

328 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

330 
fdesc
->
fd_num
, (
u_l⁄gl⁄g_t
)
iosize
,

331 (
u_l⁄gl⁄g_t
)
fûeoff£t
);

333 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

334 i‡(
	`aio_wrôe64
(
aiocb
) < 0) {

335 
	`fûebích_log
(
LOG_ERROR
, "aiowrite failed: %s",

336 
	`°ªº‹
(
î∫o
));

337 
	`fûebích_shutdown
(1);

339 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

341  (
FILEBENCH_ERROR
);

344  (
FILEBENCH_OK
);

345 
	}
}

349 
	#MAXREAP
 4096

	)

360 
	$fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

362 
aiocb64
 **
w‹kli°
;

363 
aiﬁi°_t
 *
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

364 
uncom∂ëed
 = 0;

365 #ifde‡
HAVE_AIOWAITN


366 
i
;

369 
w‹kli°
 = 
	`ˇŒoc
(
MAXREAP
,  (
aiocb64
 *));

372 
aio
) {

373 
uncom∂ëed
++;

374 
aio
 =áio->
Æ_√xt
;

378 
uöt_t
 
ncom∂ëed
 = 0;

379 
uöt_t
 
todo
;

380 
ö¥ogªss
;

381 #ifde‡
HAVE_AIOWAITN


382 
time•ec
 
timeout
;

385 
timeout
.
tv_£c
 = 1;

386 
timeout
.
tv_n£c
 = 0;

389 i‡(
uncom∂ëed
 > 
MAXREAP
)

390 
todo
 = 
MAXREAP
;

392 
todo
 = 
uncom∂ëed
 / 2;

394 i‡(
todo
 == 0)

395 
todo
 = 1;

397 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

399 #ifde‡
HAVE_AIOWAITN


400 i‡(((
	`aio_waôn64
((
aiocb64
 **)
w‹kli°
,

401 
MAXREAP
, &
todo
, &
timeout
)) == -1) &&

402 
î∫o
 && (î∫ÿ!
ETIME
)) {

403 
	`fûebích_log
(
LOG_ERROR
,

406 
	`°ªº‹
(
î∫o
), 
uncom∂ëed
, 
todo
);

409 
ncom∂ëed
 = 
todo
;

411 
ö¥ogªss
 = 0;

412 
i
 = 0; i < 
ncom∂ëed
; i++) {

413 i‡((
	`aio_ªtu∫64
(
w‹kli°
[
i
]) == -1) &&

414 (
î∫o
 =
EINPROGRESS
)) {

415 
ö¥ogªss
++;

418 i‡(
	`aio_dóŒoˇã
(
Êow›
, 
w‹kli°
[
i
])

419 =
FILEBENCH_ERROR
) {

420 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

422 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

423  (
FILEBENCH_ERROR
);

427 
uncom∂ëed
 -
ncom∂ëed
;

428 
uncom∂ëed
 +
ö¥ogªss
;

432 
ncom∂ëed
 = 0, 
ö¥ogªss
 = 0,

433 
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

434 
ncom∂ëed
 < 
todo
 && 
aio
 !
NULL
;áiÿaio->
Æ_√xt
) {

435 
ªsu…
 = 
	`aio_îr‹64
(&
aio
->
Æ_aiocb
);

437 i‡(
ªsu…
 =
EINPROGRESS
) {

438 
ö¥ogªss
++;

442 i‡((
	`aio_ªtu∫64
(&
aio
->
Æ_aiocb
Ë=-1Ë|| 
ªsu…
) {

443 
	`fûebích_log
(
LOG_ERROR
, "aio failed: %s",

444 
	`°ªº‹
(
ªsu…
));

448 
ncom∂ëed
++;

450 i‡(
	`aio_dóŒoˇã
(
Êow›
, &
aio
->
Æ_aiocb
) < 0) {

451 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

453 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

454  (
FILEBENCH_ERROR
);

458 
uncom∂ëed
 -
ncom∂ëed
;

461 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

463 
ncom∂ëed
, 
uncom∂ëed
, 
ö¥ogªss
);

465 } 
uncom∂ëed
 > 
MAXREAP
);

467 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

469 
	`‰ì
(
w‹kli°
);

471  (
FILEBENCH_OK
);

472 
	}
}

483 
	$fb_lfs_›í
(
fb_fdesc_t
 *
fd
, *
∑th
, 
Êags
, 
≥rms
)

485 i‡((
fd
->
fd_num
 = 
	`›í64
(
∑th
, 
Êags
, 
≥rms
)) < 0)

486  (
FILEBENCH_ERROR
);

488  (
FILEBENCH_OK
);

489 
	}
}

495 
	$fb_lfs_u∆ök
(*
∑th
)

497  (
	`u∆ök
(
∑th
));

498 
	}
}

503 
ssize_t


504 
	$fb_lfs_ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
buf_size
)

506  (
	`ªadlök
(
∑th
, 
buf
, 
buf_size
));

507 
	}
}

513 
	$fb_lfs_fsync
(
fb_fdesc_t
 *
fd
)

515  (
	`fsync
(
fd
->
fd_num
));

516 
	}
}

522 
	$fb_lfs_l£ek
(
fb_fdesc_t
 *
fd
, 
off64_t
 
off£t
, 
whí˚
)

524  (
	`l£ek64
(
fd
->
fd_num
, 
off£t
, 
whí˚
));

525 
	}
}

531 
	$fb_lfs_ª«me
(c⁄° *
ﬁd
, c⁄° *
√w
)

533  (
	`ª«me
(
ﬁd
, 
√w
));

534 
	}
}

541 
	$fb_lfs_˛o£
(
fb_fdesc_t
 *
fd
)

543  (
	`˛o£
(
fd
->
fd_num
));

544 
	}
}

550 
	$fb_lfs_mkdú
(*
∑th
, 
≥rm
)

552  (
	`mkdú
(
∑th
, 
≥rm
));

553 
	}
}

559 
	$fb_lfs_rmdú
(*
∑th
)

561  (
	`rmdú
(
∑th
));

562 
	}
}

569 
	$fb_lfs_ªcur_rm
(*
∑th
)

571 
cmd
[
MAXPATHLEN
];

573 (Ë
	`¢¥ötf
(
cmd
,  (cmd), "rm -r‡%s", 
∑th
);

576 i‡(
	`sy°em
(
cmd
));

578 
	}
}

584 
DIR
 *

585 
	$fb_lfs_›ídú
(*
∑th
)

587  (
	`›ídú
(
∑th
));

588 
	}
}

594 
dúít
 *

595 
	$fb_lfs_ªaddú
(
DIR
 *
dúp
)

597  (
	`ªaddú
(
dúp
));

598 
	}
}

604 
	$fb_lfs_˛o£dú
(
DIR
 *
dúp
)

606  (
	`˛o£dú
(
dúp
));

607 
	}
}

613 
	$fb_lfs_f°©
(
fb_fdesc_t
 *
fd
, 
°©64
 *
°©buÂ
)

615  (
	`f°©64
(
fd
->
fd_num
, 
°©buÂ
));

616 
	}
}

622 
	$fb_lfs_°©
(*
∑th
, 
°©64
 *
°©buÂ
)

624  (
	`°©64
(
∑th
, 
°©buÂ
));

625 
	}
}

631 
	$fb_lfs_pwrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
off£t
)

633  (
	`pwrôe64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
off£t
));

634 
	}
}

640 
	$fb_lfs_wrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

642  (
	`wrôe
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

643 
	}
}

649 
	$fb_lfs_åunˇã
(
fb_fdesc_t
 *
fd
, 
off64_t
 
f£_size
)

651 #ifde‡
HAVE_FTRUNCATE64


652  (
	`·runˇã64
(
fd
->
fd_num
, 
f£_size
));

654 
	`fûebích_log
(
LOG_ERROR
, "Converting off64_tÅo off_t in ftruncate,"

656  (
	`·runˇã
(
fd
->
fd_num
, (
off_t
)
f£_size
));

658 
	}
}

664 
	$fb_lfs_lök
(c⁄° *
exi°ög
, c⁄° *
√w
)

666  (
	`lök
(
exi°ög
, 
√w
));

667 
	}
}

673 
	$fb_lfs_symlök
(c⁄° *
exi°ög
, c⁄° *
√w
)

675  (
	`symlök
(
exi°ög
, 
√w
));

676 
	}
}

682 
	$fb_lfs_ac˚ss
(c⁄° *
∑th
, 
amode
)

684  (
	`ac˚ss
(
∑th
, 
amode
));

685 
	}
}

	@fb_random.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

30 
	~<m©h.h
>

31 
	~"fûebích.h
"

32 
	~"ùc.h
"

33 
	~"gamma_di°.h
"

34 
	~"cv¨s/mtwi°/mtwi°.h
"

45 
	$fb_øndom64
(
uöt64_t
 *
øndp
, uöt64_à
max
, uöt64_à
round
, 
avd_t
 
avd
)

47 
øndom_n‹mÆized
;

48 
uöt64_t
 
øndom
 = 0;

50 i‡(
avd
) {

52 i‡(!
	`AVD_IS_RANDOM
(
avd
)) {

55 
	`fûebích_log
(
LOG_ERROR
, "filebench_randomno64:Årying"

57 
	`fûebích_shutdown
(1);

60 
øndom
 = 
	`avd_gë_öt
(
avd
);

63 
øndom
 = 
	`mt_Œønd
();

73 
max
 = max - 
round
;

75 
øndom_n‹mÆized
 = ()
øndom
 / 
UINT64_MAX
;

76 
øndom
 = 
øndom_n‹mÆized
 * 
max
;

78 i‡(
round
) {

79 
øndom
 =Ñ™dom / 
round
;

80 
øndom
 =Ñ™dom * 
round
;

83 *
øndp
 = 
øndom
;

84 
	}
}

91 
	$fb_øndom32
(
uöt32_t
 *
øndp
,

92 
uöt32_t
 
max
, uöt32_à
round
, 
avd_t
 
avd
)

94 
uöt64_t
 
ønd64
;

96 
	`fb_øndom64
(&
ønd64
, 
max
, 
round
, 
avd
);

99 *
øndp
 = (
uöt32_t
)
ønd64
;

100 
	}
}

106 
	$fb_øndom_¥obabûôy
()

108 
uöt64_t
 
øndnum
;

110 
	`fb_øndom64
(&
øndnum
, 
UINT64_MAX
, 0, 
NULL
);

113  ()
øndnum
 / ()(
UINT64_MAX
);

114 
	}
}

123 
	$fb_ønd_§c_ønd48
(*
xi
)

125  (
	`î™d48
(
xi
));

126 
	}
}

129 
	$fb_ønd_§c_øndom
(*
xi
)

131  
	`fb_øndom_¥obabûôy
();

132 
	}
}

139 
	$ønd_unif‹m_gë
(
ønddi°_t
 *
∫dp
)

141 
d¥ob
, 
dmö
, 
dªs
, 
dround
;

143 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

144 
dround
 = ()
∫dp
->
∫d_vöt_round
;

146 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

148 
dªs
 = (
d¥ob
 * (2.0 * (
∫dp
->
∫d_dbl_món
 - 
dmö
))) + dmin;

150 i‡(
dround
 == 0.0)

151  (
dªs
);

153  (
	`round
(
dªs
 / 
dround
) * dround);

154 
	}
}

161 
	$ønd_gamma_gë
(
ønddi°_t
 *
∫dp
)

163 
dmu…
, 
dªs
, 
dmö
, 
dround
;

165 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

166 
dround
 = ()
∫dp
->
∫d_vöt_round
;

168 
dmu…
 = (
∫dp
->
∫d_dbl_món
 - 
dmö
Ë/Ñndp->
∫d_dbl_gamma
;

170 
dªs
 = 
	`gamma_di°_knuth_§c
(
∫dp
->
∫d_dbl_gamma
,

171 
dmu…
, 
∫dp
->
∫d_§c
,Ñndp->
∫d_xi
Ë+ 
dmö
;

173 i‡(
dround
 == 0.0)

174  (
dªs
);

176  (
	`round
(
dªs
 / 
dround
) * dround);

177 
	}
}

184 
	$ønd_èbÀ_gë
(
ønddi°_t
 *
∫dp
)

186 
d¥ob
, 
d¥˙t
, 
dèbªs
, 
ds˛ªs
, 
dmö
, 
dround
;

187 
idx
;

189 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

190 
dround
 = ()
∫dp
->
∫d_vöt_round
;

192 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

194 
d¥˙t
 = (
d¥ob
 * ()(
PF_TAB_SIZE
));

195 
idx
 = ()
d¥˙t
;

197 
dèbªs
 = (
∫dp
->
∫d_r·
[
idx
].
rf_ba£
 +

198 (
∫dp
->
∫d_r·
[
idx
].
rf_ønge
 * (
d¥˙t
 - ()idx)));

200 
ds˛ªs
 = (
dèbªs
 * (
∫dp
->
∫d_dbl_món
 - 
dmö
)) + dmin;

202 i‡(
dround
 == 0.0)

203  (
ds˛ªs
);

205  (
	`round
(
ds˛ªs
 / 
dround
) * dround);

206 
	}
}

212 
	$ønd_£ed_£t
(
ønddi°_t
 *
∫dp
)

215 
uöt64_t
 
Œ
;

216 
uöt16_t
 
w
[4];

217 } 
ãmp1
;

218 
idx
;

220 
ãmp1
.
Œ
 = (
uöt64_t
)
	`avd_gë_öt
(
∫dp
->
∫d_£ed
);

222 
idx
 = 0; idx < 3; idx++) {

224 #ifde‡
_BIG_ENDIAN


225 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[3-idx];

227 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[idx];

230 
	}
}

236 
ønddi°_t
 *

237 
	$ønddi°_Æloc
()

239 
ønddi°_t
 *
∫dp
;

241 i‡((
∫dp
 = (
ønddi°_t
 *)
	`ùc_mÆloc
(
FILEBENCH_RANDDIST
)Ë=
NULL
) {

242 
	`fûebích_log
(
LOG_ERROR
, "Out of memory forÑandom dist");

243  (
NULL
);

247 
∫dp
->
∫d_√xt
 = 
fûebích_shm
->
shm_ønd_li°
;

248 
fûebích_shm
->
shm_ønd_li°
 = 
∫dp
;

250  (
∫dp
);

251 
	}
}

259 
	$ønddi°_öô
(
ønddi°_t
 *
∫dp
)

261 
¥obèbít_t
 *
rdã_hdp
, *
±ï
;

262 
èbÀmón
, 
èbÀmö
 = 0;

263 
±eidx
;

266 
∫dp
->
∫d_dbl_gamma
 = ()
	`avd_gë_öt
‘ndp->
∫d_gamma
) / 1000.0;

267 i‡(
∫dp
->
∫d_món
 !
NULL
)

268 
∫dp
->
∫d_dbl_món
 = ()
	`avd_gë_öt
‘ndp->
∫d_món
);

270 
∫dp
->
∫d_dbl_món
 =Ñndp->
∫d_dbl_gamma
;

273 
∫dp
->
∫d_vöt_mö
 = 
	`avd_gë_öt
‘ndp->
∫d_mö
);

274 
∫dp
->
∫d_vöt_round
 = 
	`avd_gë_öt
‘ndp->
∫d_round
);

276 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

278 
∫dp
->
∫d_dbl_món
,Ñndp->
∫d_dbl_gamma
,

279 (
u_l⁄gl⁄g_t
)
∫dp
->
∫d_vöt_mö
);

282 
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

283 
RAND_TYPE_UNIFORM
:

284 
∫dp
->
∫d_gë
 = 
ønd_unif‹m_gë
;

287 
RAND_TYPE_GAMMA
:

288 
∫dp
->
∫d_gë
 = 
ønd_gamma_gë
;

291 
RAND_TYPE_TABLE
:

292 
∫dp
->
∫d_gë
 = 
ønd_èbÀ_gë
;

296 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Random TypeÇot Specified");

297 
	`fûebích_shutdown
(1);

302 i‡(
∫dp
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
) {

303 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_ønd48
;

304 
	`ønd_£ed_£t
(
∫dp
);

306 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_øndom
;

310 i‡((
rdã_hdp
 = 
∫dp
->
∫d_¥obèbs
Ë=
NULL
)

314 
±eidx
 = 0;

315 
èbÀmón
 = 0.0;

316 
±ï
 = 
rdã_hdp
;Öãp;Öã∞±ï->
±e_√xt
) {

317 
dmö
, 
dmax
;

318 
ít˙t
;

320 
dmax
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmax
);

321 
dmö
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmö
);

324 i‡(
±eidx
 == 0)

325 
èbÀmö
 = 
dmö
;

328 i‡(
èbÀmö
 > 
dmö
)

329 
èbÀmö
 = 
dmö
;

331 
ít˙t
 = ()
	`avd_gë_öt
(
±ï
->
±e_≥r˚¡
);

332 
èbÀmón
 +(((
dmö
 + 
dmax
)/2.0Ë* ()
ít˙t
);

336 ; 
ít˙t
 > 0;Éntcnt--) {

337 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 
dmö
;

338 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 
dmax
 - 
dmö
;

339 
±eidx
++;

344 i‡(
±eidx
 !
PF_TAB_SIZE
)

345 
	`fûebích_log
(
LOG_ERROR
,

346 "ProbÅabÀ o∆yÅŸÆ†%d%%", 
±eidx
);

349 i‡(
∫dp
->
∫d_dbl_món
 == 0.0)

350 
∫dp
->
∫d_dbl_món
 = ()
èbÀmón
 / ()
PF_TAB_SIZE
;

353 
èbÀmón
 = (èbÀmó¿/ 100.0Ë- 
èbÀmö
;

356 i‡(
èbÀmón
 == 0.0) {

357 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

358 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 0.0;

359 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 0.0;

364 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

366 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 =

367 ((
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 - 
èbÀmö
Ë/ 
èbÀmón
);

368 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 =

369 (
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 / 
èbÀmón
);

371 
	}
}

	@fb_random.h

26 #i‚de‡
_FB_RANDOM_H


27 
	#_FB_RANDOM_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

37 
	s¥obèbít
 {

38 
¥obèbít
 *
	m±e_√xt
;

39 
avd_t
 
	m±e_≥r˚¡
;

40 
avd_t
 
	m±e_£gmö
;

41 
avd_t
 
	m±e_£gmax
;

42 } 
	t¥obèbít_t
;

49 
	søndfunc
 {

50 
	mrf_ba£
;

51 
	mrf_ønge
;

52 } 
	tøndfunc_t
;

55 
	#PF_TAB_SIZE
 100

	)

63 
	sønddi°
 {

64 (*
	m∫d_gë
)(
	mønddi°
 *);

65 (*
	m∫d_§c
)(*);

66 
ønddi°
 *
	m∫d_√xt
;

67 
avd_t
 
	m∫d_£ed
;

68 
avd_t
 
	m∫d_món
;

69 
avd_t
 
	m∫d_gamma
;

70 
avd_t
 
	m∫d_mö
;

71 
avd_t
 
	m∫d_round
;

72 
	m∫d_dbl_món
;

73 
	m∫d_dbl_gamma
;

74 
fböt_t
 
	m∫d_vöt_mö
;

75 
fböt_t
 
	m∫d_vöt_round
;

76 
¥obèbít_t
 *
	m∫d_¥obèbs
;

77 
øndfunc_t
 
	m∫d_r·
[
PF_TAB_SIZE
];

78 
uöt16_t
 
	m∫d_xi
[3];

79 
uöt16_t
 
	m∫d_ty≥
;

80 } 
	tønddi°_t
;

82 
	#RAND_TYPE_UNIFORM
 0x1

	)

83 
	#RAND_TYPE_GAMMA
 0x2

	)

84 
	#RAND_TYPE_TABLE
 0x3

	)

85 
	#RAND_TYPE_MASK
 0x0fff

	)

86 
	#RAND_SRC_URANDOM
 0x0000

	)

87 
	#RAND_SRC_GENERATOR
 0x1000

	)

89 
	#RAND_PARAM_TYPE
 1

	)

90 
	#RAND_PARAM_SRC
 2

	)

91 
	#RAND_PARAM_SEED
 3

	)

92 
	#RAND_PARAM_MIN
 4

	)

93 
	#RAND_PARAM_MEAN
 5

	)

94 
	#RAND_PARAM_GAMMA
 6

	)

95 
	#RAND_PARAM_ROUND
 7

	)

98 
fb_øndom64
(
uöt64_t
 *, uöt64_t, uöt64_t, 
avd_t
);

99 
fb_øndom32
(
uöt32_t
 *, uöt32_t, uöt32_t, 
avd_t
);

101 
ønddi°_t
 *
ønddi°_Æloc
();

102 
ønddi°_öô
(
ønddi°_t
 *
∫dp
);

	@fbtime.c

1 
	~<sys/time.h
>

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~"fbtime.h
"

5 
	~"c⁄fig.h
"

6 
	~"fûebích.h
"

13 #i‚de‡
HAVE_GETHRTIME


14 
hπime_t


15 
	$gëhπime
()

17 
timevÆ
 
tv
;

18 
hπime_t
 
hπ
;

20 
	`gëtimeofday
(&
tv
, 
NULL
);

22 
hπ
 = (
hπime_t
)
tv
.
tv_£c
 * 1000000000UL +

23 (
hπime_t
)
tv
.
tv_u£c
 * 1000UL;

25  
hπ
;

26 
	}
}

	@fbtime.h

1 #i‚de‡
_FBTIME_H


2 
	#_FBTIME_H


	)

4 
	~"c⁄fig.h
"

6 #ifde‡
HAVE_STDINT_H


7 
	~<°döt.h
>

10 #i‚de‡
HAVE_GETHRTIME


11 
uöt64_t
 
	thπime_t
;

12 
hπime_t
 
gëhπime
();

15 
	#SEC2NS_FLOAT
 ()1000000000.0

	)

16 
	#SEC2MS_FLOAT
 ()1000000.0

	)

	@filebench.h

28 #i‚de‡
_FB_FILEBENCH_H


29 
	#_FB_FILEBENCH_H


	)

31 
	~"c⁄fig.h
"

33 
	~<°dlib.h
>

34 
	~<uni°d.h
>

35 
	~<sys/°©.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/∑øm.h
>

38 
	~<sys/ªsour˚.h
>

39 
	~<±hªad.h
>

40 
	~<sig«l.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

46 
	~<î∫o.h
>

47 
	~<sys/times.h
>

48 #ifde‡
HAVE_STDINT_H


49 
	~<°döt.h
>

55 #ifde‡
__STDC__


56 
	~<°d¨g.h
>

57 
	#__V
(
x
Ë
	)
x

58 #i‚de‡
__P


59 
	#__P
(
x
Ë
	)
x

62 
	~<v¨¨gs.h
>

63 
	#__V
(
x
Ë(
va_Æi°
Ë
va_d˛


	)

64 
	#__P
(
x
Ë()

	)

65 c⁄°

	)

67 #ifde‡
HAVE_AIO


68 
	~<aio.h
>

70 
	~<dúít.h
>

73 
uöt64_t
 
	tfböt_t
;

74 #i‚de‡
HAVE_BOOLEAN_T


75 íum { 
	mB_FALSE
, 
	mB_TRUE
 } 
	tboﬁón_t
;

77 
	#TRUE
 1

	)

78 
	#FALSE
 0

	)

79 #i‚de‡
HAVE_U_LONGLONG_T


80 
	tu_l⁄gl⁄g_t
;

82 #i‚de‡
HAVE_UINT_T


83 
	tuöt_t
;

85 #i‚de‡
MIN


87 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

91 #i‚de‡
HAVE_OFF64_T


92 
	#off64_t
 
off_t


	)

94 #i‚de‡
HAVE_STAT64


96 
	#°©64
 
°©


	)

98 #i‚de‡
HAVE_AIO_ERROR64


99 
	#aio_îr‹64
 
aio_îr‹


	)

101 #i‚de‡
HAVE_AIO_WRITE64


102 
	#aio_wrôe64
 
aio_wrôe


	)

103 
	#aiocb64
 
aiocb


	)

105 #i‚de‡
HAVE_AIO_RETURN64


106 
	#aio_ªtu∫64
 
aio_ªtu∫


	)

108 #i‚de‡
HAVE_OPEN64


109 
	#›í64
 
›í


	)

111 #i‚de‡
HAVE_MMAP64


112 
	#mm≠64
 
mm≠


	)

114 #i‚de‡
HAVE_FSTAT64


115 
	#f°©64
 
f°©


	)

117 #i‚de‡
HAVE_LSEEK64


118 
	#l£ek64
 
l£ek


	)

120 #i‚de‡
HAVE_PWRITE64


121 
	#pwrôe64
 
pwrôe


	)

123 #i‚de‡
HAVE_PREAD64


124 
	#¥ód64
 
¥ód


	)

127 
	~"Êag.h
"

128 
	~"v¨s.h
"

129 
	~"fb_cv¨.h
"

130 
	~"fb_avl.h
"

131 
	~"°©s.h
"

132 
	~"¥ocÊow.h
"

133 
	~"misc.h
"

134 
	~"f•lug.h
"

135 
	~"fûe£t.h
"

136 
	~"thªadÊow.h
"

137 
	~"Êow›.h
"

138 
	~"fb_øndom.h
"

139 
	~"ùc.h
"

141 
pid_t
 
my_pid
;

142 
¥ocÊow_t
 *
my_¥ocÊow
;

143 
î∫o
;

144 *
exe˙ame
;

146 
fûebích_log
 
__V
((
Àvñ
, c⁄° *
fmt
, ...));

147 
fûebích_shutdown
(
îr‹
);

148 
fûebích_∂ugö_funcvecöô
();

150 
	#FILEBENCH_RANDMAX64
 
UINT64_MAX


	)

151 
	#FILEBENCH_RANDMAX32
 
UINT32_MAX


	)

153 #i‡
deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

154 
	#fb_øndom
 
fb_øndom64


	)

155 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX64


	)

157 
	#fb_øndom
 
fb_øndom32


	)

158 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX32


	)

161 #i‚de‡
HAVE_SIGIGNORE


163 
ölöe
 
	$sigign‹e
(
sig
) {

164 
siga˘i⁄
 
ß
;

165 
	`bzîo
(&
ß
, (sa));

166 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

167  (
	`siga˘i⁄
(
sig
, &
ß
, 
NULL
));

168 
	}
}

171 
	#KB
 (1024LL)

	)

172 
	#MB
 (
KB
 * KB)

	)

173 
	#GB
 (
KB
 * 
MB
)

	)

175 
	#KB_FLOAT
 (()1024.0)

	)

176 
	#MB_FLOAT
 (
KB_FLOAT
 * KB_FLOAT)

	)

177 
	#GB_FLOAT
 (
KB_FLOAT
 * 
MB_FLOAT
)

	)

179 
	#MMAP_SIZE
 (1024UL * 1024UL * 1024UL)

	)

181 
	#FILEBENCH_VERSION
 
VERSION


	)

182 
	#FILEBENCH_PROMPT
 "fûebích> "

	)

183 
	#MAX_LINE_LEN
 1024

	)

184 
	#MAX_CMD_HIST
 128

	)

185 
	#SHUTDOWN_WAIT_SECONDS
 3

	)

187 
	#FILEBENCH_DONE
 1

	)

188 
	#FILEBENCH_OK
 0

	)

189 
	#FILEBENCH_ERROR
 -1

	)

190 
	#FILEBENCH_NORSC
 -2

	)

	@fileset.c

28 
	~<f˙é.h
>

29 
	~<±hªad.h
>

30 
	~<î∫o.h
>

31 
	~<m©h.h
>

32 
	~<libgí.h
>

33 
	~<sys/mm™.h
>

34 
	~<sys/shm.h
>

36 
	~"fûebích.h
"

37 
	~"fûe£t.h
"

38 
	~"gamma_di°.h
"

39 
	~"utûs.h
"

40 
	~"f•lug.h
"

42 
	gfûe¸óã_d⁄e
;

69 
	#MAX_PARALLOC_THREADS
 32

	)

76 
	$fûe£t_ítôy_«me
(
fûe£t_t
 *
fûe£t
)

78 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)

82 
	}
}

91 
	$åunc_dú«me
(*
dú
)

93 *
s
 = 
dú
 + 
	`°æí
(dir);

95 
s
 !
dú
) {

96 
c
 = *
s
;

98 *
s
 = 0;

99 i‡(
c
 == '/')

101 
s
--;

103  (
dú
);

104 
	}
}

114 
	$fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
)

116 
fûe£ã¡ry_t
 *
f£p
 = 
íåy
;

117 
∑th
[
MAXPATHLEN
];

118 
∑thtmp
[
MAXPATHLEN
];

119 *
s
;

121 
∑th
[0] = '\0';

122 
f£p
->
f£_∑ª¡
) {

123 (Ë
	`°r˝y
(
∑thtmp
, "/");

124 (Ë
	`fb_°æˇt
(
∑thtmp
, 
f£p
->
f£_∑th
, 
MAXPATHLEN
);

125 (Ë
	`fb_°æˇt
(
∑thtmp
, 
∑th
, 
MAXPATHLEN
);

126 (Ë
	`fb_°æ˝y
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

127 
f£p
 = f£p->
f£_∑ª¡
;

130 
s
 = 
	`mÆloc
(
	`°æí
(
∑th
) + 1);

131 (Ë
	`fb_°æ˝y
(
s
, 
∑th
, 
MAXPATHLEN
);

132  (
s
);

133 
	}
}

142 
	$fûe£t_mkdú
(*
∑th
, 
mode
)

144 *
p
;

145 *
dús
[65536];

146 
i
 = 0;

148 i‡((
p
 = 
	`°rdup
(
∑th
)Ë=
NULL
)

149 
nuŒ_°r
;

157 
°©64
 
sb
;

159 i‡(
	`°©64
(
p
, &
sb
) == 0)

161 i‡(
	`°æí
(
p
) < 3)

163 i‡((
dús
[
i
] = 
	`°rdup
(
p
)Ë=
NULL
) {

164 
	`‰ì
(
p
);

165 
nuŒ_°r
;

168 (Ë
	`åunc_dú«me
(
p
);

169 
i
++;

173 --
i
; i >= 0; i--) {

174 (Ë
	`FB_MKDIR
(
dús
[
i
], 
mode
);

175 
	`‰ì
(
dús
[
i
]);

178 
	`‰ì
(
p
);

179  (
FILEBENCH_OK
);

181 
nuŒ_°r
:

183 --
i
; i >= 0; i--)

184 
	`‰ì
(
dús
[
i
]);

186 
	`fûebích_log
(
LOG_ERROR
,

187 "FaûedÅÿ¸óã dúe˘‹yÖ©h %s: Ouào‡mem‹y", 
∑th
);

188  (
FILEBENCH_ERROR
);

189 
	}
}

195 
	$fûe£t_¸óã_subdús
(
fûe£t_t
 *
fûe£t
, *
fûe£ç©h
)

197 
fûe£ã¡ry_t
 *
dúíåy
;

198 
fuŒ_∑th
[
MAXPATHLEN
];

199 *
∑π_∑th
;

202 
dúíåy
 = 
fûe£t
->
fs_dúli°
;

203 
dúíåy
) {

204 (Ë
	`fb_°æ˝y
(
fuŒ_∑th
, 
fûe£ç©h
, 
MAXPATHLEN
);

205 
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dúíåy
);

206 (Ë
	`fb_°æˇt
(
fuŒ_∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

207 
	`‰ì
(
∑π_∑th
);

210 i‡(
	`fûe£t_mkdú
(
fuŒ_∑th
, 0755Ë=
FILEBENCH_ERROR
)

211  (
FILEBENCH_ERROR
);

213 
dúíåy
 = dúíåy->
f£_√xto·y≥
;

215  (
FILEBENCH_OK
);

216 
	}
}

223 
	$fûe£t_move_íåy
(
avl_åì_t
 *
§c_åì
,ávl_åì_à*
d°_åì
,

224 
fûe£ã¡ry_t
 *
íåy
)

226 
	`avl_ªmove
(
§c_åì
, 
íåy
);

227 
	`avl_add
(
d°_åì
, 
íåy
);

228 
	}
}

235 
	$fûe£t_Æloc_Àafdú
(
fûe£ã¡ry_t
 *
íåy
)

237 
fûe£t_t
 *
fûe£t
;

238 
∑th
[
MAXPATHLEN
];

239 
°©64
 
sb
;

240 *
∑thtmp
;

242 
fûe£t
 = 
íåy
->
f£_fûe£t
;

243 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

244 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

245 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

246 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

247 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

248 
	`‰ì
(
∑thtmp
);

250 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

253 i‡(!((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
	`°©64
(
∑th
, &
sb
) == 0))) {

256 i‡(
	`FB_MKDIR
(
∑th
, 0755) < 0) {

257 
	`fûebích_log
(
LOG_ERROR
,

259 
∑th
, 
	`°ªº‹
(
î∫o
));

260 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

261  (
FILEBENCH_ERROR
);

266 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

267  (
FILEBENCH_OK
);

268 
	}
}

275 
	$fûe£t_Æloc_fûe
(
fûe£ã¡ry_t
 *
íåy
)

277 
fûe£t_t
 *
fûe£t
;

278 
∑th
[
MAXPATHLEN
];

279 *
buf
;

280 
°©64
 
sb
;

281 *
∑thtmp
;

282 
off64_t
 
£ek
;

283 
fb_fdesc_t
 
fdesc
;

284 
åu°_åì
;

286 
fûe£t
 = 
íåy
->
f£_fûe£t
;

287 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

288 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

289 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

290 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

291 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

292 
	`‰ì
(
∑thtmp
);

294 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

297 
åu°_åì
 = 
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
);

298 i‡((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
åu°_åì
 ||

299 (
	`FB_STAT
(
∑th
, &
sb
) == 0))) {

300 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
, 0Ë=
FILEBENCH_ERROR
) {

301 
	`fûebích_log
(
LOG_INFO
,

303 
∑th
);

304 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

305  (
FILEBENCH_ERROR
);

308 i‡(
åu°_åì
 || (
sb
.
°_size
 =(
off64_t
)
íåy
->
f£_size
)) {

309 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

310 "Reusög fûê%s", 
∑th
);

312 (Ë
	`FB_CLOSE
(&
fdesc
);

315 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

316  (
FILEBENCH_OK
);

318 } i‡(
sb
.
°_size
 > (
off64_t
)
íåy
->
f£_size
) {

320 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

321 "Trunˇtög &Ñe-usög fûê%s", 
∑th
);

323 (Ë
	`FB_FTRUNC
(&
fdesc
, (
off64_t
)
íåy
->
f£_size
);

325 (Ë
	`FB_CLOSE
(&
fdesc
);

328 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

329  (
FILEBENCH_OK
);

334 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
 | 
O_CREAT
, 0644) ==

335 
FILEBENCH_ERROR
) {

336 
	`fûebích_log
(
LOG_ERROR
,

338 
∑th
, 
	`°ªº‹
(
î∫o
));

341 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

342  (
FILEBENCH_ERROR
);

346 i‡((
buf
 = (*)
	`mÆloc
(
FILE_ALLOC_BLOCK
)Ë=
NULL
) {

348 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

349  (
FILEBENCH_ERROR
);

352 
£ek
 = 0; sìk < 
íåy
->
f£_size
; ) {

353 
off64_t
 
wsize
;

354 
ªt
 = 0;

360 
wsize
 = 
	`MIN
(
íåy
->
f£_size
 - 
£ek
, 
FILE_ALLOC_BLOCK
);

362 
ªt
 = 
	`FB_WRITE
(&
fdesc
, 
buf
, 
wsize
);

363 i‡(
ªt
 !
wsize
) {

364 
	`fûebích_log
(
LOG_ERROR
,

366 
∑th
, 
	`°ªº‹
(
î∫o
));

367 (Ë
	`FB_CLOSE
(&
fdesc
);

368 
	`‰ì
(
buf
);

369 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

370  (
FILEBENCH_ERROR
);

372 
£ek
 +
wsize
;

375 (Ë
	`FB_CLOSE
(&
fdesc
);

377 
	`‰ì
(
buf
);

380 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

382 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

384 
∑th
, (
u_l⁄gl⁄g_t
)
íåy
->
f£_size
);

386  (
FILEBENCH_OK
);

387 
	}
}

395 
	$fûe£t_Æloc_thªad
(
fûe£ã¡ry_t
 *
íåy
)

397 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
) {

398 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

399 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = -1;

401 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

402 
fûebích_shm
->
shm_f•¨Æloc_cou¡
--;

405 (Ë
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_f•¨Æloc_cv
);

406 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

408 
	`±hªad_exô
(
NULL
);

409  (
NULL
);

410 
	}
}

423 
	$fûe£t_›ífûe
(
fb_fdesc_t
 *
fdesc
, 
fûe£t_t
 *
fûe£t
,

424 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
fûemode
, 
©ås
)

426 
∑th
[
MAXPATHLEN
];

427 
dú
[
MAXPATHLEN
];

428 *
∑thtmp
;

429 
°©64
 
sb
;

430 
›í_©ås
 = 0;

432 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

433 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

434 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

435 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

436 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

437 (Ë
	`fb_°æ˝y
(
dú
, 
∑th
, 
MAXPATHLEN
);

438 
	`‰ì
(
∑thtmp
);

439 (Ë
	`åunc_dú«me
(
dú
);

442 i‡((
Êag
 & 
O_CREAT
Ë&& (
	`°©64
(
dú
, &
sb
) != 0)) {

443 i‡(
	`fûe£t_mkdú
(
dú
, 0755Ë=
FILEBENCH_ERROR
)

444  (
FILEBENCH_ERROR
);

447 i‡(
©ås
 & 
FLOW_ATTR_DSYNC
)

448 
›í_©ås
 |
O_SYNC
;

450 #ifde‡
HAVE_O_DIRECT


451 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

452 
›í_©ås
 |
O_DIRECT
;

455 i‡(
	`FB_OPEN
(
fdesc
, 
∑th
, 
Êag
 | 
›í_©ås
, 
fûemode
)

456 =
FILEBENCH_ERROR
) {

457 
	`fûebích_log
(
LOG_ERROR
,

459 
íåy
->
f£_ödex
, 
∑th
,É¡ry->
f£_Êags
, 
	`°ªº‹
(
î∫o
));

461 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

462  (
FILEBENCH_ERROR
);

465 #ifde‡
HAVE_DIRECTIO


466 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

467 ()
	`dúe˘io
(
fdesc
->
fd_num
, 
DIRECTIO_ON
);

470 #ifde‡
HAVE_NOCACHE_FCNTL


471 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

472 ()
	`f˙é
(
fdesc
->
fd_num
, 
F_NOCACHE
, 1);

476 i‡(
©ås
 & 
FLOW_ATTR_FADV_RANDOM
) {

477 #ifde‡
HAVE_FADVISE


478 i‡(
	`posix_Ádvi£
(
fdesc
->
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

479 !
FILEBENCH_OK
) {

480 
	`fûebích_log
(
LOG_ERROR
,

482 
∑th
, 
	`°ªº‹
(
î∫o
));

483 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

484  (
FILEBENCH_ERROR
);

486 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled **");

488 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

493 i‡(
Êag
 & 
O_CREAT
)

494 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 1);

496 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 1);

498  (
FILEBENCH_OK
);

499 
	}
}

507 
	$fûe£t_pickª£t
(
fûe£t_t
 *
fûe£t
, 
íåy_ty≥
)

509 
fûe£ã¡ry_t
 *
íåy
;

511 
íåy_ty≥
 & 
FILESET_PICKMASK
) {

512 
FILESET_PICKFILE
:

513 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_n€x_fûes
);

516 
íåy
) {

517 
íåy
->
f£_Êags
 |
FSE_FREE
;

518 
íåy
->
f£_›í_˙t
 = 0;

519 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_fûes
,

520 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

521 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_fûes
,Éntry);

525 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_exi°_fûes
);

527 
íåy
) {

528 
íåy
->
f£_Êags
 |
FSE_FREE
;

529 
íåy
->
f£_›í_˙t
 = 0;

530 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_fûes
,

531 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

533 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_fûes
,Éntry);

538 
FILESET_PICKDIR
:

542 
FILESET_PICKLEAFDIR
:

543 
íåy
 = (
fûe£ã¡ry_t
 *)

544 
	`avl_fú°
(&
fûe£t
->
fs_n€x_Àaf_dús
);

547 
íåy
) {

548 
íåy
->
f£_Êags
 |
FSE_FREE
;

549 
íåy
->
f£_›í_˙t
 = 0;

550 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_Àaf_dús
,

551 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

552 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_Àaf_dús
,Éntry);

556 
íåy
 = (
fûe£ã¡ry_t
 *)

557 
	`avl_fú°
(&
fûe£t
->
fs_exi°_Àaf_dús
);

559 
íåy
) {

560 
íåy
->
f£_Êags
 |
FSE_FREE
;

561 
íåy
->
f£_›í_˙t
 = 0;

562 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_Àaf_dús
,

563 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

565 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_Àaf_dús
,Éntry);

570 
	}
}

575 
fûe£ã¡ry_t
 *

576 
	$fûe£t_föd_íåy
(
avl_åì_t
 *
©p
, 
uöt_t
 
ödex
)

578 
avl_ödex_t
 
found_loc
;

579 
fûe£ã¡ry_t
 
desúed_f£
, *
found_f£
;

582 
desúed_f£
.
f£_ödex
 = 
ödex
;

583 
found_f£
 = 
	`avl_föd
(
©p
, (*)(&
desúed_f£
), &
found_loc
);

584 i‡(
found_f£
 !
NULL
)

585  (
found_f£
);

588 
found_f£
 = 
	`avl_√¨e°
(
©p
, 
found_loc
, 
AVL_AFTER
);

589 i‡(
found_f£
 !
NULL
)

590  (
found_f£
);

593 
found_f£
 = 
	`avl_fú°
(
©p
);

594  (
found_f£
);

595 
	}
}

612 
fûe£ã¡ry_t
 *

613 
	$fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
, 
ödex
)

615 
fûe£ã¡ry_t
 *
íåy
 = 
NULL
;

616 
fûe£ã¡ry_t
 *
°¨t_poöt
;

617 
avl_åì_t
 *
©p
 = 
NULL
;

618 
fböt_t
 
max_íåõs
 = 0;

620 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

623 
Êags
 & 
FILESET_PICKMASK
) {

624 
FILESET_PICKFILE
:

626 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking file");

628 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
)

629 
em±y
;

631 
fûe£t
->
fs_idÀ_fûes
 == 0) {

632 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_fûes_cv
,

633 &
fûe£t
->
fs_pick_lock
);

636 
max_íåõs
 = 
fûe£t
->
fs_c⁄°íåõs
;

637 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

638 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking unique");

639 
©p
 = &
fûe£t
->
fs_‰ì_fûes
;

640 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

641 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÇotÉxisting");

642 
©p
 = &
fûe£t
->
fs_n€x_fûes
;

644 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÉxisting");

645 
©p
 = &
fûe£t
->
fs_exi°_fûes
;

649 
FILESET_PICKDIR
:

651 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking directory");

653 i‡(
fûe£t
->
fs_dúli°
 =
NULL
)

654 
em±y
;

656 
fûe£t
->
fs_idÀ_dús
 == 0) {

657 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_dús_cv
,

658 &
fûe£t
->
fs_pick_lock
);

661 
max_íåõs
 = 1;

662 
©p
 = &
fûe£t
->
fs_dús
;

665 
FILESET_PICKLEAFDIR
:

667 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÜeaf directory");

669 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
)

670 
em±y
;

672 
fûe£t
->
fs_idÀ_Àafdús
 == 0) {

673 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
,

674 &
fûe£t
->
fs_pick_lock
);

677 
max_íåõs
 = 
fûe£t
->
fs_c⁄°Àafdús
;

678 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

679 
©p
 = &
fûe£t
->
fs_‰ì_Àaf_dús
;

680 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

681 
©p
 = &
fûe£t
->
fs_n€x_Àaf_dús
;

683 
©p
 = &
fûe£t
->
fs_exi°_Àaf_dús
;

689 i‡(
	`avl_is_em±y
(
©p
)) {

690 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "atp isÉmpty");

691 
em±y
;

694 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

695 
uöt64_t
 
ödex64
;

704 i‡(
ödex
) {

705 
ödex64
 = 
ödex
;

707 
	`fb_øndom64
(&
ödex64
, 
max_íåõs
, 0, 
NULL
);

710 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, ()
ödex64
);

712 i‡(
íåy
 =
NULL
)

713 
em±y
;

715 } i‡(
Êags
 & 
FILESET_PICKBYINDEX
) {

717 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
ödex
);

721 
Êags
 & 
FILESET_PICKMASK
) {

722 
FILESET_PICKFILE
:

723 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

724 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

725 
fûe£t
->
fs_fûe_√rŸ‹
);

726 
fûe£t
->
fs_fûe_√rŸ‹
 =

727 
íåy
->
f£_ödex
 + 1;

729 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

730 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
]);

731 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
] =

732 
íåy
->
f£_ödex
 + 1;

736 
FILESET_PICKDIR
:

737 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
fûe£t
->
fs_dúrŸ‹
);

738 
fûe£t
->
fs_dúrŸ‹
 = 
íåy
->
f£_ödex
 + 1;

741 
FILESET_PICKLEAFDIR
:

742 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

743 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

744 
fûe£t
->
fs_Àafdú_√rŸ‹
);

745 
fûe£t
->
fs_Àafdú_√rŸ‹
 =

746 
íåy
->
f£_ödex
 + 1;

748 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

749 
fûe£t
->
fs_Àafdú_exrŸ‹
);

750 
fûe£t
->
fs_Àafdú_exrŸ‹
 =

751 
íåy
->
f£_ödex
 + 1;

757 i‡(
íåy
 =
NULL
)

758 
em±y
;

761 
°¨t_poöt
 = 
íåy
;

762 
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

765 
íåy
 = 
	`AVL_NEXT
(
©p
,Éntry);

766 i‡(
íåy
 =
NULL
)

767 
íåy
 = 
	`avl_fú°
(
©p
);

770 i‡((
íåy
 =
NULL
Ë|| (íåy =
°¨t_poöt
)) {

771 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

772 "AŒ %d fûe†¨êbusy", 
	`avl_numnodes
(
©p
));

773 
em±y
;

779 
Êags
 & 
FILESET_PICKMASK
) {

780 
FILESET_PICKFILE
:

781 
fûe£t
->
fs_idÀ_fûes
--;

783 
FILESET_PICKDIR
:

784 
fûe£t
->
fs_idÀ_dús
--;

786 
FILESET_PICKLEAFDIR
:

787 
fûe£t
->
fs_idÀ_Àafdús
--;

792 
íåy
->
f£_Êags
 |
FSE_BUSY
;

794 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

795 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picked fûê%s", 
íåy
->
f£_∑th
);

796  (
íåy
);

798 
em±y
:

799 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "No file found");

800 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

801  (
NULL
);

802 
	}
}

810 
	$fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

811 
√w_exi°_vÆ
, 
›í_˙t_ö¸
)

813 
fûe£t_t
 *
fûe£t
 = 
NULL
;

815 i‡(
íåy
)

816 
fûe£t
 = 
íåy
->
f£_fûe£t
;

818 i‡(
fûe£t
 =
NULL
) {

819 
	`fûebích_log
(
LOG_ERROR
, "fileset_unbusy: NO FILESET!");

823 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

826 i‡(
upd©e_exi°
) {

827 i‡(
√w_exi°_vÆ
 =
TRUE
) {

828 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

831 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

832 
íåy
->
f£_Êags
 &(~
FSE_FREE
);

833 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

834 
FSE_TYPE_FILE
:

835 
	`fûe£t_move_íåy
(

836 &
fûe£t
->
fs_‰ì_fûes
,

837 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

840 
FSE_TYPE_DIR
:

843 
FSE_TYPE_LEAFDIR
:

844 
	`fûe£t_move_íåy
(

845 &
fûe£t
->
fs_‰ì_Àaf_dús
,

846 &
fûe£t
->
fs_exi°_Àaf_dús
,

847 
íåy
);

851 } i‡(!(
íåy
->
f£_Êags
 & 
FSE_EXISTS
)) {

854 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

855 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

856 
FSE_TYPE_FILE
:

857 
	`fûe£t_move_íåy
(

858 &
fûe£t
->
fs_n€x_fûes
,

859 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

861 
FSE_TYPE_DIR
:

863 
FSE_TYPE_LEAFDIR
:

864 
	`fûe£t_move_íåy
(

865 &
fûe£t
->
fs_n€x_Àaf_dús
,

866 &
fûe£t
->
fs_exi°_Àaf_dús
,

867 
íåy
);

872 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

874 
íåy
->
f£_Êags
 &(~(
FSE_FREE
 | 
FSE_EXISTS
));

875 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

876 
FSE_TYPE_FILE
:

877 
	`fûe£t_move_íåy
(

878 &
fûe£t
->
fs_‰ì_fûes
,

879 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

882 
FSE_TYPE_DIR
:

885 
FSE_TYPE_LEAFDIR
:

886 
	`fûe£t_move_íåy
(

887 &
fûe£t
->
fs_‰ì_Àaf_dús
,

888 &
fûe£t
->
fs_n€x_Àaf_dús
,

889 
íåy
);

892 } i‡(
íåy
->
f£_Êags
 & 
FSE_EXISTS
) {

895 
íåy
->
f£_Êags
 &(~
FSE_EXISTS
);

896 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

897 
FSE_TYPE_FILE
:

898 
	`fûe£t_move_íåy
(

899 &
fûe£t
->
fs_exi°_fûes
,

900 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

902 
FSE_TYPE_DIR
:

904 
FSE_TYPE_LEAFDIR
:

905 
	`fûe£t_move_íåy
(

906 &
fûe£t
->
fs_exi°_Àaf_dús
,

907 &
fûe£t
->
fs_n€x_Àaf_dús
,

908 
íåy
);

916 
íåy
->
f£_›í_˙t
 +
›í_˙t_ö¸
;

919 i‡(
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

922 
íåy
->
f£_Êags
 &(~
FSE_BUSY
);

925 i‡(
íåy
->
f£_Êags
 & 
FSE_THRD_WAITNG
) {

926 
íåy
->
f£_Êags
 &(~
FSE_THRD_WAITNG
);

927 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(

928 &
fûe£t
->
fs_thrd_waô_cv
);

932 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

933 
FSE_TYPE_FILE
:

934 
fûe£t
->
fs_idÀ_fûes
++;

935 i‡(
fûe£t
->
fs_idÀ_fûes
 >= 1) {

936 (Ë
	`±hªad_c⁄d_sig«l
(

937 &
fûe£t
->
fs_idÀ_fûes_cv
);

941 
FSE_TYPE_DIR
:

942 
fûe£t
->
fs_idÀ_dús
++;

943 i‡(
fûe£t
->
fs_idÀ_dús
 >= 1) {

944 (Ë
	`±hªad_c⁄d_sig«l
(

945 &
fûe£t
->
fs_idÀ_dús_cv
);

949 
FSE_TYPE_LEAFDIR
:

950 
fûe£t
->
fs_idÀ_Àafdús
++;

951 i‡(
fûe£t
->
fs_idÀ_Àafdús
 >= 1) {

952 (Ë
	`±hªad_c⁄d_sig«l
(

953 &
fûe£t
->
fs_idÀ_Àafdús_cv
);

959 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

960 
	}
}

975 
	$fûe£t_¸óã
(
fûe£t_t
 *
fûe£t
)

977 
fûe£ã¡ry_t
 *
íåy
;

978 
∑th
[
MAXPATHLEN
];

979 
°©64
 
sb
;

980 
hπime_t
 
°¨t
 = 
	`gëhπime
();

981 *
fûe£t_∑th
;

982 *
fûe£t_«me
;

983 
øndno
;

984 
¥óŒoˇãd
 = 0;

985 
ªusög
;

986 
uöt64_t
 
¥óŒo˝î˚¡
;

988 
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
);

989 i‡(!
fûe£t_∑th
) {

990 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

991 
	`fûe£t_ítôy_«me
(
fûe£t
));

992  
FILEBENCH_ERROR
;

995 
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
);

996 i‡(!
fûe£t_«me
) {

997 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

998 
	`fûe£t_ítôy_«me
(
fûe£t
));

999  
FILEBENCH_ERROR
;

1003 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1004  
FILEBENCH_OK
;

1009 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1010 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1011 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1014 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
)) {

1015 
ªusög
 = 1;

1017 } i‡(((
	`°©64
(
∑th
, &
sb
Ë=0)&& (
	`°æí
(path) > 3) &&

1018 (
	`°æí
(
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)) > 2)) &&

1019 
	`avd_gë_boﬁ
(
fûe£t
->
fs_ªu£
)) {

1020 
ªusög
 = 1;

1022 
ªusög
 = 0;

1025 i‡(!
ªusög
) {

1027 
	`fûebích_log
(
LOG_INFO
,

1028 "Removög %†åì (i‡exi°s)", 
fûe£t_«me
);

1030 
	`FB_RECUR_RM
(
∑th
);

1033 
	`fûebích_log
(
LOG_INFO
, "ReusingÉxisting %sÅree",

1034 
fûe£t_«me
);

1038 i‡(!
ªusög
) {

1039 
	`fûebích_log
(
LOG_INFO
,

1040 "Pª-Æloˇtög dúe˘‹õ†ö %†åì", 
fûe£t_«me
);

1042 (Ë
	`FB_MKDIR
(
∑th
, 0755);

1044 i‡(
	`fûe£t_¸óã_subdús
(
fûe£t
, 
∑th
Ë=
FILEBENCH_ERROR
)

1045  (
FILEBENCH_ERROR
);

1048 
°¨t
 = 
	`gëhπime
();

1050 
	`fûebích_log
(
LOG_INFO
,

1051 "Pª-Æloˇtög fûe†ö %†åì", 
fûe£t_«me
);

1053 i‡(
	`AVD_IS_BOOL
(
fûe£t
->
fs_¥óŒo˝î˚¡
)) {

1054 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_¥óŒo˝î˚¡
))

1055 
¥óŒo˝î˚¡
 = 100;

1057 
¥óŒo˝î˚¡
 = 0;

1059 
¥óŒo˝î˚¡
 = 
	`avd_gë_öt
(
fûe£t
->
fs_¥óŒo˝î˚¡
);

1061 
øndno
 = ((
RAND_MAX
 * (100 - 
¥óŒo˝î˚¡
)) / 100);

1064 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKFILE
);

1065 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1066 
FILESET_PICKFREE
 | 
FILESET_PICKFILE
, 0, 0))) {

1067 
±hªad_t
 
tid
;

1068 
√wønd
;

1070 
√wønd
 = 
	`ønd
();

1072 i‡(
øndno
 && 
√wønd
 <=Ñandno) {

1074 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1078 
¥óŒoˇãd
++;

1080 i‡(
ªusög
)

1081 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1083 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1086 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_∑øŒoc
)) {

1089 (Ë
	`±hªad_muãx_lock
(

1090 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1091 
fûebích_shm
->
shm_f•¨Æloc_cou¡


1092 >
MAX_PARALLOC_THREADS
) {

1093 (Ë
	`±hªad_c⁄d_waô
(

1094 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1095 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1099 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0) {

1100 (Ë
	`±hªad_muãx_u∆ock
(

1101 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1102  (
FILEBENCH_ERROR
);

1105 
fûebích_shm
->
shm_f•¨Æloc_cou¡
++;

1106 (Ë
	`±hªad_muãx_u∆ock
(

1107 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1114 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

1115 (*(*)(*))
fûe£t_Æloc_thªad
,

1116 
íåy
) == 0) {

1121 (Ë
	`±hªad_dëach
(
tid
);

1123 
	`fûebích_log
(
LOG_ERROR
,

1125 
	`fûebích_shutdown
(1);

1129 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
)

1130  
FILEBENCH_ERROR
;

1135 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKLEAFDIR
);

1136 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1137 
FILESET_PICKFREE
 | 
FILESET_PICKLEAFDIR
, 0, 0))) {

1139 i‡(
	`ønd
(Ë< 
øndno
) {

1141 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1145 
¥óŒoˇãd
++;

1147 i‡(
ªusög
)

1148 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1150 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1152 i‡(
	`fûe£t_Æloc_Àafdú
(
íåy
Ë=
FILEBENCH_ERROR
)

1153  (
FILEBENCH_ERROR
);

1156 
	`fûebích_log
(
LOG_VERBOSE
,

1158 
¥óŒoˇãd
,

1159 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
,

1160 
fûe£t_«me
,

1161 (
u_l⁄gl⁄g_t
)(((
	`gëhπime
(Ë- 
°¨t
) / 1000000000) + 1));

1163  (
FILEBENCH_OK
);

1164 
	}
}

1171 
	$fûe£t_dñëe_°‹age
(
fûe£t_t
 *
fûe£t
)

1173 
∑th
[
MAXPATHLEN
];

1174 *
fûe£t_∑th
;

1175 *
fûe£t_«me
;

1177 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
)

1180 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
)

1184 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1188 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1189 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1190 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1193 
	`FB_RECUR_RM
(
∑th
);

1194 
	}
}

1200 
	$fûe£t_dñëe_fûe£t
(
fûe£t_t
 *
fûe£t
)

1202 
fûe£ã¡ry_t
 *
íåy
, *
√xt_íåy
;

1205 
íåy
 = 
fûe£t
->
fs_fûñi°
;É¡ry;É¡ry = 
√xt_íåy
) {

1208 
√xt_íåy
 = 
íåy
->
f£_√xt
;

1211 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

1212 
FSE_TYPE_FILE
:

1213 
FSE_TYPE_LEAFDIR
:

1214 
FSE_TYPE_DIR
:

1215 
	`ùc_‰ì
(
FILEBENCH_FILESETENTRY
, (*)
íåy
);

1218 
	`fûebích_log
(
LOG_ERROR
,

1224 
	`ùc_‰ì
(
FILEBENCH_FILESET
, (*)
fûe£t
);

1225 
	}
}

1228 
	$fûe£t_dñëe_Æl_fûe£ts
()

1230 
fûe£t_t
 *
fûe£t
, *
√xt_fûe£t
;

1232 
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1233 
fûe£t
; fûe£à
√xt_fûe£t
) {

1234 
√xt_fûe£t
 = 
fûe£t
->
fs_√xt
;

1235 
	`fûe£t_dñëe_°‹age
(
fûe£t
);

1236 
	`fûe£t_dñëe_fûe£t
(
fûe£t
);

1239 
fûebích_shm
->
shm_fûe£éi°
 = 
NULL
;

1240 
	}
}

1246 
	$fûe£t_ösfûñi°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1248 
íåy
->
f£_Êags
 = 
FSE_TYPE_FILE
 | 
FSE_FREE
;

1249 
	`avl_add
(&
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

1251 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
) {

1252 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1253 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1255 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_fûñi°
;

1256 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1258 
	}
}

1265 
	$fûe£t_ösdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1267 
íåy
->
f£_Êags
 = 
FSE_TYPE_DIR
 | 
FSE_EXISTS
;

1268 
	`avl_add
(&
fûe£t
->
fs_dús
, 
íåy
);

1270 i‡(
fûe£t
->
fs_dúli°
 =
NULL
) {

1271 
fûe£t
->
fs_dúli°
 = 
íåy
;

1272 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1274 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_dúli°
;

1275 
fûe£t
->
fs_dúli°
 = 
íåy
;

1277 
	}
}

1284 
	$fûe£t_ö¶ófdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1286 
íåy
->
f£_Êags
 = 
FSE_TYPE_LEAFDIR
 | 
FSE_FREE
;

1287 
	`avl_add
(&
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

1289 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
) {

1290 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1291 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1293 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_Àafdúli°
;

1294 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1296 
	}
}

1302 
	$fûe£t_íåy_com∑ª
(c⁄° *
node_1
, c⁄° *
node_2
)

1304 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 <

1305 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1308 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 ==

1309 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1313 
	}
}

1328 
	$fûe£t_p›uœã_fûe
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1330 
tm≤ame
[16];

1331 
fûe£ã¡ry_t
 *
íåy
;

1332 
uöt_t
 
ödex
;

1334 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1335 =
NULL
) {

1336 
	`fûebích_log
(
LOG_ERROR
,

1338  (
FILEBENCH_ERROR
);

1342 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1343 
ödex
 = 
fûe£t
->
fs_idÀ_fûes
++;

1344 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1346 
íåy
->
f£_ödex
 = 
ödex
;

1347 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1348 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1349 
	`fûe£t_ösfûñi°
(
fûe£t
, 
íåy
);

1351 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1352 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1353 
	`fûebích_log
(
LOG_ERROR
,

1355  (
FILEBENCH_ERROR
);

1358 
íåy
->
f£_size
 = (
off64_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
);

1359 
fûe£t
->
fs_byãs
 +
íåy
->
f£_size
;

1361 
fûe£t
->
fs_ªÆfûes
++;

1362  (
FILEBENCH_OK
);

1363 
	}
}

1376 
	$fûe£t_p›uœã_Àafdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1378 
tm≤ame
[16];

1379 
fûe£ã¡ry_t
 *
íåy
;

1380 
uöt_t
 
ödex
;

1382 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1383 =
NULL
) {

1384 
	`fûebích_log
(
LOG_ERROR
,

1386  (
FILEBENCH_ERROR
);

1390 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1391 
ödex
 = 
fûe£t
->
fs_idÀ_Àafdús
++;

1392 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1394 
íåy
->
f£_ödex
 = 
ödex
;

1395 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1396 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1397 
	`fûe£t_ö¶ófdúli°
(
fûe£t
, 
íåy
);

1399 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1400 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1401 
	`fûebích_log
(
LOG_ERROR
,

1403  (
FILEBENCH_ERROR
);

1406 
fûe£t
->
fs_ªÆÀafdús
++;

1407  (
FILEBENCH_OK
);

1408 
	}
}

1427 
	$fûe£t_p›uœã_subdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
,

1428 
£rül
, 
dïth
)

1430 
øndïth
, 
dønd
, 
ønwidth
;

1431 
i¶óf
 = 0;

1432 
tm≤ame
[16];

1433 
fûe£ã¡ry_t
 *
íåy
;

1434 
i
;

1435 
uöt_t
 
ödex
;

1437 
dïth
 += 1;

1440 
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
);

1441 i‡(!
íåy
) {

1442 
	`fûebích_log
(
LOG_ERROR
,

1444  (
FILEBENCH_ERROR
);

1448 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1449 
ödex
 = 
fûe£t
->
fs_idÀ_dús
++;

1450 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1452 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1453 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1454 
	`fûebích_log
(
LOG_ERROR
,

1456  (
FILEBENCH_ERROR
);

1459 
íåy
->
f£_ödex
 = 
ödex
;

1460 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1461 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1462 
	`fûe£t_ösdúli°
(
fûe£t
, 
íåy
);

1464 i‡(
fûe£t
->
fs_dúdïthrv
) {

1465 
øndïth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúdïthrv
);

1467 
gamma
;

1469 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1470 i‡(
gamma
 > 0) {

1471 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1472 
fûe£t
->
fs_móndïth
 / 
gamma
);

1473 
øndïth
 = ()
dønd
;

1475 
øndïth
 = ()
fûe£t
->
fs_móndïth
;

1479 i‡(
fûe£t
->
fs_mónwidth
 == -1) {

1480 
ønwidth
 = 
	`avd_gë_dbl
(
fûe£t
->
fs_dúwidth
);

1482 
gamma
;

1484 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1485 i‡(
gamma
 > 0) {

1486 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1487 
fûe£t
->
fs_mónwidth
 / 
gamma
);

1488 
ønwidth
 = 
dønd
;

1490 
ønwidth
 = 
fûe£t
->
fs_mónwidth
;

1494 i‡(
øndïth
 == 0)

1495 
øndïth
 = 1;

1496 i‡(
ønwidth
 == 0)

1497 
ønwidth
 = 1;

1498 i‡(
dïth
 >
øndïth
)

1499 
i¶óf
 = 1;

1505 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1506 (
fûe£t
->
fs_ªÆfûes
 < fûe£t->
fs_c⁄°íåõs
);

1507 
i
++) {

1508 
ªt
 = 0;

1510 i‡(
∑ª¡
 && 
i¶óf
)

1511 
ªt
 = 
	`fûe£t_p›uœã_fûe
(
fûe£t
, 
íåy
, 
i
);

1513 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1515 i‡(
ªt
 != 0)

1516  (
ªt
);

1524 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1525 (
fûe£t
->
fs_ªÆÀafdús
 < fûe£t->
fs_c⁄°Àafdús
);

1526 
i
++) {

1527 
ªt
 = 0;

1529 i‡(
∑ª¡
 && 
i¶óf
)

1530 
ªt
 = 
	`fûe£t_p›uœã_Àafdú
(
fûe£t
, 
íåy
, 
i
);

1532 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1534 i‡(
ªt
 != 0)

1535  (
ªt
);

1538  (
FILEBENCH_OK
);

1539 
	}
}

1552 
	$fûe£t_p›uœã
(
fûe£t_t
 *
fûe£t
)

1554 
fböt_t
 
íåõs
 = 
	`avd_gë_öt
(
fûe£t
->
fs_íåõs
);

1555 
fböt_t
 
Àafdús
 = 
	`avd_gë_öt
(
fûe£t
->
fs_Àafdús
);

1556 
móndúwidth
 = 0;

1557 
ªt
;

1560 i‡(
fûe£t
->
fs_byãs
 > 0)

1561 
exi°s
;

1564 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1565  (
FILEBENCH_OK
);

1571 
fûe£t
->
fs_c⁄°íåõs
 = 
íåõs
;

1572 
fûe£t
->
fs_c⁄°Àafdús
 = 
Àafdús
;

1575 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_fûes_cv
, 
	`ùc_c⁄d©å
());

1576 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_dús_cv
, 
	`ùc_c⁄d©å
());

1577 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
, 
	`ùc_c⁄d©å
());

1580 
fûe£t
->
fs_idÀ_fûes
 = 0;

1581 
fûe£t
->
fs_idÀ_dús
 = 0;

1582 
fûe£t
->
fs_idÀ_Àafdús
 = 0;

1585 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_pick_lock
,

1586 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1587 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_hi°o_lock
,

1588 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1589 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_thrd_waô_cv
, 
	`ùc_c⁄d©å
());

1592 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_fûes
), 
fûe£t_íåy_com∑ª
,

1593  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1594 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_fûes
), 
fûe£t_íåy_com∑ª
,

1595  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1596 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_fûes
), 
fûe£t_íåy_com∑ª
,

1597  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1598 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1599  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1600 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1601  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1602 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1603  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1604 
	`avl_¸óã
(&(
fûe£t
->
fs_dús
), 
fûe£t_íåy_com∑ª
,

1605  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1608 i‡(
	`AVD_IS_RANDOM
(
fûe£t
->
fs_dúwidth
)) {

1609 
móndúwidth
 =

1610 ()
fûe£t
->
fs_dúwidth
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
;

1611 
fûe£t
->
fs_mónwidth
 = -1;

1613 
móndúwidth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
);

1614 
fûe£t
->
fs_mónwidth
 = ()
móndúwidth
;

1625 
fûe£t
->
fs_móndïth
 = 
	`log
(
íåõs
+
Àafdús
Ë/Üog(
móndúwidth
);

1628 i‡(
fûe£t
->
fs_dúdïthrv
) {

1630 
fûe£t
->
fs_dúdïthrv
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
 =

1631 
fûe£t
->
fs_móndïth
;

1634 i‡((
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
NULL
, 1, 0)) != 0)

1635  (
ªt
);

1637 
exi°s
:

1638 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1639 
	`fûebích_log
(
LOG_VERBOSE
, "File %s: %.3lfMB",

1640 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

1641 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1643 
	`fûebích_log
(
LOG_INFO
, "%sÖopulated: %llu files, "

1646 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
íåõs
,

1647 
móndúwidth
, 
fûe£t
->
fs_móndïth
,

1648 
Àafdús
,

1649 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1652  
FILEBENCH_OK
;

1653 
	}
}

1665 
fûe£t_t
 *

1666 
	$fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
)

1668 
fûe£t_t
 *
fûe£t
;

1670 
fûe£t
 = (
fûe£t_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESET
);

1671 i‡(!
fûe£t
) {

1672 
	`fûebích_log
(
LOG_ERROR
, "can'tállocate fileset %s",

1673 
	`avd_gë_°r
(
«me
));

1674  
NULL
;

1677 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1678 "deföög fûe[£t] %s", 
	`avd_gë_°r
(
«me
));

1680 
fûe£t
->
fs_«me
 = 
«me
;

1681 
fûe£t
->
fs_∑th
 = 
∑th
;

1684 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1686 i‡(
fûebích_shm
->
shm_fûe£éi°
 =
NULL
) {

1687 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1688 
fûe£t
->
fs_√xt
 = 
NULL
;

1690 
fûe£t
->
fs_√xt
 = 
fûebích_shm
->
shm_fûe£éi°
;

1691 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1694 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1696  
fûe£t
;

1697 
	}
}

1706 
	$fûe£t_checkøw
(
fûe£t_t
 *
fûe£t
)

1708 
∑th
[
MAXPATHLEN
];

1709 
°©64
 
sb
;

1710 *
∑th«me
;

1711 *
£äame
;

1713 
fûe£t
->
fs_©ås
 &(~
FILESET_IS_RAW_DEV
);

1715 i‡((
∑th«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1716 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1717 
	`fûe£t_ítôy_«me
(
fûe£t
));

1718 
	`fûebích_shutdown
(1);

1721 i‡((
£äame
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1722 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1723 
	`fûe£t_ítôy_«me
(
fûe£t
));

1724 
	`fûebích_shutdown
(1);

1727 (Ë
	`fb_°æ˝y
(
∑th
, 
∑th«me
, 
MAXPATHLEN
);

1728 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1729 (Ë
	`fb_°æˇt
(
∑th
, 
£äame
, 
MAXPATHLEN
);

1730 i‡((
	`°©64
(
∑th
, &
sb
) == 0) &&

1731 ((
sb
.
°_mode
 & 
S_IFMT
Ë=
S_IFBLK
)) {

1732 
fûe£t
->
fs_©ås
 |
FILESET_IS_RAW_DEV
;

1733 i‡(!(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)) {

1734 
	`fûebích_log
(
LOG_ERROR
,

1736 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

1737 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

1738 
	`fûebích_shutdown
(1);

1744 
	}
}

1752 
	$fûe£t_¸óã£ts
()

1754 
fûe£t_t
 *
li°
;

1755 
ªt
 = 0;

1757 i‡(
fûe¸óã_d⁄e
) {

1760 
	`fûebích_log
(
LOG_INFO
,

1765 
fûe¸óã_d⁄e
 = 1;

1768 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = 0;

1769 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_f•¨Æloc_cv
,

1770 
	`ùc_c⁄d©å
());

1772 
	`fûebích_log
(
LOG_INFO
, "PopulatingándÖre-allocating filesets");

1774 
li°
 = 
fûebích_shm
->
shm_fûe£éi°
;

1775 
li°
) {

1777 i‡((
	`avd_gë_öt
(
li°
->
fs_íåõs
) == 0) &&

1778 (
	`avd_gë_öt
(
li°
->
fs_Àafdús
) == 0)) {

1779 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo files orÜeafdirs");

1782 i‡(
li°
->
fs_dúdïthrv
 && !
	`AVD_IS_RANDOM
(list->fs_dirdepthrv)) {

1783 
	`fûebích_log
(
LOG_ERROR
,

1785 
	`fûebích_shutdown
(1);

1788 i‡(
	`AVD_IS_RANDOM
(
li°
->
fs_dúgamma
)) {

1789 
	`fûebích_log
(
LOG_ERROR
,

1791 
	`fûebích_shutdown
(1);

1795 i‡(
	`fûe£t_checkøw
(
li°
)) {

1796 
	`fûebích_log
(
LOG_INFO
,

1798 
	`avd_gë_°r
(
li°
->
fs_∑th
),

1799 
	`avd_gë_°r
(
li°
->
fs_«me
));

1800 
li°
 =Üi°->
fs_√xt
;

1804 
ªt
 = 
	`fûe£t_p›uœã
(
li°
);

1805 i‡(
ªt
)

1806  
ªt
;

1808 
ªt
 = 
	`fûe£t_¸óã
(
li°
);

1809 i‡(
ªt
)

1810  
ªt
;

1812 
li°
 =Üi°->
fs_√xt
;

1816 
	`fûebích_log
(
LOG_INFO
, "Waiting forÖre-allocationÅo finish "

1819 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1820 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 > 0)

1821 (Ë
	`±hªad_c⁄d_waô
(

1822 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1823 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1824 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1826 
	`fûebích_log
(
LOG_INFO
,

1829 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0)

1830  (
FILEBENCH_ERROR
);

1833 
	}
}

1839 
fûe£t_t
 *

1840 
	$fûe£t_föd
(*
«me
)

1842 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1844 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1846 
fûe£t
) {

1847 i‡(
	`°rcmp
(
«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)) == 0) {

1848 (Ë
	`ùc_muãx_u∆ock
(

1849 &
fûebích_shm
->
shm_fûe£t_lock
);

1850  (
fûe£t
);

1852 
fûe£t
 = fûe£t->
fs_√xt
;

1854 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1856  (
NULL
);

1857 
	}
}

1867 
	$fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
))

1869 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1870 
cou¡
 = 0;

1872 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1874 
fûe£t
) {

1875 i‡(
	`cmd
(
fûe£t
, 
cou¡
 =0Ë=
FILEBENCH_ERROR
) {

1876 (Ë
	`ùc_muãx_u∆ock
(

1877 &
fûebích_shm
->
shm_fûe£t_lock
);

1878  (
FILEBENCH_ERROR
);

1880 
fûe£t
 = fûe£t->
fs_√xt
;

1881 
cou¡
++;

1884 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1885  (
FILEBENCH_OK
);

1886 
	}
}

1893 
	$fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
)

1895 
∑thÀngth
;

1896 *
fûe£t_∑th
;

1897 *
fûe£t_«me
;

1898 
∑d
[] = " ";

1900 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1901 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1902 
	`fûe£t_ítôy_«me
(
fûe£t
));

1903  (
FILEBENCH_ERROR
);

1906 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1907 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1908 
	`fûe£t_ítôy_«me
(
fûe£t
));

1909  (
FILEBENCH_ERROR
);

1912 
∑thÀngth
 = 
	`°æí
(
fûe£t_∑th
Ë+ såÀn(
fûe£t_«me
);

1914 i‡(
∑thÀngth
 > 29)

1915 
∑thÀngth
 = 29;

1917 i‡(
fú°
) {

1918 
	`fûebích_log
(
LOG_INFO
, "File or FilesetÇame%20s%12s%10s",

1924 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1925 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1926 
	`fûebích_log
(
LOG_INFO
,

1928 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
]);

1930 
	`fûebích_log
(
LOG_INFO
,

1932 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
],

1933 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
));

1936 
	`fûebích_log
(
LOG_INFO
, "%s/%s%s%9llu%12llu%10llu",

1937 
fûe£t_∑th
, 
fûe£t_«me
,

1938 &
∑d
[
∑thÀngth
],

1939 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
),

1940 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
),

1941 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
);

1943  (
FILEBENCH_OK
);

1944 
	}
}

	@fileset.h

26 #i‚de‡
_FB_FILESET_H


27 
	#_FB_FILESET_H


	)

29 
	~"fûebích.h
"

31 
	#FILE_ALLOC_BLOCK
 (
off64_t
)(1024 * 1024)

	)

33 
	#FSE_MAXTID
 16384

	)

35 
	#FSE_MAXPATHLEN
 16

	)

36 
	#FSE_TYPE_FILE
 0x00

	)

37 
	#FSE_TYPE_DIR
 0x01

	)

38 
	#FSE_TYPE_LEAFDIR
 0x02

	)

39 
	#FSE_TYPE_MASK
 0x03

	)

40 
	#FSE_FREE
 0x04

	)

41 
	#FSE_EXISTS
 0x08

	)

42 
	#FSE_BUSY
 0x10

	)

43 
	#FSE_REUSING
 0x20

	)

44 
	#FSE_THRD_WAITNG
 0x40

	)

46 
	sfûe£ã¡ry
 {

47 
fûe£ã¡ry
 *
	mf£_√xt
;

48 
fûe£ã¡ry
 *
	mf£_∑ª¡
;

49 
avl_node_t
 
	mf£_lök
;

51 
uöt_t
 
	mf£_ödex
;

52 
fûe£ã¡ry
 *
	mf£_√xto·y≥
;

53 
fûe£t
 *
	mf£_fûe£t
;

54 *
	mf£_∑th
;

55 
	mf£_dïth
;

56 
off64_t
 
	mf£_size
;

57 
	mf£_›í_˙t
;

58 
	mf£_Êags
;

59 } 
	tfûe£ã¡ry_t
;

61 
	#FSE_OFFSETOF
(
f
Ë((
size_t
)(&(((
fûe£ã¡ry_t
 *)0)->f)))

	)

64 
	#FILESET_PICKFILE
 0x00

	)

65 
	#FILESET_PICKDIR
 0x01

	)

66 
	#FILESET_PICKLEAFDIR
 0x02

	)

67 
	#FILESET_PICKMASK
 0x03

	)

69 
	#FILESET_PICKUNIQUE
 0x04

	)

71 
	#FILESET_PICKEXISTS
 0x10

	)

72 
	#FILESET_PICKNOEXIST
 0x20

	)

73 
	#FILESET_PICKBYINDEX
 0x40

	)

74 
	#FILESET_PICKFREE
 
FILESET_PICKUNIQUE


	)

77 
	#FILESET_IS_RAW_DEV
 0x01

	)

78 
	#FILESET_IS_FILE
 0x02

	)

80 
	sfûe£t
 {

81 
fûe£t
 *
	mfs_√xt
;

82 
avd_t
 
	mfs_«me
;

83 
avd_t
 
	mfs_∑th
;

84 
avd_t
 
	mfs_íåõs
;

86 
fböt_t
 
	mfs_c⁄°íåõs
;

87 
avd_t
 
	mfs_Àafdús
;

89 
fböt_t
 
	mfs_c⁄°Àafdús
;

91 
avd_t
 
	mfs_¥óŒo˝î˚¡
;

92 
	mfs_©ås
;

93 
avd_t
 
	mfs_dúwidth
;

94 
avd_t
 
	mfs_dúdïthrv
;

95 
avd_t
 
	mfs_size
;

96 
avd_t
 
	mfs_dúgamma
;

99 
avd_t
 
	mfs_¸óã
;

100 
avd_t
 
	mfs_∑øŒoc
;

101 
avd_t
 
	mfs_ªu£
;

102 
avd_t
 
	mfs_ªad⁄ly
;

103 
avd_t
 
	mfs_wrôe⁄ly
;

104 
avd_t
 
	mfs_åu°_åì
;

105 
	mfs_móndïth
;

106 
	mfs_mónwidth
;

107 
	mfs_ªÆfûes
;

108 
	mfs_ªÆÀafdús
;

109 
off64_t
 
	mfs_byãs
;

111 
öt64_t
 
	mfs_idÀ_fûes
;

112 
±hªad_c⁄d_t
 
	mfs_idÀ_fûes_cv
;

114 
öt64_t
 
	mfs_idÀ_dús
;

115 
±hªad_c⁄d_t
 
	mfs_idÀ_dús_cv
;

117 
öt64_t
 
	mfs_idÀ_Àafdús
;

118 
±hªad_c⁄d_t
 
	mfs_idÀ_Àafdús_cv
;

120 
±hªad_muãx_t
 
	mfs_pick_lock
;

121 
±hªad_c⁄d_t
 
	mfs_thrd_waô_cv
;

122 
avl_åì_t
 
	mfs_‰ì_fûes
;

123 
avl_åì_t
 
	mfs_exi°_fûes
;

124 
avl_åì_t
 
	mfs_n€x_fûes
;

125 
avl_åì_t
 
	mfs_dús
;

126 
avl_åì_t
 
	mfs_‰ì_Àaf_dús
;

127 
avl_åì_t
 
	mfs_exi°_Àaf_dús
;

128 
avl_åì_t
 
	mfs_n€x_Àaf_dús
;

130 
fûe£ã¡ry_t
 *
	mfs_fûñi°
;

131 
uöt_t
 
	mfs_fûe_exrŸ‹
[
FSE_MAXTID
];

133 
uöt_t
 
	mfs_fûe_√rŸ‹
;

135 
fûe£ã¡ry_t
 *
	mfs_dúli°
;

136 
uöt_t
 
	mfs_dúrŸ‹
;

137 
fûe£ã¡ry_t
 *
	mfs_Àafdúli°
;

138 
uöt_t
 
	mfs_Àafdú_exrŸ‹
;

140 
uöt_t
 
	mfs_Àafdú_√rŸ‹
;

141 *
	mfs_fûehi°›
;

142 
±hªad_muãx_t
 
	mfs_hi°o_lock
;

143 } 
	tfûe£t_t
;

145 
fûe£t_¸óã£ts
();

147 
fûe£t_dñëe_Æl_fûe£ts
();

148 
fûe£t_›ífûe
(
fb_fdesc_t
 *
fd
, 
fûe£t_t
 *
fûe£t
,

149 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
mode
, 
©ås
);

150 
fûe£t_t
 *
fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
);

151 
fûe£t_t
 *
fûe£t_föd
(*
«me
);

152 
fûe£ã¡ry_t
 *
fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
,

153 
ödex
);

154 *
fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
);

155 
fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
));

156 
	`fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
);

157 
	`fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

158 
√w_exi°_vÆ
, 
›í_˙t_ö¸
);

159 
	`fûe£t_dump_hi°o
(
fûe£t_t
 *
fûe£t
, 
fú°
);

160 
	`fûe£t_©èch_Æl_hi°os
();

	@flag.h

1 #i‚de‡
_FB_FLAG_H


2 
	#_FB_FLAG_H


	)

4 vﬁ©ûê
	tÊag_t
;

6 
ölöe
 
	$˛ór_Êag
(
Êag_t
 *
Êag
)

8 *
Êag
 = 0;

9 
	}
}

11 
ölöe
 
	$£t_Êag
(
Êag_t
 *
Êag
)

13 *
Êag
 = 1;

14 
	}
}

16 
ölöe
 
	$quîy_Êag
(
Êag_t
 *
Êag
)

18  (*
Êag
) != 0;

19 
	}
}

21 
ölöe
 
	$waô_Êag
(
Êag_t
 *
Êag
)

23 !
	`quîy_Êag
(
Êag
))

25 
	}
}

	@flowop.c

26 
	~"c⁄fig.h
"

28 #ifde‡
HAVE_LWPS


29 
	~<sys/lwp.h
>

31 
	~<f˙é.h
>

32 
	~"fûebích.h
"

33 
	~"Êow›.h
"

34 
	~"°©s.h
"

35 
	~"i›rio.h
"

37 
Êow›_t
 *
Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
,

38 
Êow›_t
 *
öhîô
, flow›_à**
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

39 
Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

40 
Êow›_composôe_öô
(
Êow›_t
 *
Êow›
);

41 
Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
);

104 
	$Êow›_¥öéi°
(
Êow›_t
 *
li°
)

106 
Êow›_t
 *
Êow›
 = 
li°
;

108 
Êow›
) {

109 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flowop-list %s-%d",

110 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

111 
Êow›
 = flow›->
fo_exec_√xt
;

114 
	}
}

121 
	$Êow›_¥öèŒ
()

123 
Êow›_t
 *
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 
	`fûebích_log
(
LOG_INFO
, "flowop-list %s-%d",

127 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

128 
Êow›
 = flow›->
fo_√xt
;

130 
	}
}

132 
	#TIMESPEC_TO_HRTIME
(
s
, 
e
Ë((”.
tv_£c
 - s.tv_sec) * 1000000000LL) + \

133 (
e
.
tv_n£c
 - 
s
.tv_n£c))

	)

138 
	$Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

141 
thªadÊow
->
tf_°ime
 = 
	`gëhπime
();

142 
	}
}

144 
Êow°©s
 
	gc⁄åﬁ°©s
;

145 
±hªad_muãx_t
 
	gc⁄åﬁ°©s_lock
;

146 
	gc⁄åﬁ°©s_zî€d
 = 0;

149 
	$Êow›_p›uœã_di°ributi⁄
(
Êow›_t
 *
Êow›
, 
Œ_dñay
)

151 
i
;

152 
iii
;

154 
iii
 = 1;

155 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

156 i‡(
Œ_dñay
 < 
iii
)

158 
iii
 <<= 1;

160 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]++;

161 
	}
}

171 
	$Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
)

173 
Œ_dñay
;

175 
Œ_dñay
 = (
	`gëhπime
(Ë- 
thªadÊow
->
tf_°ime
);

178 i‡(!
Êow›
->
fo_°©s
.
fs_möœt
 || 
Œ_dñay
 < flowop->fo_stats.fs_minlat)

179 
Êow›
->
fo_°©s
.
fs_möœt
 = 
Œ_dñay
;

181 i‡(
Œ_dñay
 > 
Êow›
->
fo_°©s
.
fs_maxœt
)

182 
Êow›
->
fo_°©s
.
fs_maxœt
 = 
Œ_dñay
;

184 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 +
Œ_dñay
;

185 
Êow›
->
fo_°©s
.
fs_cou¡
++;

186 
Êow›
->
fo_°©s
.
fs_byãs
 +
byãs
;

187 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

188 i‡((
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_IO
) ||

189 (
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_AIO
)) {

190 
c⁄åﬁ°©s
.
fs_cou¡
++;

191 
c⁄åﬁ°©s
.
fs_byãs
 +
byãs
;

193 i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_READ
) {

194 
thªadÊow
->
tf_°©s
.
fs_rbyãs
 +
byãs
;

195 
thªadÊow
->
tf_°©s
.
fs_rcou¡
++;

196 
Êow›
->
fo_°©s
.
fs_rcou¡
++;

197 
c⁄åﬁ°©s
.
fs_rbyãs
 +
byãs
;

198 
c⁄åﬁ°©s
.
fs_rcou¡
++;

199 } i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_WRITE
) {

200 
thªadÊow
->
tf_°©s
.
fs_wbyãs
 +
byãs
;

201 
thªadÊow
->
tf_°©s
.
fs_wcou¡
++;

202 
Êow›
->
fo_°©s
.
fs_wcou¡
++;

203 
c⁄åﬁ°©s
.
fs_wbyãs
 +
byãs
;

204 
c⁄åﬁ°©s
.
fs_wcou¡
++;

207 i‡(
fûebích_shm
->
œthi°_íabÀd
)

208 
	`Êow›_p›uœã_di°ributi⁄
(
Êow›
, 
Œ_dñay
);

210 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

211 
	}
}

218 
	$Êow›_öôÊow
(
Êow›_t
 *
Êow›
)

224 i‡(
Êow›
->
fo_vÆue
)

225 
Êow›
->
fo_c⁄°vÆue
 = 
	`avd_gë_öt
(Êow›->
fo_vÆue
);

227 i‡(
Êow›
->
fo_wss
)

228 
Êow›
->
fo_c⁄°wss
 = 
	`avd_gë_öt
(Êow›->
fo_wss
);

230 i‡((*
Êow›
->
fo_öô
)(flowop) < 0) {

231 
	`fûebích_log
(
LOG_ERROR
, "flowop %s-%d init failed",

232 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

236 
	}
}

239 
	$Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 **
›s_li°_±r
)

241 
Êow›_t
 *
Êow›
 = *
›s_li°_±r
;

242 *
«me
;

244 
Êow›
) {

245 
Êow›_t
 *
√wÊow›
;

247 i‡(
Êow›
 =*
›s_li°_±r
)

248 *
›s_li°_±r
 = 
NULL
;

250 
√wÊow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
Êow›
->
fo_«me
,

251 
Êow›
, 
›s_li°_±r
, 1, 0);

252 i‡(
√wÊow›
 =
NULL
)

253  (
FILEBENCH_ERROR
);

256 i‡(
Êow›
->
fo_fûíame
) {

257 
«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

258 
√wÊow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

260 i‡(
√wÊow›
->
fo_fûe£t
 =
NULL
) {

261 
	`fûebích_log
(
LOG_ERROR
,

263 
√wÊow›
->
fo_«me
, 
«me
);

264 
	`fûebích_shutdown
(1);

268 i‡(
	`Êow›_öôÊow
(
√wÊow›
) < 0) {

269 
	`fûebích_log
(
LOG_ERROR
, "Flowop init of %s failed",

270 
√wÊow›
->
fo_«me
);

273 
Êow›
 = flow›->
fo_exec_√xt
;

276  (
FILEBENCH_OK
);

277 
	}
}

284 
	$Êow›_de°ru˘Êow
(
Êow›_t
 *
Êow›
)

286 (*
Êow›
->
fo_de°ru˘
)(flowop);

287 
	}
}

294 
	$Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
)

296 
Êow›_t
 *
Êow›
;

299 (Ë
	`¶ìp
(1);

301 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

304 i‡(
thªadÊow
->
tf_ru¬ög
 == 0) {

307 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

311 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

312 
thªadÊow
->
tf_ru¬ög
 = 0;

313 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

315 
Êow›
) {

316 
	`Êow›_de°ru˘Êow
(
Êow›
);

317 
Êow›
 = flow›->
fo_exec_√xt
;

319 
	}
}

334 
	$Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
)

336 
Êow›_t
 *
Êow›
;

337 
size_t
 
memsize
;

338 
ªt
 = 
FILEBENCH_OK
;

340 
	`£t_thªad_i›rio
(
thªadÊow
);

342 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

343 i‡(!
c⁄åﬁ°©s_zî€d
) {

344 (Ë
	`mem£t
(&
c⁄åﬁ°©s
, 0,  (controlstats));

345 
c⁄åﬁ°©s_zî€d
 = 1;

347 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

349 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

352 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

355 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

356 i‡(
	`Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow
, &thªadÊow->
tf_thrd_f›s
)

357 !
FILEBENCH_OK
) {

358 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

359 
	`fûebích_shutdown
(1);

362 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

365 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

368 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

370 #ifde‡
HAVE_LWPS


371 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %zx (%d) started",

372 
thªadÊow
,

373 
	`_lwp_£lf
());

383 
thªadÊow
->
tf_ab‹t
 = 0;

384 
thªadÊow
->
tf_ru¬ög
 = 1;

396 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_run_lock
);

397 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

399 
memsize
 = (
size_t
)
thªadÊow
->
tf_c⁄°memsize
;

405 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
) {

406 
thªadÊow
->
tf_mem
 =

407 
	`ùc_ismmÆloc
(
memsize
);

409 
thªadÊow
->
tf_mem
 =

410 
	`mÆloc
(
memsize
);

413 (Ë
	`mem£t
(
thªadÊow
->
tf_mem
, 0, 
memsize
);

414 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "ThªadáŒoˇãd %d byãs", 
memsize
);

417 
ªt
 =
FILEBENCH_OK
) {

418 
i
, 
cou¡
;

421 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

425 i‡(
fûebích_shm
->
shm_bequõt
) {

426 (Ë
	`¶ìp
(1);

431 i‡(!
fûebích_shm
->
shm_¥ocs_ru¬ög
) {

432 (Ë
	`¶ìp
(1);

436 i‡(
Êow›
 =
NULL
) {

437 
	`fûebích_log
(
LOG_ERROR
, "flowop_readÇull flowop");

442 
cou¡
 = ()
	`avd_gë_öt
(
Êow›
->
fo_ôîs
);

443 
i
 = 0; i < 
cou¡
; i++) {

445 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

446 "%s-%d", 
thªadÊow
->
tf_«me
, 
Êow›
->
fo_«me
,

447 
Êow›
->
fo_ö°™˚
);

449 
ªt
 = (*
Êow›
->
fo_func
)(
thªadÊow
, flowop);

455 i‡(
ªt
 =
FILEBENCH_ERROR
) {

456 
	`fûebích_log
(
LOG_ERROR
,

458 
thªadÊow
->
tf_«me
,

459 
thªadÊow
->
tf_ö°™˚
,

460 
Êow›
->
fo_«me
,

461 
Êow›
->
fo_ö°™˚
);

462 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

463 
thªadÊow
->
tf_ab‹t
 = 1;

464 
fûebích_shm
->
shm_f_ab‹t
 =

465 
FILEBENCH_ABORT_ERROR
;

466 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

475 i‡(
ªt
 =
FILEBENCH_NORSC
) {

476 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

477 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

478 i‡(
fûebích_shm
->
shm_rmode
 ==

479 
FILEBENCH_MODE_Q1STDONE
) {

480 
fûebích_shm
->
shm_f_ab‹t
 =

481 
FILEBENCH_ABORT_RSRC
;

482 } i‡(
fûebích_shm
->
shm_rmode
 !=

483 
FILEBENCH_MODE_QALLDONE
) {

484 
	`fûebích_log
(
LOG_ERROR1
,

491 
Êow›
->
fo_«me
,

492 
Êow›
->
fo_ö°™˚
);

493 
fûebích_shm
->
shm_f_ab‹t
 =

494 
FILEBENCH_ABORT_ERROR
;

496 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

504 i‡(
ªt
 =
FILEBENCH_DONE
) {

505 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

506 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

507 
fûebích_shm
->
shm_f_ab‹t
 =

508 
FILEBENCH_ABORT_DONE
;

509 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

519 i‡(
ªt
 !
FILEBENCH_OK
) {

520 
	`fûebích_log
(
LOG_ERROR
,

522 
Êow›
->
fo_«me
, 
ªt
);

523 
fûebích_shm
->
shm_f_ab‹t
 =

524 
FILEBENCH_ABORT_ERROR
;

530 
Êow›
 = flow›->
fo_exec_√xt
;

533 i‡(
Êow›
 =
NULL
) {

534 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

535 
thªadÊow
->
tf_°©s
.
fs_cou¡
++;

539 #ifde‡
HAVE_LWPS


540 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %dÉxiting",

541 
	`_lwp_£lf
());

545 
	`Êow›_de°ru˘_Æl_Êows
(
thªadÊow
);

547 
	`±hªad_exô
(&
thªadÊow
->
tf_ab‹t
);

548 
	}
}

556 
	$Êow›_öô
(
isma°î
)

558 i‡(
isma°î
) {

559 (Ë
	`±hªad_muãx_öô
(&
c⁄åﬁ°©s_lock
,

560 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

561 
	`Êow›lib_Êowöô
();

564 
fûebích_shm
->
shm_fûesys_ty≥
) {

565 
LOCAL_FS_PLUG
:

566 i‡(
isma°î
)

567 
	`fb_lfs_√wÊow›s
();

568 
	`fb_lfs_funcvecöô
();

570 
NFS3_PLUG
:

571 
NFS4_PLUG
:

572 
CIFS_PLUG
:

575 
	}
}

581 
	$Êow›_dñëe
(
Êow›_t
 **
Êow›li°
, flow›_à*
Êow›
)

583 
Êow›_t
 *
íåy
 = *
Êow›li°
;

584 
found
 = 0;

586 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

587 
Êow›
->
fo_«me
,

588 
Êow›
->
fo_ö°™˚
);

591 i‡(
Êow›
 =*
Êow›li°
) {

593 *
Êow›li°
 = 
Êow›
->
fo_exec_√xt
;

594 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

596 
Êow›
->
fo_«me
,

597 
Êow›
->
fo_ö°™˚
);

599 
íåy
->
fo_exec_√xt
) {

600 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

602 
íåy
->
fo_exec_√xt
->
fo_«me
,

603 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
,

604 
Êow›
->
fo_«me
,

605 
Êow›
->
fo_ö°™˚
);

607 i‡(
Êow›
 =
íåy
->
fo_exec_√xt
) {

609 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

611 
íåy
->
fo_exec_√xt
->
fo_«me
,

612 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
);

613 
íåy
->
fo_exec_√xt
 =

614 
íåy
->
fo_exec_√xt
->fo_exec_next;

617 
íåy
 =É¡ry->
fo_exec_√xt
;

622 
íåy
 = 
fûebích_shm
->
shm_Êow›li°
;

624 i‡(
Êow›
 =
fûebích_shm
->
shm_Êow›li°
) {

626 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
->
fo_√xt
;

627 
found
 = 1;

629 
íåy
->
fo_√xt
) {

630 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

632 
íåy
->
fo_√xt
->
fo_«me
,

633 
íåy
->
fo_√xt
->
fo_ö°™˚
,

634 
Êow›
->
fo_«me
,

635 
Êow›
->
fo_ö°™˚
);

637 i‡(
Êow›
 =
íåy
->
fo_√xt
) {

639 
íåy
->
fo_√xt
 =Éntry->fo_next->fo_next;

640 
found
 = 1;

644 
íåy
 =É¡ry->
fo_√xt
;

647 i‡(
found
) {

648 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

650 
Êow›
->
fo_«me
,

651 
Êow›
->
fo_ö°™˚
);

652 
	`ùc_‰ì
(
FILEBENCH_FLOWOP
, (*)
Êow›
);

654 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Flowop %s-%dÇot found!",

655 
Êow›
->
fo_«me
,

656 
Êow›
->
fo_ö°™˚
);

658 
	}
}

664 
	$Êow›_dñëe_Æl
(
Êow›_t
 **
Êow›li°
)

666 
Êow›_t
 *
Êow›
 = *
Êow›li°
;

667 
Êow›_t
 *
√xt_Êow›
;

669 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

671 
Êow›
) {

672 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

673 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

675 i‡(
Êow›
->
fo_ö°™˚
 &&

676 (
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

677 
Êow›
 = flow›->
fo_exec_√xt
;

680 
√xt_Êow›
 = 
Êow›
->
fo_exec_√xt
;

681 
	`Êow›_dñëe
(
Êow›li°
, 
Êow›
);

682 
Êow›
 = 
√xt_Êow›
;

685 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

686 
	}
}

703 
Êow›_t
 *

704 
	$Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

705 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

707 
Êow›_t
 *
Êow›
;

709 i‡(
«me
 =
NULL
)

710  (
NULL
);

712 i‡((
Êow›
 = (
Êow›_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FLOWOP
)Ë=
NULL
) {

713 
	`fûebích_log
(
LOG_ERROR
,

715  (
NULL
);

718 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "defining flowops %s-%d,áddr %zx",

719 
«me
, 
ö°™˚
, 
Êow›
);

721 i‡(
Êow›
 =
NULL
)

722  (
NULL
);

724 i‡(
öhîô
) {

725 (Ë
	`mem˝y
(
Êow›
, 
öhîô
,  (
Êow›_t
));

726 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

727 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

728 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

729 
Êow›
->
fo_√xt
 = 
NULL
;

730 
Êow›
->
fo_exec_√xt
 = 
NULL
;

731 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

732 "Êow› %s-%d cÆlög inô", 
«me
, 
ö°™˚
);

734 (Ë
	`mem£t
(
Êow›
, 0,  (
Êow›_t
));

735 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

736 
Êow›
->
fo_ty≥
 = 
ty≥
;

737 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

738 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

739 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

743 
Êow›
->
fo_thªad
 = 
thªadÊow
;

746 i‡(
fûebích_shm
->
shm_Êow›li°
 =
NULL
) {

747 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

748 
Êow›
->
fo_√xt
 = 
NULL
;

750 
Êow›
->
fo_√xt
 = 
fûebích_shm
->
shm_Êow›li°
;

751 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

754 (Ë
	`°r˝y
(
Êow›
->
fo_«me
, 
«me
);

755 
Êow›
->
fo_ö°™˚
 = 
ö°™˚
;

757 i‡(
Êow›li°_hdp
 =
NULL
)

758  (
Êow›
);

761 i‡(*
Êow›li°_hdp
 =
NULL
) {

762 *
Êow›li°_hdp
 = 
Êow›
;

763 
Êow›
->
fo_exec_√xt
 = 
NULL
;

765 
Êow›_t
 *
Êowíd
;

768 
Êowíd
 = *
Êow›li°_hdp
;

769 
Êowíd
->
fo_exec_√xt
 !
NULL
)

770 
Êowíd
 = flowíd->
fo_exec_√xt
;

771 
Êowíd
->
fo_exec_√xt
 = 
Êow›
;

772 
Êow›
->
fo_exec_√xt
 = 
NULL
;

775  (
Êow›
);

776 
	}
}

783 
Êow›_t
 *

784 
	$Êow›_deföe
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

785 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

787 
Êow›_t
 *
Êow›
;

789 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

790 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
«me
,

791 
öhîô
, 
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

792 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

794 i‡(
Êow›
 =
NULL
)

795  (
NULL
);

797 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

799  (
Êow›
);

800 
	}
}

807 
Êow›_t
 *

808 
	$Êow›_√w_composôe_deföe
(*
«me
)

810 
Êow›_t
 *
Êow›
;

812 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

813 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
NULL
, 
«me
,

814 
NULL
, NULL, 0, 
FLOW_TYPE_COMPOSITE
);

815 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

817 i‡(
Êow›
 =
NULL
)

818  (
NULL
);

820 
Êow›
->
fo_func
 = 
Êow›_composôe
;

821 
Êow›
->
fo_öô
 = 
Êow›_composôe_öô
;

822 
Êow›
->
fo_de°ru˘
 = 
Êow›_composôe_de°ru˘
;

823 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

825  (
Êow›
);

826 
	}
}

838 
	$Êow›_föd_b¨rõr
()

841 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

842 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

843 
	}
}

849 
Êow›_t
 *

850 
	$Êow›_föd
(*
«me
)

852 
Êow›_t
 *
Êow›
;

853 
Êow›_t
 *
ªsu…
 = 
NULL
;

855 
	`Êow›_föd_b¨rõr
();

857 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

859 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

861 
Êow›
) {

862 i‡(
	`°rcmp
(
«me
, 
Êow›
->
fo_«me
) == 0) {

865 i‡(
ªsu…
 =
NULL
) {

866 
ªsu…
 = 
Êow›
;

867 
Êow›
->
fo_ªsu…√xt
 = 
NULL
;

869 
Êow›
->
fo_ªsu…√xt
 = 
ªsu…
;

870 
ªsu…
 = 
Êow›
;

873 
Êow›
 = flow›->
fo_√xt
;

876 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

878  
ªsu…
;

879 
	}
}

885 
Êow›_t
 *

886 
	$Êow›_föd_⁄e
(*
«me
, 
ö°™˚
)

888 
Êow›_t
 *
ã°_Êow›
;

890 
	`Êow›_föd_b¨rõr
();

892 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

894 
ã°_Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

896 
ã°_Êow›
) {

897 i‡((
	`°rcmp
(
«me
, 
ã°_Êow›
->
fo_«me
) == 0) &&

898 (
ö°™˚
 =
ã°_Êow›
->
fo_ö°™˚
))

901 
ã°_Êow›
 =Åe°_Êow›->
fo_√xt
;

904 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

906  (
ã°_Êow›
);

907 
	}
}

915 
Êow›_t
 *

916 
	$Êow›_ªcur£_£¨ch
(*
∑th
, *
«me
, 
Êow›_t
 *
li°
)

918 
Êow›_t
 *
ã°_Êow›
;

919 
fuŒ«me
[
MAXPATHLEN
];

921 
ã°_Êow›
 = 
li°
;

928 i‡(
∑th
) {

929 i‡((
	`°æí
(
∑th
Ë+ såÀn(
«me
Ë+ 1Ë> 
MAXPATHLEN
) {

930 
	`fûebích_log
(
LOG_ERROR
,

932 
∑th
, 
«me
);

933  (
NULL
);

937 (Ë
	`°r˝y
(
fuŒ«me
, 
∑th
);

938 (Ë
	`°rˇt
(
fuŒ«me
, ".");

939 (Ë
	`°rˇt
(
fuŒ«me
, 
«me
);

941 (Ë
	`°r˝y
(
fuŒ«me
, 
«me
);

948 
ã°_Êow›
) {

949 i‡(
	`°rcmp
(
fuŒ«me
, 
ã°_Êow›
->
fo_«me
) == 0)

950  (
ã°_Êow›
);

952 i‡(
ã°_Êow›
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

953 
Êow›_t
 *
found_Êow›
;

955 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(

956 
ã°_Êow›
->
fo_«me
, 
«me
,

957 
ã°_Êow›
->
fo_comp_f›s
);

959 i‡(
found_Êow›
)

960  (
found_Êow›
);

962 
ã°_Êow›
 =Åe°_Êow›->
fo_exec_√xt
;

966  (
NULL
);

967 
	}
}

973 
Êow›_t
 *

974 
	$Êow›_föd_‰om_li°
(*
«me
, 
Êow›_t
 *
li°
)

976 
Êow›_t
 *
found_Êow›
;

978 
	`Êow›_föd_b¨rõr
();

980 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

982 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(
NULL
, 
«me
, 
li°
);

984 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

986  (
found_Êow›
);

987 
	}
}

994 
	$Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

996 
Êow›_t
 *
ö√r_Êow›
;

999 
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1002 
ö√r_Êow›
) {

1003 
i
, 
cou¡
;

1006 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

1007  (
FILEBENCH_DONE
);

1010 
cou¡
 = ()
	`avd_gë_öt
(
ö√r_Êow›
->
fo_ôîs
);

1011 
i
 = 0; i < 
cou¡
; i++) {

1013 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

1014 "%s-%d", 
thªadÊow
->
tf_«me
,

1015 
ö√r_Êow›
->
fo_«me
,

1016 
ö√r_Êow›
->
fo_ö°™˚
);

1018 (*
ö√r_Êow›
->
fo_func
)(
thªadÊow
,

1019 
ö√r_Êow›
)) {

1022 
FILEBENCH_DONE
:

1023  (
FILEBENCH_DONE
);

1026 
FILEBENCH_NORSC
:

1027  (
FILEBENCH_NORSC
);

1030 
FILEBENCH_ERROR
:

1031 
	`fûebích_log
(
LOG_ERROR
,

1033 
ö√r_Êow›
->
fo_«me
);

1034  (
FILEBENCH_ERROR
);

1044 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1048  (
FILEBENCH_OK
);

1049 
	}
}

1056 
	$Êow›_composôe_öô
(
Êow›_t
 *
Êow›
)

1058 
îr
;

1060 
îr
 = 
	`Êow›_¸óã_ru¡ime_Êow›s
(
Êow›
->
fo_thªad
,

1061 &
Êow›
->
fo_comp_f›s
);

1062 i‡(
îr
 !
FILEBENCH_OK
)

1063  (
îr
);

1065 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1067 
	}
}

1073 
	$Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
)

1075 
Êow›_t
 *
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1077 
ö√r_Êow›
) {

1078 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting inner flowop (%s-%d)",

1079 
ö√r_Êow›
->
fo_«me
, i¬î_Êow›->
fo_ö°™˚
);

1081 i‡(
ö√r_Êow›
->
fo_ö°™˚
 &&

1082 (
ö√r_Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

1083 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1086 
	`Êow›_dñëe
(&
Êow›
->
fo_comp_f›s
, 
ö√r_Êow›
);

1087 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1089 
	}
}

1096 
	$Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
)

1098 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1099  (
FILEBENCH_OK
);

1100 
	}
}

1103 
	$Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
)

1105 *
buf
;

1108 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1109 
buf
 = 
Êow›
->
fo_buf
;

1110 
Êow›
->
fo_buf
 = 
NULL
;

1111 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1113 i‡(
buf
)

1114 
	`‰ì
(
buf
);

1115 
	}
}

1125 
	$Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
)

1127 
i
;

1129 
i
 = 0; i < 
n›s
; i++) {

1130 
Êow›_t
 *
Êow›
;

1131 
Êow›_¥Ÿo_t
 *
Ê¥Ÿo
;

1133 
Ê¥Ÿo
 = &(
li°
[
i
]);

1136 
Êow›
 = 
	`Êow›_deföe
(
NULL
, 
Ê¥Ÿo
->
Ê_«me
, NULL,

1137 
NULL
, 
FLOW_DEFINITION
, 
Ê¥Ÿo
->
Ê_ty≥
);

1138 i‡(!
Êow›
) {

1139 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create flowop %s\n",

1140 
Ê¥Ÿo
->
Ê_«me
);

1141 
	`fûebích_shutdown
(1);

1144 
Êow›
->
fo_func
 = 
Ê¥Ÿo
->
Ê_func
;

1145 
Êow›
->
fo_öô
 = 
Ê¥Ÿo
->
Ê_öô
;

1146 
Êow›
->
fo_de°ru˘
 = 
Ê¥Ÿo
->
Ê_de°ru˘
;

1147 
Êow›
->
fo_©ås
 = 
Ê¥Ÿo
->
Ê_©ås
;

1149 
	}
}

	@flowop.h

26 #i‚def 
_FB_FLOWOP_H


27 
	#_FB_FLOWOP_H


	)

29 
	~"fûebích.h
"

31 
	sÊow›
 {

32 
	mfo_«me
[128];

33 
	mfo_ö°™˚
;

34 
Êow›
 *
	mfo_√xt
;

35 
Êow›
 *
	mfo_exec_√xt
;

36 
Êow›
 *
	mfo_ªsu…√xt
;

37 
Êow›
 *
	mfo_comp_f›s
;

38 
v¨_t
 *
	mfo_lv¨_li°
;

39 
thªadÊow
 *
	mfo_thªad
;

40 (*
	mfo_func
)();

41 (*
	mfo_öô
)();

42 (*
	mfo_de°ru˘
)();

43 
	mfo_ty≥
;

44 
	mfo_©ås
;

45 
avd_t
 
	mfo_fûíame
;

46 
fûe£t_t
 *
	mfo_fûe£t
;

47 
	mfo_fdnumbî
;

48 
	mfo_§cfdnumbî
;

49 
fböt_t
 
	mfo_c⁄°vÆue
;

50 
fböt_t
 
	mfo_c⁄°wss
;

51 
avd_t
 
	mfo_iosize
;

52 
avd_t
 
	mfo_wss
;

53 
	mfo_èrgë«me
[128];

54 
Êow›
 *
	mfo_èrgës
;

55 
Êow›
 *
	mfo_èrgë√xt
;

56 
avd_t
 
	mfo_ôîs
;

57 
avd_t
 
	mfo_vÆue
;

58 
avd_t
 
	mfo_£quítül
;

59 
avd_t
 
	mfo_øndom
;

60 
avd_t
 
	mfo_°ride
;

61 
avd_t
 
	mfo_backw¨ds
;

62 
avd_t
 
	mfo_dsync
;

63 
avd_t
 
	mfo_blockög
;

64 
avd_t
 
	mfo_dúe˘io
;

65 
avd_t
 
	mfo_rŸ©efd
;

66 
avd_t
 
	mfo_fûeödex
;

67 
avd_t
 
	mfo_n‹ódahód
;

68 
Êow°©s
 
	mfo_°©s
;

69 
±hªad_c⁄d_t
 
	mfo_cv
;

70 
±hªad_muãx_t
 
	mfo_lock
;

71 *
	mfo_¥iv©e
;

72 *
	mfo_buf
;

73 
uöt64_t
 
	mfo_buf_size
;

74 #ifde‡
HAVE_SYSV_SEM


75 
	mfo_£mid_lw
;

76 
	mfo_£mid_hw
;

78 
£m_t
 
	mfo_£m
;

80 
avd_t
 
	mfo_highw©î
;

81 *
	mfo_idp
;

82 
hπime_t
 
	mfo_time°amp
;

83 
	mfo_öôãd
;

84 
öt64_t
 
	mfo_çutbuckë
;

85 
uöt64_t
 
	mfo_çuéa°
;

87 } 
	tÊow›_t
;

90 
	#FLOW_ATTR_SEQUENTIAL
 0x1

	)

91 
	#FLOW_ATTR_RANDOM
 0x2

	)

92 
	#FLOW_ATTR_STRIDE
 0x4

	)

93 
	#FLOW_ATTR_BACKWARDS
 0x8

	)

94 
	#FLOW_ATTR_DSYNC
 0x10

	)

95 
	#FLOW_ATTR_BLOCKING
 0x20

	)

96 
	#FLOW_ATTR_DIRECTIO
 0x40

	)

97 
	#FLOW_ATTR_READ
 0x80

	)

98 
	#FLOW_ATTR_WRITE
 0x100

	)

99 
	#FLOW_ATTR_FADV_RANDOM
 0x200

	)

103 
	#FLOW_DEFINITION
 0

	)

104 
	#FLOW_INNER_DEF
 -1

	)

105 
	#FLOW_MASTER
 -2

	)

109 
	#FLOW_TYPES
 6

	)

110 
	#FLOW_TYPE_GLOBAL
 0

	)

111 
	#FLOW_TYPE_IO
 1

	)

112 
	#FLOW_TYPE_AIO
 2

	)

113 
	#FLOW_TYPE_SYNC
 3

	)

114 
	#FLOW_TYPE_COMPOSITE
 4

	)

115 
	#FLOW_TYPE_OTHER
 5

	)

117 
	sÊow›_¥Ÿo
 {

118 
	mÊ_ty≥
;

119 
	mÊ_©ås
;

120 *
	mÊ_«me
;

121 (*
	mÊ_öô
)();

122 (*
	mÊ_func
)();

123 (*
	mÊ_de°ru˘
)();

124 } 
	tÊow›_¥Ÿo_t
;

126 
Êow°©s
 
c⁄åﬁ°©s
;

127 
±hªad_muãx_t
 
c⁄åﬁ°©s_lock
;

129 
Êow›_t
 *
Êow›_deföe
(
thªadÊow_t
 *, *
«me
, flow›_à*
öhîô
,

130 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

132 
Êow›_t
 *
Êow›_föd
(*
«me
);

133 
Êow›_t
 *
Êow›_föd_⁄e
(*
«me
, 
ö°™˚
);

134 
Êow›_t
 *
Êow›_föd_‰om_li°
(*
«me
, flow›_à*
li°
);

135 
Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
);

136 
Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
);

137 
Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
);

138 
Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

139 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
);

140 
Êow›lib_Êowöô
();

141 
Êow›_dñëe_Æl
(
Êow›_t
 **
thªadli°
);

142 
Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
);

143 
Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

144 
Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
);

145 
Êow›_t
 *
Êow›_√w_composôe_deföe
(*
«me
);

146 
Êow›_¥öèŒ
();

148 
Êow›_öô
(
isma°î
);

151 
fb_lfs_funcvecöô
();

152 
fb_lfs_√wÊow›s
();

	@flowop_library.c

28 
	~"c⁄fig.h
"

30 
	~<sys/ty≥s.h
>

31 
	~<°ddef.h
>

32 
	~<sys/ùc.h
>

33 
	~<sys/£m.h
>

34 
	~<sys/î∫o.h
>

35 
	~<sys/time.h
>

36 
	~<öây≥s.h
>

37 
	~<f˙é.h
>

38 
	~<m©h.h
>

39 
	~<dúít.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

45 
	~"fûebích.h
"

46 
	~"Êow›.h
"

47 
	~"fûe£t.h
"

48 
	~"fb_øndom.h
"

49 
	~"utûs.h
"

50 
	~"f•lug.h
"

75 
Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
);

76 
Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

77 
Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

78 
Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

79 
Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

80 
Êow›lib_block_öô
(
Êow›_t
 *
Êow›
);

81 
Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

82 
Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

83 
Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

84 
Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

85 
Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

86 
Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
);

87 
Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

88 
Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
);

89 
Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
);

90 
Êow›lib_evíéimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

91 
Êow›lib_bwlimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

92 
Êow›lib_i›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

93 
Êow›lib_›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

94 
Êow›lib_›ífûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

95 
Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
, 
fd
);

96 
Êow›lib_¸óãfûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

97 
Êow›lib_˛o£fûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

98 
Êow›lib_makedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

99 
Êow›lib_ªmovedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

100 
Êow›lib_li°dú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

101 
Êow›lib_fsync
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

102 
Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

103 
Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

104 
Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

105 
Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

106 
Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

107 
Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

108 
Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

109 
Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

110 
Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

111 
Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

112 
Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
);

113 
Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
);

115 
Êow›_¥Ÿo_t
 
	gÊow›lib_funcs
[] = {

116 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôe", 
Êow›_öô_gíîic
,

117 
Êow›lib_wrôe
, 
Êow›_de°ru˘_gíîic
},

118 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªad", 
Êow›_öô_gíîic
,

119 
Êow›lib_ªad
, 
Êow›_de°ru˘_gíîic
},

120 {
FLOW_TYPE_SYNC
, 0, "block", 
Êow›lib_block_öô
,

121 
Êow›lib_block
, 
Êow›_de°ru˘_gíîic
},

122 {
FLOW_TYPE_SYNC
, 0, "wakeup", 
Êow›_öô_gíîic
,

123 
Êow›lib_wakeup
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_SYNC
, 0, "£mblock", 
Êow›lib_£mblock_öô
,

125 
Êow›lib_£mblock
, 
Êow›lib_£mblock_de°ru˘
},

126 {
FLOW_TYPE_SYNC
, 0, "£mpo°", 
Êow›lib_£mpo°_öô
,

127 
Êow›lib_£mpo°
, 
Êow›lib_de°ru˘_no›
},

128 {
FLOW_TYPE_OTHER
, 0, "hog", 
Êow›_öô_gíîic
,

129 
Êow›lib_hog
, 
Êow›_de°ru˘_gíîic
},

130 {
FLOW_TYPE_OTHER
, 0, "dñay", 
Êow›_öô_gíîic
,

131 
Êow›lib_dñay
, 
Êow›_de°ru˘_gíîic
},

132 {
FLOW_TYPE_OTHER
, 0, "evíéimô", 
Êow›_öô_gíîic
,

133 
Êow›lib_evíéimô
, 
Êow›_de°ru˘_gíîic
},

134 {
FLOW_TYPE_OTHER
, 0, "bwlimô", 
Êow›_öô_gíîic
,

135 
Êow›lib_bwlimô
, 
Êow›_de°ru˘_gíîic
},

136 {
FLOW_TYPE_OTHER
, 0, "i›¶imô", 
Êow›_öô_gíîic
,

137 
Êow›lib_i›¶imô
, 
Êow›_de°ru˘_gíîic
},

138 {
FLOW_TYPE_OTHER
, 0, "›¶imô", 
Êow›_öô_gíîic
,

139 
Êow›lib_›¶imô
, 
Êow›_de°ru˘_gíîic
},

140 {
FLOW_TYPE_OTHER
, 0, "föish⁄cou¡", 
Êow›_öô_gíîic
,

141 
Êow›lib_föish⁄cou¡
, 
Êow›_de°ru˘_gíîic
},

142 {
FLOW_TYPE_OTHER
, 0, "föish⁄byãs", 
Êow›_öô_gíîic
,

143 
Êow›lib_föish⁄byãs
, 
Êow›_de°ru˘_gíîic
},

144 {
FLOW_TYPE_IO
, 0, "›ífûe", 
Êow›_öô_gíîic
,

145 
Êow›lib_›ífûe
, 
Êow›_de°ru˘_gíîic
},

146 {
FLOW_TYPE_IO
, 0, "¸óãfûe", 
Êow›_öô_gíîic
,

147 
Êow›lib_¸óãfûe
, 
Êow›_de°ru˘_gíîic
},

148 {
FLOW_TYPE_IO
, 0, "˛o£fûe", 
Êow›_öô_gíîic
,

149 
Êow›lib_˛o£fûe
, 
Êow›_de°ru˘_gíîic
},

150 {
FLOW_TYPE_IO
, 0, "makedú", 
Êow›_öô_gíîic
,

151 
Êow›lib_makedú
, 
Êow›_de°ru˘_gíîic
},

152 {
FLOW_TYPE_IO
, 0, "ªmovedú", 
Êow›_öô_gíîic
,

153 
Êow›lib_ªmovedú
, 
Êow›_de°ru˘_gíîic
},

154 {
FLOW_TYPE_IO
, 0, "li°dú", 
Êow›_öô_gíîic
,

155 
Êow›lib_li°dú
, 
Êow›_de°ru˘_gíîic
},

156 {
FLOW_TYPE_IO
, 0, "fsync", 
Êow›_öô_gíîic
,

157 
Êow›lib_fsync
, 
Êow›_de°ru˘_gíîic
},

158 {
FLOW_TYPE_IO
, 0, "fsync£t", 
Êow›_öô_gíîic
,

159 
Êow›lib_fsync£t
, 
Êow›_de°ru˘_gíîic
},

160 {
FLOW_TYPE_IO
, 0, "°©fûe", 
Êow›_öô_gíîic
,

161 
Êow›lib_°©fûe
, 
Êow›_de°ru˘_gíîic
},

162 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªadwhﬁefûe", 
Êow›_öô_gíîic
,

163 
Êow›lib_ªadwhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

164 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûe", 
Êow›_öô_gíîic
,

165 
Êow›lib_≠≥ndfûe
, 
Êow›_de°ru˘_gíîic
},

166 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûî™d", 
Êow›_öô_gíîic
,

167 
Êow›lib_≠≥ndfûî™d
, 
Êow›_de°ru˘_gíîic
},

168 {
FLOW_TYPE_IO
, 0, "dñëefûe", 
Êow›_öô_gíîic
,

169 
Êow›lib_dñëefûe
, 
Êow›_de°ru˘_gíîic
},

170 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôewhﬁefûe", 
Êow›_öô_gíîic
,

171 
Êow›lib_wrôewhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

172 {
FLOW_TYPE_OTHER
, 0, "¥öt", 
Êow›_öô_gíîic
,

173 
Êow›lib_¥öt
, 
Êow›_de°ru˘_gíîic
},

175 {
FLOW_TYPE_OTHER
, 0, "ã°øndv¨", 
Êow›lib_ã°øndv¨_öô
,

176 
Êow›lib_ã°øndv¨
, 
Êow›lib_ã°øndv¨_de°ru˘
}

188 
	$Êow›lib_Êowöô
()

190 
n›s
 =  (
Êow›lib_funcs
Ë/  (
Êow›_¥Ÿo_t
);

192 
	`Êow›_add_‰om_¥Ÿo
(
Êow›lib_funcs
, 
n›s
);

193 
	}
}

200 
	$Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
)

202 
	}
}

210 
	$Êow›lib_fûóârs
(
Êow›_t
 *
Êow›
)

212 
©ås
 = 0;

214 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dúe˘io
))

215 
©ås
 |
FLOW_ATTR_DIRECTIO
;

217 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

218 
©ås
 |
FLOW_ATTR_DSYNC
;

220 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_n‹ódahód
))

221 
©ås
 |
FLOW_ATTR_FADV_RANDOM
;

223  (
©ås
);

224 
	}
}

234 
	$Êow›lib_pickfûe
(
fûe£ã¡ry_t
 **
fûï
, 
Êow›_t
 *
Êow›
, 
Êags
, 
tid
)

236 
fûe£t_t
 *
fûe£t
;

237 
fûeödex
;

239 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

240 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

241  (
FILEBENCH_ERROR
);

244 i‡(
Êow›
->
fo_fûeödex
) {

245 
fûeödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
));

246 
fûeödex
 = fûeödex % 
fûe£t
->
fs_c⁄°íåõs
;

247 
Êags
 |
FILESET_PICKBYINDEX
;

249 
fûeödex
 = 0;

252 i‡((*
fûï
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKFILE
 | 
Êags
,

253 
tid
, 
fûeödex
)Ë=
NULL
) {

254 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

256 
Êow›
->
fo_«me
,

257 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

258  (
FILEBENCH_NORSC
);

261  (
FILEBENCH_OK
);

262 
	}
}

272 
	$Êow›lib_pickÀafdú
(
fûe£ã¡ry_t
 **
dúp
, 
Êow›_t
 *
Êow›
, 
Êags
)

274 
fûe£t_t
 *
fûe£t
;

275 
dúödex
;

277 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

278 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

279  (
FILEBENCH_ERROR
);

282 i‡(
Êow›
->
fo_fûeödex
) {

283 
dúödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
) *

284 (()(
fûe£t
->
fs_c⁄°Àafdús
 / 2)));

285 
dúödex
 = dúödex % 
fûe£t
->
fs_c⁄°Àafdús
;

286 
Êags
 |
FILESET_PICKBYINDEX
;

288 
dúödex
 = 0;

291 i‡((*
dúp
 = 
	`fûe£t_pick
(
fûe£t
,

292 
FILESET_PICKLEAFDIR
 | 
Êags
, 0, 
dúödex
)Ë=
NULL
) {

293 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

295 
Êow›
->
fo_«me
,

296 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

297  (
FILEBENCH_NORSC
);

300  (
FILEBENCH_OK
);

301 
	}
}

316 
	$Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

318 
fd
 = 
Êow›
->
fo_fdnumbî
;

320 i‡(
fd
 > 0) {

321 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÉxplicitly set fd");

322 
ªtfd
;

325 i‡(!
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
)) {

326 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picking default fd");

327 
ªtfd
;

330 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÑotor fd");

333 i‡(!
thªadÊow
->
tf_fdrŸ‹
)

334 
thªadÊow
->
tf_fdrŸ‹
 = 
THREADFLOW_MAXFD
;

336 
thªadÊow
->
tf_fdrŸ‹
--;

337 
fd
 = 
thªadÊow
->
tf_fdrŸ‹
;

339 
ªtfd
:

340 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picked fd = %d", 
fd
);

341  
fd
;

342 
	}
}

352 
	$Êow›lib_fûe£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

353 
fböt_t
 *
ws•
, 
fb_fdesc_t
 **
fdes˝
)

355 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

357 i‡(
fd
 == -1)

358  (
FILEBENCH_ERROR
);

361 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_f£
[fd] !
NULL
)) {

362 *
fd_ba£d_«me
;

364 
fd_ba£d_«me
 =

365 
	`avd_gë_°r
(
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
->
fs_«me
);

367 i‡(
Êow›
->
fo_fûíame
 !
NULL
) {

368 *
fo_ba£d_«me
;

370 
fo_ba£d_«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

371 i‡(
	`°rcmp
(
fd_ba£d_«me
, 
fo_ba£d_«me
) != 0) {

372 
	`fûebích_log
(
LOG_ERROR
, "Name of fdÑefer"

375 
fd_ba£d_«me
, 
fo_ba£d_«me
);

376 
	`fûebích_shutdown
(1);

377  (
FILEBENCH_ERROR
);

382 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

383 
ªt
;

385 i‡((
ªt
 = 
	`Êow›lib_›ífûe_comm⁄
(

386 
thªadÊow
, 
Êow›
, 
fd
)Ë!
FILEBENCH_OK
)

387  (
ªt
);

389 i‡(
thªadÊow
->
tf_f£
[
fd
]) {

390 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "opened file %s",

391 
thªadÊow
->
tf_f£
[
fd
]->
f£_∑th
);

393 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

395 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
),

396 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

400 *
fdes˝
 = &(
thªadÊow
->
tf_fd
[
fd
]);

402 i‡((*
ws•
 = 
Êow›
->
fo_c⁄°wss
) == 0) {

403 i‡(
thªadÊow
->
tf_f£
[
fd
])

404 *
ws•
 = 
thªadÊow
->
tf_f£
[
fd
]->
f£_size
;

406 *
ws•
 = 
	`avd_gë_öt
(
Êow›
->
fo_fûe£t
->
fs_size
);

409  (
FILEBENCH_OK
);

410 
	}
}

417 
	$Êow›lib_iobuf£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

418 
ˇddr_t
 *
iobuÂ
, 
fböt_t
 
iosize
)

420 
memsize
;

421 
size_t
 
memoff£t
;

423 i‡(
iosize
 == 0) {

424 
	`fûebích_log
(
LOG_ERROR
, "zero iosize forÅhread %s",

425 
Êow›
->
fo_«me
);

426  (
FILEBENCH_ERROR
);

430 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

431 
iosize
 = iosize + 512;

433 i‡((
memsize
 = 
thªadÊow
->
tf_c⁄°memsize
) != 0) {

436 i‡(
memsize
 < 
iosize
) {

437 
	`fûebích_log
(
LOG_ERROR
,

439 
Êow›
->
fo_«me
);

440  (
FILEBENCH_ERROR
);

443 
	`fb_øndom
(&
memoff£t
, 
memsize
, 
iosize
, 
NULL
);

444 *
iobuÂ
 = 
thªadÊow
->
tf_mem
 + 
memoff£t
;

448 i‡((
Êow›
->
fo_buf
 !
NULL
) &&

449 (
Êow›
->
fo_buf_size
 < 
iosize
)) {

451 
	`‰ì
(
Êow›
->
fo_buf
);

452 
Êow›
->
fo_buf
 = 
NULL
;

460 i‡((
Êow›
->
fo_buf
 =
NULL
) && ((flowop->fo_buf

461 (*)
	`mÆloc
(
iosize
)Ë=
NULL
))

462  (
FILEBENCH_ERROR
);

464 
Êow›
->
fo_buf_size
 = 
iosize
;

465 *
iobuÂ
 = 
Êow›
->
fo_buf
;

468 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

469 *
iobuÂ
 = (
ˇddr_t
)(((()(*iobufp) + 512) / 512) * 512);

471  (
FILEBENCH_OK
);

472 
	}
}

480 
	$Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

481 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
)

483 
ªt
;

485 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, 
ws•
, 
fûedes˝
)) !=

486 
FILEBENCH_OK
)

487  (
ªt
);

489 i‡((
ªt
 = 
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, 
iobuÂ
, 
iosize
)) !=

490 
FILEBENCH_OK
)

491  (
ªt
);

493  (
FILEBENCH_OK
);

494 
	}
}

513 
	$Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

515 
ˇddr_t
 
iobuf
;

516 
fböt_t
 
wss
;

517 
fböt_t
 
iosize
;

518 
fb_fdesc_t
 *
fdesc
;

519 
ªt
;

521 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

523 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

524 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

525  (
ªt
);

527 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

528 
uöt64_t
 
fûeoff£t
;

530 i‡(
iosize
 > 
wss
) {

531 
	`fûebích_log
(
LOG_ERROR
,

533 
Êow›
->
fo_«me
);

534  (
FILEBENCH_ERROR
);

538 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

540 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

541 i‡((
ªt
 = 
	`FB_PREAD
(
fdesc
, 
iobuf
,

542 
iosize
, (
off64_t
)
fûeoff£t
)) == -1) {

543 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

544 
	`fûebích_log
(
LOG_ERROR
,

547 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

548 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

549 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

550  (
FILEBENCH_ERROR
);

552 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

554 i‡((
ªt
 == 0))

555 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

558 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

559 i‡((
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) == -1) {

560 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

561 
	`fûebích_log
(
LOG_ERROR
,

563 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

564 
iobuf
, 
	`°ªº‹
(
î∫o
));

565 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

566  (
FILEBENCH_ERROR
);

568 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

570 i‡((
ªt
 == 0))

571 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

574  (
FILEBENCH_OK
);

575 
	}
}

582 
	$Êow›lib_block_öô
(
Êow›_t
 *
Êow›
)

584 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d block initáddress %zx",

585 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

586 (Ë
	`±hªad_c⁄d_öô
(&
Êow›
->
fo_cv
, 
	`ùc_c⁄d©å
());

587 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

589  (
FILEBENCH_OK
);

590 
	}
}

597 
	$Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

599 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d blockingátáddress %zx",

600 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

601 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

603 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

604 (Ë
	`±hªad_c⁄d_waô
(&
Êow›
->
fo_cv
, &Êow›->
fo_lock
);

605 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

607 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

608 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

610 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

612  (
FILEBENCH_OK
);

613 
	}
}

626 
	$Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

628 
Êow›_t
 *
èrgë
;

631 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

632 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

634 
Êow›
->
fo_èrgës
 = 
ªsu…
;

635 i‡(
ªsu…
 =
NULL
) {

636 
	`fûebích_log
(
LOG_ERROR
,

638 
Êow›
->
fo_èrgë«me
,

639 
thªadÊow
->
tf_«me
);

640 
	`fûebích_shutdown
(1);

642 
ªsu…
) {

643 
ªsu…
->
fo_èrgë√xt
 =

644 
ªsu…
->
fo_ªsu…√xt
;

645 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

649 
èrgë
 = 
Êow›
->
fo_èrgës
;

652 
èrgë
) {

653 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

654 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

657 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

659 
èrgë
->
fo_«me
,

660 
èrgë
->
fo_ö°™˚
,

661 &
èrgë
->
fo_cv
);

663 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

664 (Ë
	`ùc_muãx_lock
(&
èrgë
->
fo_lock
);

665 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(&
èrgë
->
fo_cv
);

666 (Ë
	`ùc_muãx_u∆ock
(&
èrgë
->
fo_lock
);

667 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

669 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

672  (
FILEBENCH_OK
);

673 
	}
}

688 
	$Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

690 
uöt64_t
 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

691 
i
;

693 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉnter");

694 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

695 i‡(
thªadÊow
->
tf_mem
 !
NULL
) {

696 
i
 = 0; i < 
vÆue
; i++)

697 *(
thªadÊow
->
tf_mem
) = 1;

699 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

700 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉxit");

701  (
FILEBENCH_OK
);

702 
	}
}

709 
	$Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

711 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

713 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

714 (Ë
	`¶ìp
(
vÆue
);

715 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

716  (
FILEBENCH_OK
);

717 
	}
}

737 
	$Êow›lib_evíéimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

740 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

741  (
FILEBENCH_OK
);

743 i‡(
Êow›
->
fo_öôãd
 == 0) {

744 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

745 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

746 
Êow›
->
fo_öôãd
 = 1;

749 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

750 
fûebích_shm
->
shm_evítgí_íabÀd
) {

751 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

752 i‡(
fûebích_shm
->
shm_evítgí_q
 > 0) {

753 
fûebích_shm
->
shm_evítgí_q
--;

754 (Ë
	`ùc_muãx_u∆ock
(

755 &
fûebích_shm
->
shm_evítgí_lock
);

758 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

759 &
fûebích_shm
->
shm_evítgí_lock
);

760 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

762 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

763  (
FILEBENCH_OK
);

764 
	}
}

767 
	$Êow›lib_evít_föd_èrgë
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

769 i‡(
Êow›
->
fo_èrgë«me
[0] != '\0') {

772 
Êow›
->
fo_èrgës
 =

773 
	`Êow›_föd_‰om_li°
(
Êow›
->
fo_èrgë«me
,

774 
thªadÊow
->
tf_thrd_f›s
);

775 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

776 
	`fûebích_log
(
LOG_ERROR
,

778 
Êow›
->
fo_èrgë«me
);

779 
	`fûebích_shutdown
(1);

780  (
FILEBENCH_ERROR
);

784 
Êow›
->
fo_èrgës
 = 
NULL
;

786  (
FILEBENCH_OK
);

787 
	}
}

796 
	$Êow›lib_i›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

798 
uöt64_t
 
i›s
;

799 
uöt64_t
 
dñè
;

800 
uöt64_t
 
evíts
;

803 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

804  (
FILEBENCH_OK
);

806 i‡(
Êow›
->
fo_öôãd
 == 0) {

807 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

808 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

809 
Êow›
->
fo_öôãd
 = 1;

811 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

812 =
FILEBENCH_ERROR
)

813  (
FILEBENCH_ERROR
);

815 i‡(
Êow›
->
fo_èrgës
 && ((Êow›->fo_èrgës->
fo_©ås
 &

816 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

817 
	`fûebích_log
(
LOG_ERROR
,

819 
Êow›
->
fo_èrgës
->
fo_«me
);

820 
	`fûebích_shutdown
(1);

821  (
FILEBENCH_ERROR
);

825 i‡(
Êow›
->
fo_èrgës
) {

830 
i›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

832 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

833 
i›s
 = (
c⁄åﬁ°©s
.
fs_rcou¡
 +

834 
c⁄åﬁ°©s
.
fs_wcou¡
);

835 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

839 i‡(
Êow›
->
fo_çuéa°
 == 0) {

840 
Êow›
->
fo_çuéa°
 = 
i›s
;

841  (
FILEBENCH_OK
);

844 
dñè
 = 
i›s
 - 
Êow›
->
fo_çuéa°
;

845 
Êow›
->
fo_çutbuckë
 -
dñè
;

846 
Êow›
->
fo_çuéa°
 = 
i›s
;

849 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

850 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

851  (
FILEBENCH_OK
);

854 
i›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

855 
evíts
 = 
i›s
;

857 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

858 
fûebích_shm
->
shm_evítgí_íabÀd
) {

860 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

861 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

862 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

863 (Ë
	`ùc_muãx_u∆ock
(

864 &
fûebích_shm
->
shm_evítgí_lock
);

865 
Êow›
->
fo_çutbuckë
 +
evíts
;

868 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

869 &
fûebích_shm
->
shm_evítgí_lock
);

870 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

872 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

874  (
FILEBENCH_OK
);

875 
	}
}

884 
	$Êow›lib_›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

886 
uöt64_t
 
›s
;

887 
uöt64_t
 
dñè
;

888 
uöt64_t
 
evíts
;

891 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

892  (
FILEBENCH_OK
);

894 i‡(
Êow›
->
fo_öôãd
 == 0) {

895 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

896 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

897 
Êow›
->
fo_öôãd
 = 1;

899 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

900 =
FILEBENCH_ERROR
)

901  (
FILEBENCH_ERROR
);

904 i‡(
Êow›
->
fo_èrgës
) {

905 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

907 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

908 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

909 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

913 i‡(
Êow›
->
fo_çuéa°
 == 0) {

914 
Êow›
->
fo_çuéa°
 = 
›s
;

915  (
FILEBENCH_OK
);

918 
dñè
 = 
›s
 - 
Êow›
->
fo_çuéa°
;

919 
Êow›
->
fo_çutbuckë
 -
dñè
;

920 
Êow›
->
fo_çuéa°
 = 
›s
;

923 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

924 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

925  (
FILEBENCH_OK
);

928 
›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

929 
evíts
 = 
›s
;

931 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

932 
fûebích_shm
->
shm_evítgí_íabÀd
) {

933 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

934 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

935 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

936 (Ë
	`ùc_muãx_u∆ock
(

937 &
fûebích_shm
->
shm_evítgí_lock
);

938 
Êow›
->
fo_çutbuckë
 +
evíts
;

941 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

942 &
fûebích_shm
->
shm_evítgí_lock
);

943 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

945 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

947  (
FILEBENCH_OK
);

948 
	}
}

959 
	$Êow›lib_bwlimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

961 
uöt64_t
 
byãs
;

962 
uöt64_t
 
dñè
;

963 
uöt64_t
 
evíts
;

966 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

967  (
FILEBENCH_OK
);

969 i‡(
Êow›
->
fo_öôãd
 == 0) {

970 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

971 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

972 
Êow›
->
fo_öôãd
 = 1;

974 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

975 =
FILEBENCH_ERROR
)

976  (
FILEBENCH_ERROR
);

978 i‡((
Êow›
->
fo_èrgës
) &&

979 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

980 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

981 
	`fûebích_log
(
LOG_ERROR
,

983 
Êow›
->
fo_èrgës
->
fo_«me
);

984 
	`fûebích_shutdown
(1);

985  (
FILEBENCH_ERROR
);

989 i‡(
Êow›
->
fo_èrgës
) {

994 
byãs
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

996 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

997 
byãs
 = (
c⁄åﬁ°©s
.
fs_rbyãs
 +

998 
c⁄åﬁ°©s
.
fs_wbyãs
);

999 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1003 i‡(
Êow›
->
fo_çuéa°
 == 0) {

1004 
Êow›
->
fo_çuéa°
 = 
byãs
;

1005  (
FILEBENCH_OK
);

1008 
dñè
 = 
byãs
 - 
Êow›
->
fo_çuéa°
;

1009 
Êow›
->
fo_çutbuckë
 -
dñè
;

1010 
Êow›
->
fo_çuéa°
 = 
byãs
;

1013 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

1014 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1015  (
FILEBENCH_OK
);

1018 
byãs
 = 
Êow›
->
fo_çutbuckë
 * -1;

1019 
evíts
 = (
byãs
 / 
MB
) + 1;

1021 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "%llu bytes, %lluÉvents",

1022 (
u_l⁄gl⁄g_t
)
byãs
, (u_l⁄gl⁄g_t)
evíts
);

1024 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1025 
fûebích_shm
->
shm_evítgí_íabÀd
) {

1026 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

1027 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

1028 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

1029 (Ë
	`ùc_muãx_u∆ock
(

1030 &
fûebích_shm
->
shm_evítgí_lock
);

1031 
Êow›
->
fo_çutbuckë
 +(
evíts
 * 
MB
);

1034 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

1035 &
fûebích_shm
->
shm_evítgí_lock
);

1036 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

1038 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1040  (
FILEBENCH_OK
);

1041 
	}
}

1057 
	$Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1059 
uöt64_t
 
byãs_io
;

1060 
uöt64_t
 
byã_lim
 = 
Êow›
->
fo_c⁄°vÆue
;

1063 i‡(
Êow›
->
fo_öôãd
 == 0) {

1064 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1065 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1066 
Êow›
->
fo_öôãd
 = 1;

1068 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1069 =
FILEBENCH_ERROR
)

1070  (
FILEBENCH_ERROR
);

1072 i‡((
Êow›
->
fo_èrgës
) &&

1073 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

1074 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

1075 
	`fûebích_log
(
LOG_ERROR
,

1077 
Êow›
->
fo_èrgës
->
fo_«me
);

1078 
	`fûebích_shutdown
(1);

1079  (
FILEBENCH_ERROR
);

1083 i‡(
Êow›
->
fo_èrgës
) {

1084 
byãs_io
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

1086 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1087 
byãs_io
 = 
c⁄åﬁ°©s
.
fs_byãs
;

1088 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1091 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1092 i‡(
byãs_io
 > 
byã_lim
) {

1093 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1094  (
FILEBENCH_DONE
);

1096 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1098  (
FILEBENCH_OK
);

1099 
	}
}

1108 
	$Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1110 
uöt64_t
 
›s
;

1111 
uöt64_t
 
cou¡
 = 
Êow›
->
fo_c⁄°vÆue
;

1113 i‡(
Êow›
->
fo_öôãd
 == 0) {

1114 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1115 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1116 
Êow›
->
fo_öôãd
 = 1;

1118 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1119 =
FILEBENCH_ERROR
)

1120  (
FILEBENCH_ERROR
);

1123 i‡(
Êow›
->
fo_èrgës
) {

1124 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

1126 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1127 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

1128 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1131 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1132 i‡(
›s
 >
cou¡
) {

1133 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1134  (
FILEBENCH_DONE
);

1136 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1138  (
FILEBENCH_OK
);

1139 
	}
}

1160 
	$Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
)

1163 #ifde‡
HAVE_SYSV_SEM


1164 
sys_£mid
;

1165 
£mbuf
 
sbuf
[2];

1166 
highw©î
;

1168 
	`ùc_£möô
();

1170 
Êow›
->
fo_£mid_lw
 = 
	`ùc_£midÆloc
();

1171 
Êow›
->
fo_£mid_hw
 = 
	`ùc_£midÆloc
();

1173 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d semblock init semid=%x",

1174 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, flow›->
fo_£mid_lw
);

1176 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1178 i‡((
highw©î
 = 
Êow›
->
fo_£mid_hw
) == 0)

1179 
highw©î
 = 
Êow›
->
fo_c⁄°vÆue
;

1181 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "£âög highw©îÅÿ: %d", 
highw©î
);

1183 
sbuf
[0].
£m_num
 = ()
highw©î
;

1184 
sbuf
[0].
£m_›
 = 
	`avd_gë_öt
(
Êow›
->
fo_highw©î
);

1185 
sbuf
[0].
£m_Êg
 = 0;

1186 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 1Ë=-1Ë&& 
î∫o
) {

1187 
	`fûebích_log
(
LOG_ERROR
, "semblock initÖost failed: %s (%d,"

1188 "%d)", 
	`°ªº‹
(
î∫o
), 
sbuf
[0].
£m_num
, sbuf[0].
£m_›
);

1189  (
FILEBENCH_ERROR
);

1192 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1194 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1196 
	`£m_öô
(&
Êow›
->
fo_£m
, 1, 0);

1199 i‡(!(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
)))

1200 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1202  (
FILEBENCH_OK
);

1203 
	}
}

1211 
	$Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
)

1213 #ifde‡
HAVE_SYSV_SEM


1214 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_lw
);

1215 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_hw
);

1217 
	`£m_de°roy
(&
Êow›
->
fo_£m
);

1219 
	}
}

1228 
	$Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1231 #ifde‡
HAVE_SYSV_SEM


1232 
£mbuf
 
sbuf
[2];

1233 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1234 
sys_£mid
;

1235 
time•ec
 
timeout
;

1237 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1239 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1241 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, 
sys_£mid
,

1242 
Êow›
->
fo_£mid_hw
, 
vÆue
);

1245 
sbuf
[0].
£m_num
 = 
Êow›
->
fo_£mid_hw
;

1246 
sbuf
[0].
£m_›
 = ()
vÆue
;

1247 
sbuf
[0].
£m_Êg
 = 0;

1248 
sbuf
[1].
£m_num
 = 
Êow›
->
fo_£mid_lw
;

1249 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1250 
sbuf
[1].
£m_Êg
 = 0;

1251 
timeout
.
tv_£c
 = 600;

1252 
timeout
.
tv_n£c
 = 0;

1254 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1255 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1257 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1259 #ifde‡
HAVE_SEMTIMEDOP


1260 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 1, &
timeout
);

1261 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[1], 1, &
timeout
);

1263 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[0], 1);

1264 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[1], 1);

1267 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1268 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1270 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1273 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1274 
i
;

1276 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1278 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1281 
i
 = 0; i < 
vÆue
; i++) {

1282 i‡(
	`£m_waô
(&
Êow›
->
fo_£m
) == -1) {

1283 
	`fûebích_log
(
LOG_ERROR
, "semop wait failed");

1284  (
FILEBENCH_ERROR
);

1288 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d sem unblocking",

1289 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1292  (
FILEBENCH_OK
);

1293 
	}
}

1300 
	$Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
)

1302 #ifde‡
HAVE_SYSV_SEM


1303 
	`ùc_£möô
();

1305  (
FILEBENCH_OK
);

1306 
	}
}

1317 
	$Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1319 
Êow›_t
 *
èrgë
;

1321 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1323 
Êow›
->
fo_«me
,

1324 
Êow›
->
fo_ö°™˚
);

1327 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

1328 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

1330 
Êow›
->
fo_èrgës
 = 
ªsu…
;

1332 i‡(
ªsu…
 =
NULL
) {

1333 
	`fûebích_log
(
LOG_ERROR
,

1335 
Êow›
->
fo_èrgë«me
,

1336 
thªadÊow
->
tf_«me
);

1337 
	`fûebích_shutdown
(1);

1340 
ªsu…
) {

1341 
ªsu…
->
fo_èrgë√xt
 =

1342 
ªsu…
->
fo_ªsu…√xt
;

1343 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

1347 
èrgë
 = 
Êow›
->
fo_èrgës
;

1349 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1351 
èrgë
) {

1352 #ifde‡
HAVE_SYSV_SEM


1353 
£mbuf
 
sbuf
[2];

1354 
sys_£mid
;

1355 
blockög
;

1357 
i
;

1359 
time•ec
 
timeout
;

1360 
vÆue
 = ()
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1362 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

1363 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1367 #ifde‡
HAVE_SYSV_SEM


1369 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1371 
èrgë
->
fo_«me
,

1372 
èrgë
->
fo_ö°™˚
,

1373 
èrgë
->
fo_£mid_lw
);

1375 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1376 
sbuf
[0].
£m_num
 = 
èrgë
->
fo_£mid_lw
;

1377 
sbuf
[0].
£m_›
 = ()
vÆue
;

1378 
sbuf
[0].
£m_Êg
 = 0;

1379 
sbuf
[1].
£m_num
 = 
èrgë
->
fo_£mid_hw
;

1380 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1381 
sbuf
[1].
£m_Êg
 = 0;

1382 
timeout
.
tv_£c
 = 600;

1383 
timeout
.
tv_n£c
 = 0;

1385 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1386 
blockög
 = 1;

1388 
blockög
 = 0;

1390 #ifde‡
HAVE_SEMTIMEDOP


1391 i‡((
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1,

1392 &
timeout
Ë=-1Ë&& (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1394 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1) == -1) &&

1395 (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1397 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed: %s",

1398 
	`°ªº‹
(
î∫o
));

1399  (
FILEBENCH_ERROR
);

1402 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1404 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1406 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1408 
èrgë
->
fo_«me
,

1409 
èrgë
->
fo_ö°™˚
);

1412 
i
 = 0; i < 
vÆue
; i++) {

1413 i‡(
	`£m_po°
(&
èrgë
->
fo_£m
) == -1) {

1414 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed");

1415  (
FILEBENCH_ERROR
);

1419 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

1420 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1423 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1425 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1427  (
FILEBENCH_OK
);

1428 
	}
}

1454 
	$Êow›lib_›ífûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1456 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1458 i‡(
fd
 == -1)

1459  (
FILEBENCH_ERROR
);

1461  (
	`Êow›lib_›ífûe_comm⁄
(
thªadÊow
, 
Êow›
, 
fd
));

1462 
	}
}

1477 
	$Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
fd
)

1479 
fûe£ã¡ry_t
 *
fûe
;

1480 *
fûe£t_«me
;

1481 
tid
 = 0;

1482 
›íÊag
 = 0;

1483 
îr
;

1485 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1486 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1487  (
FILEBENCH_ERROR
);

1490 i‡((
fûe£t_«me
 =

1491 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
)Ë=
NULL
) {

1492 
	`fûebích_log
(
LOG_ERROR
,

1493 "Êow› %s: fûe£àha†nÿ«me", 
Êow›
->
fo_«me
);

1494  (
FILEBENCH_ERROR
);

1500 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1501 
›íÊag
 = 
O_RDONLY
;

1502 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1503 
›íÊag
 = 
O_WRONLY
;

1505 
›íÊag
 = 
O_RDWR
;

1511 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
))

1512 
tid
 = 
thªadÊow
->
tf_utid
;

1514 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1515 
	`fûebích_log
(
LOG_ERROR
,

1517 
Êow›
->
fo_«me
, 
fd
);

1518  (
FILEBENCH_ERROR
);

1521 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1522 
›í_©ås
 = 0;

1523 
«me
[
MAXPATHLEN
];

1525 (Ë
	`fb_°æ˝y
(
«me
,

1526 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1527 (Ë
	`fb_°æˇt
(
«me
, "/", 
MAXPATHLEN
);

1528 (Ë
	`fb_°æˇt
(
«me
, 
fûe£t_«me
, 
MAXPATHLEN
);

1530 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

1531 
›í_©ås
 |
O_SYNC
;

1533 #ifde‡
HAVE_O_DIRECT


1534 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1535 
›í_©ås
 |
O_DIRECT
;

1538 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1539 "›íÑaw devi˚ %†Êag†%d = %d", 
«me
, 
›í_©ås
, 
fd
);

1541 i‡(
	`FB_OPEN
(&(
thªadÊow
->
tf_fd
[
fd
]), 
«me
,

1542 
›íÊag
 | 
›í_©ås
, 0666Ë=
FILEBENCH_ERROR
) {

1543 
	`fûebích_log
(
LOG_ERROR
,

1545 
«me
, 
	`°ªº‹
(
î∫o
));

1546  (
FILEBENCH_ERROR
);

1549 #ifde‡
HAVE_DIRECTIO


1550 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1551 ()
	`dúe˘io
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
DIRECTIO_ON
);

1554 #ifde‡
HAVE_NOCACHE_FCNTL


1555 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1556 ()
	`f˙é
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
F_NOCACHE
, 1);

1560 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_FADV_RANDOM
) {

1561 #ifde‡
HAVE_FADVISE


1562 i‡(
	`posix_Ádvi£
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

1563 !
FILEBENCH_OK
) {

1564 
	`fûebích_log
(
LOG_ERROR
,

1566 
«me
, 
	`°ªº‹
(
î∫o
));

1567  (
FILEBENCH_ERROR
);

1569 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled ** ");

1571 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

1575 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1577  (
FILEBENCH_OK
);

1580 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1581 
FILESET_PICKEXISTS
, 
tid
)Ë!
FILEBENCH_OK
) {

1582 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1584 
Êow›
->
fo_«me
, 
fûe£t_«me
, 
fd
);

1585  (
îr
);

1588 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1590 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1591 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1592 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1593 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1595 i‡(
îr
 =
FILEBENCH_ERROR
) {

1596 
	`fûebích_log
(
LOG_ERROR
, "flowop %s failedÅo open file %s",

1597 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
);

1598  (
FILEBENCH_ERROR
);

1601 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1603 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1605  (
FILEBENCH_OK
);

1606 
	}
}

1621 
	$Êow›lib_¸óãfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1623 
fûe£ã¡ry_t
 *
fûe
;

1624 
›íÊag
 = 
O_CREAT
;

1625 
fd
;

1626 
îr
;

1628 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1630 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1631 
	`fûebích_log
(
LOG_ERROR
,

1633 
Êow›
->
fo_«me
, 
fd
);

1634  (
FILEBENCH_ERROR
);

1637 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1638 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1639  (
FILEBENCH_ERROR
);

1642 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1643 
›íÊag
 |
O_RDONLY
;

1644 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1645 
›íÊag
 |
O_WRONLY
;

1647 
›íÊag
 |
O_RDWR
;

1650 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1651 
	`fûebích_log
(
LOG_ERROR
,

1653 
Êow›
->
fo_«me
);

1654  (
FILEBENCH_ERROR
);

1657 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1658 
FILESET_PICKNOEXIST
, 0)Ë!
FILEBENCH_OK
) {

1659 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1661 
Êow›
->
fo_«me
,

1662 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

1663  (
îr
);

1666 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1668 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1669 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1670 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1671 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1673 i‡(
îr
 =
FILEBENCH_ERROR
) {

1674 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create file %s",

1675 
Êow›
->
fo_«me
);

1676  (
FILEBENCH_ERROR
);

1679 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1681 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1683  (
FILEBENCH_OK
);

1684 
	}
}

1696 
	$Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1698 
fûe£ã¡ry_t
 *
fûe
;

1699 
fûe£t_t
 *
fûe£t
;

1700 
∑th
[
MAXPATHLEN
];

1701 *
∑thtmp
;

1702 
fd
;

1704 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1707 i‡((
fd
 > 0Ë&& ((
fûe
 = 
thªadÊow
->
tf_f£
[fd]Ë!
NULL
)) {

1710 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1713 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1717 
fûe
 = 
NULL
;

1718 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

1722 i‡(
fûe£t
 =
NULL
) {

1723 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1724  (
FILEBENCH_ERROR
);

1728 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1729 
	`fûebích_log
(
LOG_ERROR
,

1731 
Êow›
->
fo_«me
);

1732  (
FILEBENCH_ERROR
);

1735 i‡(
fûe
 =
NULL
) {

1736 
îr
;

1739 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1740 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

1741 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1742 "Êow› %†ÁûedÅÿpick fûe", 
Êow›
->
fo_«me
);

1743  (
îr
);

1747 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1748 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1749 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1750 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1751 &
fûe£t
->
fs_pick_lock
);

1755 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1756 
fûe£t
->
fs_idÀ_fûes
--;

1757 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1761 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

1762 i‡(
fûe
->
f£_›í_˙t
 > 1) {

1763 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1765 "Åhªad†© fd = %d", 
Êow›
->
fo_«me
, 
fd
);

1766 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1767  (
FILEBENCH_OK
);

1769 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1771 
Êow›
->
fo_«me
, 
fd
);

1773 } i‡(
fûe
->
f£_›í_˙t
 > 0) {

1774 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1777 
Êow›
->
fo_«me
, 
fd
, 
fûe
->
f£_›í_˙t
);

1778 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1779  (
FILEBENCH_OK
);

1782 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1783 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1784 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

1785 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

1786 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

1787 
	`‰ì
(
∑thtmp
);

1790 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1791 (Ë
	`FB_UNLINK
(
∑th
);

1792 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1795 
	`fûe£t_unbusy
(
fûe
, 
TRUE
, 
FALSE
, -fûe->
f£_›í_˙t
);

1797 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "dñëed fûê%s", 
fûe
->
f£_∑th
);

1799  (
FILEBENCH_OK
);

1800 
	}
}

1810 
	$Êow›lib_fsync
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1812 
fûe£ã¡ry_t
 *
fûe
;

1813 
fd
;

1815 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1817 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1818 
	`fûebích_log
(
LOG_ERROR
,

1820 
Êow›
->
fo_«me
, 
fd
);

1821  (
FILEBENCH_ERROR
);

1824 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1826 i‡((
fûe
 =
NULL
) ||

1827 (
fûe
->
f£_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)) {

1828 
	`fûebích_log
(
LOG_ERROR
,

1830 
Êow›
->
fo_«me
);

1831  (
FILEBENCH_ERROR
);

1835 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1836 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1837 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1839 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsyn¯fûê%s", 
fûe
->
f£_∑th
);

1841  (
FILEBENCH_OK
);

1842 
	}
}

1851 
	$Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1853 
fd
;

1855 
fd
 = 0; fd < 
THREADFLOW_MAXFD
; fd++) {

1856 
fûe£ã¡ry_t
 *
fûe
;

1859 i‡((
thªadÊow
->
tf_f£
[
fd
] =
NULL
) ||

1860 (
Êow›
->
fo_fûe£t
 !
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
))

1864 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1865 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1866 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1868 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1870 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsync file %s",

1871 
fûe
->
f£_∑th
);

1874  (
FILEBENCH_OK
);

1875 
	}
}

1887 
	$Êow›lib_˛o£fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1889 
fûe£ã¡ry_t
 *
fûe
;

1890 
fûe£t_t
 *
fûe£t
;

1891 
fd
;

1893 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1895 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1896 
	`fûebích_log
(
LOG_ERROR
,

1898 
Êow›
->
fo_«me
, 
fd
);

1899  (
FILEBENCH_ERROR
);

1902 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1903 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1906 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1907 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1908 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1909 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1910 &
fûe£t
->
fs_pick_lock
);

1914 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1917 i‡(
fûe
->
f£_›í_˙t
 == 1)

1918 
fûe£t
->
fs_idÀ_fûes
--;

1920 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1923 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1924 (Ë
	`FB_CLOSE
(&
thªadÊow
->
tf_fd
[
fd
]);

1925 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1927 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, -1);

1929 
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 = 
NULL
;

1931 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "˛o£d fûê%s", 
fûe
->
f£_∑th
);

1933  (
FILEBENCH_OK
);

1934 
	}
}

1942 
	$Êow›lib_gëdú∑th
(
fûe£ã¡ry_t
 *
dú
, *
∑th
)

1944 *
fûe£t_∑th
;

1945 *
fûe£t_«me
;

1946 *
∑π_∑th
;

1948 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_∑th
)Ë=
NULL
) {

1949 
	`fûebích_log
(
LOG_ERROR
, "FilesetÖathÇot set");

1950  (
FILEBENCH_ERROR
);

1953 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_«me
)Ë=
NULL
) {

1954 
	`fûebích_log
(
LOG_ERROR
, "FilesetÇameÇot set");

1955  (
FILEBENCH_ERROR
);

1958 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1959 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1960 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1962 i‡((
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dú
)Ë=
NULL
)

1963  (
FILEBENCH_ERROR
);

1965 (Ë
	`fb_°æˇt
(
∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

1966 
	`‰ì
(
∑π_∑th
);

1968  (
FILEBENCH_OK
);

1969 
	}
}

1980 
	$Êow›lib_makedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1982 
fûe£ã¡ry_t
 *
dú
;

1983 
ªt
;

1984 
fuŒ_∑th
[
MAXPATHLEN
];

1986 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

1987 
FILESET_PICKNOEXIST
)Ë!
FILEBENCH_OK
)

1988  (
ªt
);

1990 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

1991  (
ªt
);

1993 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1994 (Ë
	`FB_MKDIR
(
fuŒ_∑th
, 0755);

1995 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1998 
	`fûe£t_unbusy
(
dú
, 
TRUE
, TRUE, 0);

2000  (
FILEBENCH_OK
);

2001 
	}
}

2012 
	$Êow›lib_ªmovedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2014 
fûe£ã¡ry_t
 *
dú
;

2015 
ªt
;

2016 
fuŒ_∑th
[
MAXPATHLEN
];

2018 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

2019 
FILESET_PICKEXISTS
)Ë!
FILEBENCH_OK
)

2020  (
ªt
);

2022 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2023  (
ªt
);

2025 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2026 (Ë
	`FB_RMDIR
(
fuŒ_∑th
);

2027 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2030 
	`fûe£t_unbusy
(
dú
, 
TRUE
, 
FALSE
, 0);

2032  (
FILEBENCH_OK
);

2033 
	}
}

2047 
	$Êow›lib_li°dú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2049 
fûe£t_t
 *
fûe£t
;

2050 
fûe£ã¡ry_t
 *
dú
;

2051 
DIR
 *
dú_h™dÀ
;

2052 
dúít
 *
dúíç
;

2053 
dú_byãs
 = 0;

2054 
ªt
;

2055 
fuŒ_∑th
[
MAXPATHLEN
];

2057 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

2058 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

2059  (
FILEBENCH_ERROR
);

2062 i‡((
dú
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKDIR
, 0, 0)Ë=
NULL
) {

2063 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2065 
Êow›
->
fo_«me
,

2066 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2067  (
FILEBENCH_ERROR
);

2070 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2071  (
ªt
);

2073 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2076 i‡((
dú_h™dÀ
 = 
	`FB_OPENDIR
(
fuŒ_∑th
)Ë=
NULL
) {

2077 
	`fûebích_log
(
LOG_ERROR
,

2079 
Êow›
->
fo_«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2080  (
FILEBENCH_ERROR
);

2084 (
dúíç
 = 
	`FB_READDIR
(
dú_h™dÀ
)Ë!
NULL
) {

2085 
dú_byãs
 +(
	`°æí
(
dúíç
->
d_«me
) +

2086  (
dúít
) - 1);

2090 (Ë
	`FB_CLOSEDIR
(
dú_h™dÀ
);

2092 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
dú_byãs
);

2095 
	`fûe£t_unbusy
(
dú
, 
FALSE
, FALSE, 0);

2097  (
FILEBENCH_OK
);

2098 
	}
}

2108 
	$Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2110 
fûe£ã¡ry_t
 *
fûe
;

2111 
fûe£t_t
 *
fûe£t
;

2112 
°©64
 
°©buf
;

2113 
fd
;

2115 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

2118 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

2121 i‡((
fûe
 = 
thªadÊow
->
tf_f£
[
fd
]Ë=
NULL
) {

2122 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2124 
Êow›
->
fo_«me
, 
fd
);

2125  (
FILEBENCH_ERROR
);

2129 
fûe£t
 = 
fûe
->
f£_fûe£t
;

2132 
fûe
 = 
NULL
;

2133 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

2136 i‡(
fûe£t
 =
NULL
) {

2137 
	`fûebích_log
(
LOG_ERROR
,

2139  (
FILEBENCH_ERROR
);

2143 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

2144 
	`fûebích_log
(
LOG_ERROR
,

2146 
Êow›
->
fo_«me
);

2147  (
FILEBENCH_ERROR
);

2150 i‡(
fûe
 =
NULL
) {

2151 
∑th
[
MAXPATHLEN
];

2152 *
∑thtmp
;

2153 
îr
;

2156 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

2157 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

2158 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2160 
Êow›
->
fo_«me
);

2161  (
îr
);

2165 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

2166 
MAXPATHLEN
);

2167 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

2168 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

2169 
MAXPATHLEN
);

2170 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

2171 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

2172 
	`‰ì
(
∑thtmp
);

2175 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2176 i‡(
	`FB_STAT
(
∑th
, &
°©buf
) == -1)

2177 
	`fûebích_log
(
LOG_ERROR
,

2178 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2179 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2181 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

2184 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2185 i‡(
	`FB_FSTAT
(&
thªadÊow
->
tf_fd
[
fd
], &
°©buf
) == -1)

2186 
	`fûebích_log
(
LOG_ERROR
,

2187 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2188 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2192  (
FILEBENCH_OK
);

2193 
	}
}

2215 
	$Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2217 
ˇddr_t
 
iobuf
;

2218 
off64_t
 
byãs
 = 0;

2219 
fb_fdesc_t
 *
fdesc
;

2220 
uöt64_t
 
wss
;

2221 
fböt_t
 
iosize
;

2222 
ªt
;

2223 
zî‹dbuf
;

2226 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2227 &
fdesc
)Ë!
FILEBENCH_OK
)

2228  (
ªt
);

2231 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2232 
iosize
 = 
wss
;

2239 i‡(
iosize
 == 0) {

2240 
iobuf
 = (
ˇddr_t
)&
zî‹dbuf
;

2241 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2242 "Êow› %†ªad zîÿÀngth fûe", 
Êow›
->
fo_«me
);

2244 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2245 
iosize
) != 0)

2246  (
FILEBENCH_ERROR
);

2250 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2251 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

2252 (
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) > 0)

2253 
byãs
 +
ªt
;

2255 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2257 i‡(
ªt
 < 0) {

2258 
	`fûebích_log
(
LOG_ERROR
,

2260 
	`°ªº‹
(
î∫o
));

2261  (
FILEBENCH_ERROR
);

2264  (
FILEBENCH_OK
);

2265 
	}
}

2283 
	$Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2285 
ˇddr_t
 
iobuf
;

2286 
fböt_t
 
wss
;

2287 
fböt_t
 
iosize
;

2288 
fb_fdesc_t
 *
fdesc
;

2289 
ªt
;

2291 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2292 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2293 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2294  (
ªt
);

2296 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

2297 
uöt64_t
 
fûeoff£t
;

2299 i‡(
wss
 < 
iosize
) {

2300 
	`fûebích_log
(
LOG_ERROR
,

2302 
Êow›
->
fo_«me
);

2303  (
FILEBENCH_ERROR
);

2307 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

2309 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2310 i‡(
	`FB_PWRITE
(
fdesc
, 
iobuf
,

2311 
iosize
, (
off64_t
)
fûeoff£t
) == -1) {

2312 
	`fûebích_log
(
LOG_ERROR
, "write failed, "

2314 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

2315 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2316  (
FILEBENCH_ERROR
);

2318 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2320 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2321 i‡(
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) == -1) {

2322 
	`fûebích_log
(
LOG_ERROR
,

2324 
iobuf
, 
	`°ªº‹
(
î∫o
));

2325 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2326  (
FILEBENCH_ERROR
);

2328 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2331  (
FILEBENCH_OK
);

2332 
	}
}

2343 
	$Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2345 
ˇddr_t
 
iobuf
;

2346 
fûe£ã¡ry_t
 *
fûe
;

2347 
wsize
;

2348 
off64_t
 
£ek
;

2349 
off64_t
 
byãs
 = 0;

2350 
uöt64_t
 
wss
;

2351 
fböt_t
 
iosize
;

2352 
fb_fdesc_t
 *
fdesc
;

2353 
§cfd
 = 
Êow›
->
fo_§cfdnumbî
;

2354 
ªt
;

2355 
zîowπbuf
;

2358 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2359 &
fdesc
)Ë!
FILEBENCH_OK
)

2360  (
ªt
);

2363 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2364 
iosize
 = 
wss
;

2371 i‡(
iosize
 == 0) {

2372 
iobuf
 = (
ˇddr_t
)&
zîowπbuf
;

2373 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2374 "Êow› %†wrŸêzîÿÀngth fûe", 
Êow›
->
fo_«me
);

2376 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2377 
iosize
) != 0)

2378  (
FILEBENCH_ERROR
);

2381 
fûe
 = 
thªadÊow
->
tf_f£
[
§cfd
];

2382 i‡((
§cfd
 !0Ë&& (
fûe
 =
NULL
)) {

2383 
	`fûebích_log
(
LOG_ERROR
, "flowop %s: NULL src file",

2384 
Êow›
->
fo_«me
);

2385  (
FILEBENCH_ERROR
);

2388 i‡(
fûe
)

2389 
wss
 = 
fûe
->
f£_size
;

2391 
wsize
 = ()
	`MIN
(
wss
, 
iosize
);

2394 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2395 
£ek
 = 0; sìk < 
wss
; sìk +
wsize
) {

2396 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
wsize
);

2397 i‡(
ªt
 !
wsize
) {

2398 
	`fûebích_log
(
LOG_ERROR
,

2400 
wsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2401 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2402  (
FILEBENCH_ERROR
);

2404 
wsize
 = ()
	`MIN
(
wss
 - 
£ek
, 
iosize
);

2405 
byãs
 +
ªt
;

2407 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2409  (
FILEBENCH_OK
);

2410 
	}
}

2430 
	$Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2432 
ˇddr_t
 
iobuf
;

2433 
fb_fdesc_t
 *
fdesc
;

2434 
fböt_t
 
wss
;

2435 
fböt_t
 
iosize
;

2436 
ªt
;

2438 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2439 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2440 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2441  (
ªt
);

2446 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2447 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2448 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
);

2449 i‡(
ªt
 !
iosize
) {

2450 
	`fûebích_log
(
LOG_ERROR
,

2452 (
u_l⁄gl⁄g_t
)
iosize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2453 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2454  (
FILEBENCH_ERROR
);

2456 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2458  (
FILEBENCH_OK
);

2459 
	}
}

2478 
	$Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2480 
ˇddr_t
 
iobuf
;

2481 
uöt64_t
 
≠≥ndsize
;

2482 
fb_fdesc_t
 *
fdesc
;

2483 
fböt_t
 
wss
;

2484 
fböt_t
 
iosize
;

2485 
ªt
 = 0;

2487 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0) {

2488 
	`fûebích_log
(
LOG_ERROR
, "zero iosize for flowop %s",

2489 
Êow›
->
fo_«me
);

2490  (
FILEBENCH_ERROR
);

2493 
	`fb_øndom64
(&
≠≥ndsize
, 
iosize
, 1LL, 
NULL
);

2496 i‡(
≠≥ndsize
 == 0) {

2497 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2498 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0LL);

2499  (
FILEBENCH_OK
);

2502 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2503 &
fdesc
, 
≠≥ndsize
)Ë!
FILEBENCH_OK
)

2504  (
ªt
);

2509 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2511 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2512 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
≠≥ndsize
);

2513 i‡(
ªt
 !
≠≥ndsize
) {

2514 
	`fûebích_log
(
LOG_ERROR
,

2516 (
u_l⁄gl⁄g_t
)
≠≥ndsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2517 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2518  (
FILEBENCH_ERROR
);

2521 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
≠≥ndsize
);

2523  (
FILEBENCH_OK
);

2524 
	}
}

2526 
	sã°øndv¨_¥iv
 {

2527 
uöt64_t
 
	mßm∂e_cou¡
;

2528 
	mvÆ_sum
;

2529 
	msqr_sum
;

2530 } 
	tã°øndv¨_¥iv_t
;

2540 
	$Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2542 
ã°øndv¨_¥iv_t
 *
my°©s
;

2543 
vÆue
;

2545 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2546 
	`fûebích_log
(
LOG_ERROR
, "testrandvarÇot initialized\n");

2547 
	`fûebích_shutdown
(1);

2551 
vÆue
 = 
	`avd_gë_dbl
(
Êow›
->
fo_vÆue
);

2553 
my°©s
->
ßm∂e_cou¡
++;

2554 
my°©s
->
vÆ_sum
 +
vÆue
;

2555 
my°©s
->
sqr_sum
 +(
vÆue
 * value);

2558 
	}
}

2564 
	$Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
)

2566 
ã°øndv¨_¥iv_t
 *
my°©s
;

2568 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2569 
	`mÆloc
( (
ã°øndv¨_¥iv_t
))Ë=
NULL
) {

2570 
	`fûebích_log
(
LOG_ERROR
, "couldÇot initializeÅestrandvar");

2571 
	`fûebích_shutdown
(1);

2575 
my°©s
->
ßm∂e_cou¡
 = 0;

2576 
my°©s
->
vÆ_sum
 = 0;

2577 
my°©s
->
sqr_sum
 = 0;

2578 
Êow›
->
fo_¥iv©e
 = (*)
my°©s
;

2580 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2582 
	}
}

2588 
	$Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
)

2590 
ã°øndv¨_¥iv_t
 *
my°©s
;

2591 
món
, 
°d_dev
, 
dbl_cou¡
;

2593 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

2594 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2595 
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2596 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2600 
Êow›
->
fo_¥iv©e
 = 
NULL
;

2601 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2603 
dbl_cou¡
 = ()
my°©s
->
ßm∂e_cou¡
;

2604 
món
 = 
my°©s
->
vÆ_sum
 / 
dbl_cou¡
;

2605 
°d_dev
 = 
	`sqπ
((
my°©s
->
sqr_sum
 / 
dbl_cou¡
Ë- (
món
 * mean)) / mean;

2607 
	`fûebích_log
(
LOG_VERBOSE
,

2609 (
u_l⁄gl⁄g_t
)
my°©s
->
ßm∂e_cou¡
, 
món
, 
°d_dev
);

2610 
	`‰ì
(
my°©s
);

2611 
	}
}

2617 
	$Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2619 
¥ocÊow_t
 *
¥ocÊow
;

2621 
¥ocÊow
 = 
thªadÊow
->
tf_¥o˚ss
;

2622 
	`fûebích_log
(
LOG_INFO
,

2624 
¥ocÊow
->
pf_«me
,ÖrocÊow->
pf_ö°™˚
,

2625 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
,

2626 
	`avd_gë_°r
(
Êow›
->
fo_vÆue
));

2628  (
FILEBENCH_OK
);

2629 
	}
}

	@fsplug.h

28 #i‚de‡
_FB_FSPLUG_H


29 
	#_FB_FSPLUG_H


	)

31 
	~"fûebích.h
"

36 
	efb_∂ugö_ty≥
 {

37 
	mLOCAL_FS_PLUG
 = 0,

38 
	mNFS3_PLUG
,

39 
	mNFS4_PLUG
,

40 
	mCIFS_PLUG


41 } 
	tfb_∂ugö_ty≥_t
;

44 
	ufb_fdesc
 {

45 
	mfd_num
;

46 *
	mfd_±r
;

47 } 
	tfb_fdesc_t
;

49 
aiﬁi°
 
	taiﬁ_t
;

52 
	sf•lug_func_s
 {

53 
	mfs_«me
[16];

54 (*
	mf•_‰ìmem
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

55 (*
	mf•_›í
)(
	mfb_fdesc_t
 *, *, , );

56 (*
	mf•_¥ód
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

57 (*
	mf•_ªad
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

58 (*
	mf•_pwrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

59 (*
	mf•_wrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

60 (*
	mf•_l£ek
)(
	mfb_fdesc_t
 *, 
	moff64_t
, );

61 (*
	mf•_·runc
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

62 (*
	mf•_ª«me
)(const *, const *);

63 (*
	mf•_˛o£
)(
	mfb_fdesc_t
 *);

64 (*
	mf•_lök
)(const *, const *);

65 (*
	mf•_symlök
)(const *, const *);

66 (*
	mf•_u∆ök
)(*);

67 
ssize_t
 (*
f•_ªadlök
)(c⁄° *, *, 
	msize_t
);

68 (*
	mf•_mkdú
)(*, );

69 (*
	mf•_rmdú
)(*);

70 
	mDIR
 *(*
	mf•_›ídú
)(*);

71 
	mdúít
 *(*
	mf•_ªaddú
)(
	mDIR
 *);

72 (*
	mf•_˛o£dú
)(
	mDIR
 *);

73 (*
	mf•_fsync
)(
	mfb_fdesc_t
 *);

74 (*
	mf•_°©
)(*, 
	m°©64
 *);

75 (*
	mf•_f°©
)(
	mfb_fdesc_t
 *, 
	m°©64
 *);

76 (*
	mf•_ac˚ss
)(const *, );

77 (*
	mf•_ªcur_rm
)(*);

78 } 
	tf•lug_func_t
;

80 
f•lug_func_t
 *
fs_fun˘i⁄s_vec
;

83 
	#FB_FREEMEM
(
fd
, 
sz
) \

84 (*
fs_fun˘i⁄s_vec
->
f•_‰ìmem
)(
fd
, 
sz
)

	)

86 
	#FB_OPEN
(
fd
, 
∑th
, 
Êags
, 
≥rms
) \

87 (*
fs_fun˘i⁄s_vec
->
f•_›í
)(
fd
, 
∑th
, 
Êags
, 
≥rms
)

	)

89 
	#FB_PREAD
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

90 (*
fs_fun˘i⁄s_vec
->
f•_¥ód
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

92 
	#FB_READ
(
fdesc
, 
iobuf
, 
iosize
) \

93 (*
fs_fun˘i⁄s_vec
->
f•_ªad
)(
fdesc
, 
iobuf
, 
iosize
)

	)

95 
	#FB_PWRITE
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

96 (*
fs_fun˘i⁄s_vec
->
f•_pwrôe
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

98 
	#FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) \

99 (*
fs_fun˘i⁄s_vec
->
f•_wrôe
)(
fdesc
, 
iobuf
, 
iosize
)

	)

101 
	#FB_LSEEK
(
fdesc
, 
am¡
, 
whí˚
) \

102 (*
fs_fun˘i⁄s_vec
->
f•_l£ek
)(
fdesc
, 
am¡
, 
whí˚
)

	)

104 
	#FB_CLOSE
(
fdesc
) \

105 (*
fs_fun˘i⁄s_vec
->
f•_˛o£
)(
fdesc
)

	)

107 
	#FB_UNLINK
(
∑th
) \

108 (*
fs_fun˘i⁄s_vec
->
f•_u∆ök
)(
∑th
)

	)

110 
	#FB_MKDIR
(
∑th
, 
≥rm
) \

111 (*
fs_fun˘i⁄s_vec
->
f•_mkdú
)(
∑th
, 
≥rm
)

	)

113 
	#FB_RMDIR
(
∑th
) \

114 (*
fs_fun˘i⁄s_vec
->
f•_rmdú
)(
∑th
)

	)

116 
	#FB_OPENDIR
(
∑th
) \

117 (*
fs_fun˘i⁄s_vec
->
f•_›ídú
)(
∑th
)

	)

119 
	#FB_READDIR
(
dú
) \

120 (*
fs_fun˘i⁄s_vec
->
f•_ªaddú
)(
dú
)

	)

122 
	#FB_CLOSEDIR
(
dú
) \

123 (*
fs_fun˘i⁄s_vec
->
f•_˛o£dú
)(
dú
)

	)

125 
	#FB_FSYNC
(
fdesc
) \

126 (*
fs_fun˘i⁄s_vec
->
f•_fsync
)(
fdesc
)

	)

128 
	#FB_RECUR_RM
(
∑th
) \

129 (*
fs_fun˘i⁄s_vec
->
f•_ªcur_rm
)(
∑th
)

	)

131 
	#FB_STAT
(
∑th
, 
°©p
) \

132 (*
fs_fun˘i⁄s_vec
->
f•_°©
)(
∑th
, 
°©p
)

	)

134 
	#FB_FSTAT
(
fdesc
, 
°©p
) \

135 (*
fs_fun˘i⁄s_vec
->
f•_f°©
)(
fdesc
, 
°©p
)

	)

137 
	#FB_FTRUNC
(
fdesc
, 
size
) \

138 (*
fs_fun˘i⁄s_vec
->
f•_·runc
)(
fdesc
, 
size
)

	)

140 
	#FB_LINK
(
exi°ög
, 
√w
) \

141 (*
fs_fun˘i⁄s_vec
->
f•_lök
)(
exi°ög
, 
√w
)

	)

143 
	#FB_SYMLINK
(
«me1
, 
«me2
) \

144 (*
fs_fun˘i⁄s_vec
->
f•_symlök
)(
«me1
, 
«me2
)

	)

	@gamma_dist.c

26 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

28 
	~<°dlib.h
>

29 
	~<m©h.h
>

37 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

38 *
xi
)

40 
p
, 
U
, 
V
, 
X
, 
q
;

42 
p
 = 
M_E
/(
a
 + M_E);

43 
G2
:

45 
U
 = (*
§c
)(
xi
);

49 
V
 = (*
§c
)(
xi
);

51 } 
V
 == 0);

53 i‡(
U
 < 
p
) {

54 
X
 = 
	`pow
(
V
, 1/
a
);

56 
q
 = 
	`exp
(-
X
);

58 
X
 = 1 - 
	`log
(
V
);

59 
q
 = 
	`pow
(
X
, 
a
-1);

67 
U
 = (*
§c
)(
xi
);

69 i‡(
U
 >
q
)

70 
G2
;

71  (
X
);

72 
	}
}

80 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

81 *
xi
)

83 
U
, 
Y
, 
X
, 
V
;

85 
A1
:

87 
U
 = (*
§c
)(
xi
);

89 
Y
 = 
	`èn
(
M_PI
*
U
);

90 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

92 i‡(
X
 <= 0)

93 
A1
;

96 
V
 = (*
§c
)(
xi
);

98 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

99 
A1
;

101  (
X
);

102 
	}
}

109 
	$deÁu…_§c
(*
xi
)

111  (
	`dønd48
());

112 
	}
}

120 
	$gamma_di°_knuth
(
a
, 
b
)

122 i‡(
a
 <= 1.0)

123  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

125  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

126 
	}
}

135 
	$gamma_di°_knuth_§c
(
a
, 
b
,

136 (*
§c
)(*), *
xi
)

138 i‡(
a
 <= 1.0)

139  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

141  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

142 
	}
}

	@gamma_dist.h

26 #i‚def 
_FB_GAMMA_DIST_H


27 
	#_FB_GAMMA_DIST_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
gamma_di°_knuth
(
a
, 
b
);

34 
gamma_di°_knuth_§c
(
a
, 
b
,

35 (*
§c
)(*), *
xi
);

	@ioprio.c

1 
	~"fûebích.h
"

2 
	~"i›rio.h
"

4 #ifde‡
HAVE_IOPRIO


6 
ölöe
 
	$i›rio_£t
(
which
, 
who
, 
i›rio
)

8  
	`sysˇŒ
(
__NR_i›rio_£t
, 
which
, 
who
, 
i›rio
);

9 
	}
}

11 
ölöe
 
	$i›rio_gë
(
which
, 
who
)

13  
	`sysˇŒ
(
__NR_i›rio_gë
, 
which
, 
who
);

14 
	}
}

17 
	mIOPRIO_CLASS_NONE
,

18 
	mIOPRIO_CLASS_RT
,

19 
	mIOPRIO_CLASS_BE
,

20 
	mIOPRIO_CLASS_IDLE
,

24 
	mIOPRIO_WHO_PROCESS
 = 1,

25 
	mIOPRIO_WHO_PGRP
,

26 
	mIOPRIO_WHO_USER
,

29 
	#IOPRIO_CLASS_SHIFT
 13

	)

31 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

33 
ªt
;

34 
i›rio
 = 
	`avd_gë_öt
(
tf
->
tf_i›rio
);

36 i‡(
i›rio
 > 7)

39 
ªt
 = 
	`i›rio_£t
(
IOPRIO_WHO_PROCESS
, 0,

40 
i›rio
 | 
IOPRIO_CLASS_BE
 << 
IOPRIO_CLASS_SHIFT
);

41 i‡(
ªt
) {

42 
	`fûebích_log
(
LOG_ERROR
, "set_thread_ioprio:Érror while setting ioprio!");

46 
i›rio
 = 
	`i›rio_gë
(
IOPRIO_WHO_PROCESS
, 0);

47 
i›rio
 = ioprio & 0xff;

48 
	`fûebích_log
(
LOG_INFO
, "ioprio setÅo %d forÅhread %s",

49 
i›rio
, 
tf
->
tf_«me
);

50 
	}
}

	@ioprio.h

1 #i‚de‡
_FB_IOPRIO_H


2 
	#_FB_IOPRIO_H


	)

4 #ifde‡
HAVE_IOPRIO


5 
	~<asm/uni°d.h
>

6 
£t_thªad_i›rio
(
thªadÊow_t
 *);

8 
ölöe
 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

11 
	}
}

	@ipc.c

28 
	~"c⁄fig.h
"

30 
	~<°dio.h
>

31 
	~<f˙é.h
>

32 
	~<sys/mm™.h
>

33 
	~<sys/ùc.h
>

34 
	~<sys/£m.h
>

35 
	~<sys/î∫o.h
>

36 
	~<sig«l.h
>

37 
	~<±hªad.h
>

38 
	~<sys/shm.h
>

39 
	~"fûebích.h
"

40 
	~"fb_cv¨.h
"

42 
fûebích_shm_t
 *
	gfûebích_shm
 = 
NULL
;

43 
	gshm∑th
[128] = "/tmp/filebench-shm-XXXXXX";

59 
	$ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
)

61 
îr‹
;

63 
îr‹
 = 
	`±hªad_muãx_lock
(
muãx
);

65 #ifde‡
HAVE_ROBUST_MUTEX


66 i‡(
îr‹
 =
EOWNERDEAD
) {

67 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

68 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

69 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

76 i‡(
îr‹
 != 0) {

77 
	`fûebích_log
(
LOG_FATAL
, "mutexÜock failed: %s",

78 
	`°ªº‹
(
îr‹
));

81  (
îr‹
);

82 
	}
}

88 
	$ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
)

90 
îr‹
;

92 
îr‹
 = 
	`±hªad_muãx_u∆ock
(
muãx
);

94 #ifde‡
HAVE_ROBUST_MUTEX


95 i‡(
îr‹
 =
EOWNERDEAD
) {

96 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

97 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

98 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

105 i‡(
îr‹
 != 0) {

106 
	`fûebích_log
(
LOG_FATAL
, "mutex unlock failed: %s",

107 
	`°ªº‹
(
îr‹
));

110  (
îr‹
);

111 
	}
}

117 
	$ùc_muãx©å_öô
(
mtx_ty≥
)

119 
±hªad_muãx©å_t
 *
mtx_©åp
;

121 
mtx_©åp
 = &(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]);

123 (Ë
	`±hªad_muãx©å_öô
(
mtx_©åp
);

125 #ifde‡
HAVE_PROCSCOPE_PTHREADS


126 i‡(
	`±hªad_muãx©å_£çsh¨ed
(
mtx_©åp
,

127 
PTHREAD_PROCESS_SHARED
) != 0) {

128 
	`fûebích_log
(
LOG_ERROR
, "cannot set mutexáttr "

132 #ifde‡
HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL


133 i‡(
mtx_ty≥
 & 
IPC_MUTEX_PRIORITY
) {

134 i‡(
	`±hªad_muãx©å_£çrŸocﬁ
(
mtx_©åp
,

135 
PTHREAD_PRIO_INHERIT
) != 0) {

136 
	`fûebích_log
(
LOG_ERROR
,

144 #ifde‡
HAVE_ROBUST_MUTEX


145 i‡(
mtx_ty≥
 & 
IPC_MUTEX_ROBUST
) {

146 i‡(
	`±hªad_muãx©å_£åobu°_≈
(
mtx_©åp
,

147 
PTHREAD_MUTEX_ROBUST_NP
) != 0) {

148 
	`fûebích_log
(
LOG_ERROR
,

151 
	`fûebích_shutdown
(1);

153 i‡(
	`±hªad_muãx©å_£ây≥
(
mtx_©åp
,

154 
PTHREAD_MUTEX_ERRORCHECK
) != 0) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	`fûebích_shutdown
(1);

163 
	}
}

170 
±hªad_muãx©å_t
 *

171 
	$ùc_muãx©å
(
mtx_ty≥
)

173 i‡((
mtx_ty≥
 >
IPC_NUM_MUTEX_ATTRS
) ||

174 (
mtx_ty≥
 < 
IPC_MUTEX_NORMAL
)) {

175 
	`fûebích_log
(
LOG_ERROR
,

177 
mtx_ty≥
);

178  (&(
fûebích_shm
->
shm_muãx©å
[
IPC_MUTEX_NORMAL
]));

181  (&(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]));

182 
	}
}

184 
±hªad_c⁄d©å_t
 *
	gc⁄d©å
 = 
NULL
;

191 
±hªad_c⁄d©å_t
 *

192 
	$ùc_c⁄d©å
()

194 i‡(
c⁄d©å
 =
NULL
) {

195 i‡((
c⁄d©å
 = 
	`mÆloc
( (
±hªad_c⁄d©å_t
))Ë=
NULL
) {

196 
	`fûebích_log
(
LOG_ERROR
, "cannotálloc condáttr");

197 
	`fûebích_shutdown
(1);

199 (Ë
	`±hªad_c⁄d©å_öô
(
c⁄d©å
);

200 #ifde‡
HAVE_PROCSCOPE_PTHREADS


201 i‡(
	`±hªad_c⁄d©å_£çsh¨ed
(
c⁄d©å
,

202 
PTHREAD_PROCESS_SHARED
) != 0) {

203 
	`fûebích_log
(
LOG_ERROR
,

209  (
c⁄d©å
);

210 
	}
}

212 
±hªad_rwlock©å_t
 *
	grwlock©å
 = 
NULL
;

219 
±hªad_rwlock©å_t
 *

220 
	$ùc_rwlock©å
()

222 i‡(
rwlock©å
 =
NULL
) {

223 i‡((
rwlock©å
 =

224 
	`mÆloc
( (
±hªad_rwlock©å_t
))Ë=
NULL
) {

225 
	`fûebích_log
(
LOG_ERROR
, "cannotállocÑwlockáttr");

226 
	`fûebích_shutdown
(1);

228 (Ë
	`±hªad_rwlock©å_öô
(
rwlock©å
);

229 #ifde‡
HAVE_PROCSCOPE_PTHREADS


230 i‡(
	`±hªad_rwlock©å_£çsh¨ed
(
rwlock©å
,

231 
PTHREAD_PROCESS_SHARED
) != 0) {

232 
	`fûebích_log
(
LOG_ERROR
,

238  (
rwlock©å
);

239 
	}
}

245 
	$ùc_£möô
()

247 
key_t
 
key
 = 
fûebích_shm
->
shm_£mkey
;

248 
sys_£mid
;

251 i‡(
fûebích_shm
->
shm_sys_£mid
 >= 0)

254 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 
FILEBENCH_NSEMS
, 
IPC_CREAT
 |

255 
S_IRUSR
 | 
S_IWUSR
)) == -1) {

256 
	`fûebích_log
(
LOG_ERROR
,

259 
	`°ªº‹
(
î∫o
));

260 
	`fûebích_shutdown
(1);

263 
fûebích_shm
->
shm_sys_£mid
 = 
sys_£mid
;

264 
	}
}

277 
	$ùc_öô
()

279 
shmfd
;

280 
tmpbuf
[
MB
];

281 
key_t
 
key
;

282 #ifde‡
HAVE_SEM_RMID


283 
sys_£mid
;

286 
shmfd
 = 
	`mk°emp
(
shm∑th
);

287 i‡(
shmfd
 < 0) {

288 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot create shared memory "

289 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

290 
	`exô
(1);

293 ()
	`l£ek
(
shmfd
, (
fûebích_shm_t
), 
SEEK_SET
);

294 i‡(
	`wrôe
(
shmfd
, 
tmpbuf
, 
MB
) != MB) {

295 
	`fûebích_log
(
LOG_FATAL
,

297 "fûe: %s", 
	`°ªº‹
(
î∫o
));

298 
	`exô
(1);

301 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
NULL
,

302 (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

303 
MAP_SHARED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

304 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

305 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

306 
	`exô
(1);

309 (Ë
	`mem£t
(
fûebích_shm
, 0,

310 (*)&
fûebích_shm
->
shm_m¨kî
 - (*)filebench_shm);

316 
fûebích_shm
->
shm_ïoch
 = 
	`gëhπime
();

317 
fûebích_shm
->
shm_debug_Àvñ
 = 
LOG_INFO
;

320 
	`ùc_muãx©å_öô
(
IPC_MUTEX_NORMAL
);

321 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRIORITY
);

322 
	`ùc_muãx©å_öô
(
IPC_MUTEX_ROBUST
);

323 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRI_ROB
);

325 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_msg_lock
,

326 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

328 
	`fûebích_log
(
LOG_INFO
, "Allocated %lldMB of shared memory",

329 ((
fûebích_shm_t
Ë+ 
MB
) / MB);

331 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

332 
fûebích_shm
->
shm_°rög_±r
 = &fûebích_shm->
shm_°rögs
[0];

333 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

334 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

336 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_fûe£t_lock
,

337 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

338 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocÊow_lock
,

339 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

340 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
,

341 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

342 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_thªadÊow_lock
,

343 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

344 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_Êow›_lock
,

345 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

346 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_evítgí_lock
,

347 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

348 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_mÆloc_lock
,

349 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

350 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_ism_lock
,

351 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

352 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

353 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_evítgí_cv
,

354 
	`ùc_c⁄d©å
());

355 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_Êow›_föd_lock
,

356 
	`ùc_rwlock©å
());

357 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_run_lock
,

358 
	`ùc_rwlock©å
());

361 i‡((
key
 = 
	`·ok
(
shm∑th
, 1)) < 0) {

362 
	`fûebích_log
(
LOG_ERROR
, "cannot create sem: %s",

363 
	`°ªº‹
(
î∫o
));

364 
	`exô
(1);

367 #ifde‡
HAVE_SEM_RMID


368 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 0, 0)) != -1)

369 (Ë
	`£m˘l
(
sys_£mid
, 0, 
IPC_RMID
);

372 
fûebích_shm
->
shm_£mkey
 = 
key
;

373 
fûebích_shm
->
shm_sys_£mid
 = -1;

374 
fûebích_shm
->
shm_dump_fd
 = -1;

375 
fûebích_shm
->
shm_evítgí_hz
 = 0;

376 
fûebích_shm
->
shm_id
 = -1;

378 
fûebích_shm
->
shm_fûesys_ty≥
 = 
LOCAL_FS_PLUG
;

379 
	}
}

382 
	$ùc_föi
()

384 #ifde‡
HAVE_SEM_RMID


385 i‡(
fûebích_shm
->
shm_sys_£mid
 != -1) {

386 (Ë
	`£m˘l
(
fûebích_shm
->
shm_sys_£mid
, 0, 
IPC_RMID
);

387 
fûebích_shm
->
shm_sys_£mid
 = -1;

391 (Ë
	`u∆ök
(
shm∑th
);

392 
	}
}

401 
	$ùc_©èch
(*
shmaddr
, *
shm∑th
)

403 
shmfd
;

405 i‡((
shmfd
 = 
	`›í
(
shm∑th
, 
O_RDWR
)) < 0) {

406 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot open shared memory "

407 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

411 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
shmaddr
,

412  (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

413 
MAP_SHARED
 | 
MAP_FIXED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

414 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

415 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

419 i‡(
fûebích_shm
 !
shmaddr
) {

420 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

422 
	`°ªº‹
(
î∫o
));

427 
	}
}

433 
	$¥óŒoˇãd_íåõs
(
obj_ty≥
)

435 
íåõs
;

437 
obj_ty≥
) {

438 
FILEBENCH_FILESET
:

439 
íåõs
 = (
fûebích_shm
->
shm_fûe£t
)

440 / (
fûe£t_t
);

442 
FILEBENCH_FILESETENTRY
:

443 
íåõs
 = (
fûebích_shm
->
shm_fûe£ã¡ry
)

444 / (
fûe£ã¡ry_t
);

446 
FILEBENCH_PROCFLOW
:

447 
íåõs
 = (
fûebích_shm
->
shm_¥ocÊow
)

448 / (
¥ocÊow_t
);

450 
FILEBENCH_THREADFLOW
:

451 
íåõs
 = (
fûebích_shm
->
shm_thªadÊow
)

452 / (
thªadÊow_t
);

454 
FILEBENCH_FLOWOP
:

455 
íåõs
 = (
fûebích_shm
->
shm_Êow›
)

456 / (
Êow›_t
);

458 
FILEBENCH_VARIABLE
:

459 
íåõs
 = (
fûebích_shm
->
shm_v¨
)

460 / (
v¨_t
);

462 
FILEBENCH_AVD
:

463 
íåõs
 = (
fûebích_shm
->
shm_avd_±rs
)

464 / (
avd_t
);

466 
FILEBENCH_RANDDIST
:

467 
íåõs
 = (
fûebích_shm
->
shm_ønddi°
)

468 / (
ønddi°_t
);

470 
FILEBENCH_CVAR
:

471 
íåõs
 = (
fûebích_shm
->
shm_cv¨
)

472 / (
cv¨_t
);

474 
FILEBENCH_CVAR_LIB_INFO
:

475 
íåõs
 = (
fûebích_shm
->
shm_cv¨_lib_öfo
)

476 / (
cv¨_libøry_öfo_t
);

479 
íåõs
 = -1;

480 
	`fûebích_log
(
LOG_ERROR
, "preallocated_entries: "

482 
	`fûebích_shutdown
(1);

486  
íåõs
;

487 
	}
}

499 
	$ùc_mÆloc
(
obj_ty≥
)

501 
°¨t_idx
;

502 
max_idx
;

503 
i
;

505 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

507 
°¨t_idx
 = 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
];

508 
max_idx
 = 
	`¥óŒoˇãd_íåõs
(
obj_ty≥
) - 1;

510 
i
 = 
°¨t_idx
;

512 
i
++;

513 i‡(
i
 > 
max_idx
)

514 
i
 = 0;

516 i‡(
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] == 0)

518 } 
i
 !
°¨t_idx
);

520 i‡(
i
 =
°¨t_idx
) {

521 
	`fûebích_log
(
LOG_ERROR
, "Ouào‡sh¨ed mem‹y (%d)!", 
obj_ty≥
);

522 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

523  (
NULL
);

526 
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] = 1;

527 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
] = 
i
;

529 
obj_ty≥
) {

530 
FILEBENCH_FILESET
:

531 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£t
[
i
], 0,

532  (
fûe£t_t
));

533 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

534  ((*)&
fûebích_shm
->
shm_fûe£t
[
i
]);

536 
FILEBENCH_FILESETENTRY
:

537 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
], 0,

538  (
fûe£ã¡ry_t
));

539 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

540  ((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
]);

542 
FILEBENCH_PROCFLOW
:

543 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
], 0,

544  (
¥ocÊow_t
));

545 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

546  ((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
]);

548 
FILEBENCH_THREADFLOW
:

549 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_thªadÊow
[
i
], 0,

550  (
thªadÊow_t
));

551 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

552  ((*)&
fûebích_shm
->
shm_thªadÊow
[
i
]);

554 
FILEBENCH_FLOWOP
:

555 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_Êow›
[
i
], 0,

556  (
Êow›_t
));

557 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

558  ((*)&
fûebích_shm
->
shm_Êow›
[
i
]);

560 
FILEBENCH_VARIABLE
:

561 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_v¨
[
i
], 0,

562  (
v¨_t
));

563 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

564  ((*)&
fûebích_shm
->
shm_v¨
[
i
]);

566 
FILEBENCH_AVD
:

567 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_ty≥
 = 
AVD_INVALID
;

568 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_vÆ
.
v¨±r
 = 
NULL
;

569 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

570  ((*)&
fûebích_shm
->
shm_avd_±rs
[
i
]);

572 
FILEBENCH_RANDDIST
:

573 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_ønddi°
[
i
], 0,

574  (
ønddi°_t
));

575 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

576  ((*)&
fûebích_shm
->
shm_ønddi°
[
i
]);

578 
FILEBENCH_CVAR
:

579 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨
[
i
], 0, (
cv¨_t
));

580 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

581  ((*)&
fûebích_shm
->
shm_cv¨
[
i
]);

583 
FILEBENCH_CVAR_LIB_INFO
:

584 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
], 0,

585 (
cv¨_libøry_öfo_t
));

586 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

587  ((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
]);

590 
	`fûebích_log
(
LOG_ERROR
, "AttemptÅo ipc_malloc unknown objectÅype (%d)!",

591 
obj_ty≥
);

592 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

593  (
NULL
);

594 
	}
}

603 
	$ùc_‰ì
(
ty≥
, *
addr
)

605 
ôem
;

606 
ˇddr_t
 
ba£
 = 0;

607 
size_t
 
off£t
;

608 
size_t
 
size
 = 0;

610 i‡(
addr
 =
NULL
) {

611 
	`fûebích_log
(
LOG_ERROR
, "FªeögÅy≥ %d %zx", 
ty≥
, 
addr
);

615 
ty≥
) {

617 
FILEBENCH_FILESET
:

618 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£t
[0];

619 
size
 =  (
fûe£t_t
);

622 
FILEBENCH_FILESETENTRY
:

623 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£ã¡ry
[0];

624 
size
 =  (
fûe£ã¡ry_t
);

627 
FILEBENCH_PROCFLOW
:

628 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_¥ocÊow
[0];

629 
size
 =  (
¥ocÊow_t
);

632 
FILEBENCH_THREADFLOW
:

633 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_thªadÊow
[0];

634 
size
 =  (
thªadÊow_t
);

637 
FILEBENCH_FLOWOP
:

638 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_Êow›
[0];

639 
size
 =  (
Êow›_t
);

642 
FILEBENCH_VARIABLE
:

643 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_v¨
[0];

644 
size
 =  (
v¨_t
);

647 
FILEBENCH_AVD
:

648 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_avd_±rs
[0];

649 
size
 =  (
avd_t
);

652 
FILEBENCH_RANDDIST
:

653 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_ønddi°
[0];

654 
size
 =  (
ønddi°_t
);

657 
FILEBENCH_CVAR
:

658 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨
[0];

659 
size
 =  (
cv¨_t
);

662 
FILEBENCH_CVAR_LIB_INFO
:

663 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨_lib_öfo
[0];

664 
size
 = (
cv¨_libøry_öfo_t
);

668 
off£t
 = ((
size_t
)
addr
 - (size_t)
ba£
);

669 
ôem
 = 
off£t
 / 
size
;

671 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

672 
fûebích_shm
->
shm_bôm≠
[
ty≥
][
ôem
] = 0;

673 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

674 
	}
}

683 
	$ùc_°øŒoc
(c⁄° *
°rög
)

685 *
Æloc°r
 = 
fûebích_shm
->
shm_°rög_±r
;

687 
fûebích_shm
->
shm_°rög_±r
 +
	`°æí
(
°rög
) + 1;

689 i‡((
fûebích_shm
->
shm_°rög_±r
 - &fûebích_shm->
shm_°rögs
[0]) >

690 
FILEBENCH_STRINGMEMORY
) {

691 
	`fûebích_log
(
LOG_ERROR
, "Out of ipc string memory");

692  (
NULL
);

695 (Ë
	`°∫˝y
(
Æloc°r
, 
°rög
, 
	`°æí
(string));

697  (
Æloc°r
);

698 
	}
}

711 
	$ùc_∑thÆloc
(*
∑th
)

713 *
Ælo˝©h
 = 
fûebích_shm
->
shm_∑th_±r
;

715 
fûebích_shm
->
shm_∑th_±r
 +
	`°æí
(
∑th
) + 1;

717 i‡((
fûebích_shm
->
shm_∑th_±r
 -

718 &
fûebích_shm
->
shm_fûe£ç©hs
[0]) >

719 
FILEBENCH_FILESETPATHMEMORY
) {

720 
	`fûebích_log
(
LOG_ERROR
, "Out of filesetÖath memory");

721  (
NULL
);

724 (Ë
	`°∫˝y
(
Ælo˝©h
, 
∑th
, 
	`°æí
(path));

726  (
Ælo˝©h
);

727 
	}
}

735 
	$ùc_‰ì∑ths
()

737 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

738 
	}
}

745 *
	$ùc_cv¨_hó∑Œoc
(
size_t
 
size
)

747 *
mem‹y
;

749 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

751 i‡((
fûebích_shm
->
shm_cv¨_hópsize
 + 
size
Ë<
FILEBENCH_CVAR_HEAPSIZE
) {

752 
mem‹y
 = 
fûebích_shm
->
shm_cv¨_hóp
 +

753 
fûebích_shm
->
shm_cv¨_hópsize
;

755 
fûebích_shm
->
shm_cv¨_hópsize
 +
size
;

757 
mem‹y
 = 
NULL
;

759 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

761  
mem‹y
;

762 
	}
}

765 
	$ùc_cv¨_hóp‰ì
(*
±r
)

771 
	}
}

781 
	$ùc_£midÆloc
()

783 
£mid
;

785 
£mid
 = 0; 
fûebích_shm
->
shm_£mids
[semid] == 1; semid++)

787 i‡(
£mid
 =
FILEBENCH_NSEMS
) {

788 
	`fûebích_log
(
LOG_ERROR
,

790 
	`fûebích_shutdown
(1);

792 
fûebích_shm
->
shm_£mids
[
£mid
] = 1;

793  (
£mid
);

794 
	}
}

801 
	$ùc_£mid‰ì
(
£mid
)

803 
fûebích_shm
->
shm_£mids
[
£mid
] = 0;

804 
	}
}

816 
	$ùc_ism¸óã
(
size_t
 
size
)

818 #ifde‡
HAVE_SHM_SHARE_MMU


819 
Êag
 = 
SHM_SHARE_MMU
;

821 
Êag
 = 0;

825 i‡(
fûebích_shm
->
shm_id
 != -1)

828 
	`fûebích_log
(
LOG_VERBOSE
,

829 "Cª©ög %zd byã†o‡ISM Sh¨ed Mem‹y...", 
size
);

831 i‡((
fûebích_shm
->
shm_id
 =

832 
	`shmgë
(0, 
size
, 
IPC_CREAT
 | 0666)) == -1) {

833 
	`fûebích_log
(
LOG_ERROR
,

834 "FaûedÅÿ¸óã %zd byã†o‡ISM sh¨ed mem‹y (ªà%d)", 
size
, 
î∫o
);

838 i‡((
fûebích_shm
->
shm_addr
 = (
ˇddr_t
)
	`shm©
(fûebích_shm->
shm_id
,

839 0, 
Êag
)) == (*)-1) {

840 
	`fûebích_log
(
LOG_ERROR
,

842 
size
);

846 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

848 
	`fûebích_log
(
LOG_VERBOSE
,

850 
size
, 
fûebích_shm
->
shm_addr
);

853 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

856 
	}
}

859 
	gism_©èched
 = 0;

868 
	$ùc_ism©èch
()

870 #ifde‡
HAVE_SHM_SHARE_MMU


871 
Êag
 = 
SHM_SHARE_MMU
;

873 
Êag
 = 0;

877 i‡(
ism_©èched
)

881 i‡(
fûebích_shm
->
shm_id
 == 999)

884 i‡(
	`shm©
(
fûebích_shm
->
shm_id
, fûebích_shm->
shm_addr
,

885 
Êag
Ë=
NULL
)

888 
ism_©èched
 = 1;

891 
	}
}

902 
	$ùc_ismmÆloc
(
size_t
 
size
)

904 *
Æloc°r
;

906 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

909 (Ë
	`ùc_ism©èch
();

911 
Æloc°r
 = 
fûebích_shm
->
shm_±r
;

913 
fûebích_shm
->
shm_±r
 +
size
;

914 
fûebích_shm
->
shm_Æloˇãd
 +
size
;

916 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

918  (
Æloc°r
);

919 
	}
}

926 
	$ùc_ismdñëe
()

928 i‡(
fûebích_shm
->
shm_id
 == -1)

931 
	`fûebích_log
(
LOG_VERBOSE
, "Deleting ISM...");

933 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

934 #ifde‡
HAVE_SEM_RMID


935 (Ë
	`shm˘l
(
fûebích_shm
->
shm_id
, 
IPC_RMID
, 0);

937 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

938 
fûebích_shm
->
shm_id
 = -1;

939 
fûebích_shm
->
shm_Æloˇãd
 = 0;

940 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

941 
	}
}

	@ipc.h

26 #i‚de‡
_FB_IPC_H


27 
	#_FB_IPC_H


	)

29 
	~"fûebích.h
"

32 
	#IPC_MUTEX_NORMAL
 0x0

	)

33 
	#IPC_MUTEX_PRIORITY
 0x1

	)

34 
	#IPC_MUTEX_ROBUST
 0x2

	)

35 
	#IPC_MUTEX_PRI_ROB
 0x3

	)

36 
	#IPC_NUM_MUTEX_ATTRS
 4

	)

38 
	#FILEBENCH_NSEMS
 128

	)

40 
	#FILEBENCH_ABORT_ERROR
 1

	)

41 
	#FILEBENCH_ABORT_DONE
 2

	)

42 
	#FILEBENCH_ABORT_RSRC
 3

	)

43 
	#FILEBENCH_ABORT_FINI
 4

	)

46 
	#FILEBENCH_MODE_TIMEOUT
 0x0

	)

47 
	#FILEBENCH_MODE_Q1STDONE
 0x1

	)

48 
	#FILEBENCH_MODE_QALLDONE
 0x2

	)

51 
	#FILEBENCH_MODE_NOUSAGE
 0x01

	)

58 
	#FILEBENCH_FILESET
 0

	)

59 
	#FILEBENCH_FILESETENTRY
 1

	)

60 
	#FILEBENCH_PROCFLOW
 2

	)

61 
	#FILEBENCH_THREADFLOW
 3

	)

62 
	#FILEBENCH_FLOWOP
 4

	)

63 
	#FILEBENCH_VARIABLE
 5

	)

64 
	#FILEBENCH_AVD
 6

	)

65 
	#FILEBENCH_RANDDIST
 7

	)

66 
	#FILEBENCH_CVAR
 8

	)

67 
	#FILEBENCH_CVAR_LIB_INFO
 9

	)

68 
	#FILEBENCH_MAXTYPE
 
FILEBENCH_CVAR_LIB_INFO


	)

76 
	#FILEBENCH_NFILESETS
 (16)

	)

77 
	#FILEBENCH_NFILESETENTRIES
 (1024 * 1024)

	)

78 
	#FILEBENCH_NPROCFLOWS
 (1024)

	)

79 
	#FILEBENCH_NTHREADFLOWS
 (1024)

	)

81 
	#FILEBENCH_NFLOWOPS
 (16 * 1024)

	)

86 
	#FILEBENCH_NVARIABLES
 (1024)

	)

87 
	#FILEBENCH_NAVDS
 (4096)

	)

88 
	#FILEBENCH_NRANDDISTS
 (16)

	)

89 
	#FILEBENCH_NCVARS
 (16)

	)

90 
	#FILEBENCH_NCVAR_LIB_INFO
 (32)

	)

91 
	#FILEBENCH_MAXBITMAP
 
FILEBENCH_NFILESETENTRIES


	)

94 
	#FILEBENCH_FILESETPATHMEMORY
 (
FILEBENCH_NFILESETENTRIES
 * 
FSE_MAXPATHLEN
)

	)

95 
	#FILEBENCH_STRINGMEMORY
 (
FILEBENCH_NVARIABLES
 * 128)

	)

96 
	#FILEBENCH_CVAR_HEAPSIZE
 (
FILEBENCH_NCVARS
 * 4096)

	)

98 
	sfûebích_shm
 {

108 
fûe£t_t
 *
	mshm_fûe£éi°
;

109 
±hªad_muãx_t
 
	mshm_fûe£t_lock
;

110 
¥ocÊow_t
 *
	mshm_¥ocÊowli°
;

111 
±hªad_muãx_t
 
	mshm_¥ocÊow_lock
;

113 
±hªad_muãx_t
 
	mshm_thªadÊow_lock
;

114 
Êow›_t
 *
	mshm_Êow›li°
;

115 
±hªad_muãx_t
 
	mshm_Êow›_lock
;

121 
±hªad_c⁄d_t
 
	mshm_f•¨Æloc_cv
;

122 
	mshm_f•¨Æloc_cou¡
;

123 
±hªad_muãx_t
 
	mshm_f•¨Æloc_lock
;

128 
	mshm_¥ocs_ru¬ög
;

129 
±hªad_muãx_t
 
	mshm_¥ocs_ru¬ög_lock
;

130 
	mshm_f_ab‹t
;

131 
±hªad_rwlock_t
 
	mshm_run_lock
;

132 
Êag_t
 
	mshm_¥ocÊows_deföed_Êag
;

138 
±hªad_rwlock_t
 
	mshm_Êow›_föd_lock
;

145 
v¨_t
 *
	mshm_v¨_li°
;

146 
v¨_t
 *
	mshm_v¨_loc_li°
;

149 
ønddi°_t
 *
	mshm_ønd_li°
;

150 
cv¨_t
 *
	mshm_cv¨_li°
;

151 
cv¨_libøry_öfo_t
 *
	mshm_cv¨_lib_öfo_li°
;

156 
	mshm_debug_Àvñ
;

157 
	mshm_bequõt
;

158 
	mshm_dump_fd
;

159 
	mshm_dump_fûíame
[
MAXPATHLEN
];

164 
	mshm_evítgí_íabÀd
;

165 
avd_t
 
	mshm_evítgí_hz
;

166 
uöt64_t
 
	mshm_evítgí_q
;

167 
±hªad_muãx_t
 
	mshm_evítgí_lock
;

168 
±hªad_c⁄d_t
 
	mshm_evítgí_cv
;

173 
key_t
 
	mshm_£mkey
;

174 
	mshm_sys_£mid
;

175 
	mshm_£mids
[
FILEBENCH_NSEMS
];

180 
	mshm_fs¸ùäame
[1024];

181 
	mshm_id
;

182 
	mshm_rmode
;

183 
	mshm_mmode
;

184 
	mshm_1°_îr
;

185 
±hªad_muãx_t
 
	mshm_msg_lock
;

186 
±hªad_muãx©å_t
 
	mshm_muãx©å
[
IPC_NUM_MUTEX_ATTRS
];

187 *
	mshm_°rög_±r
;

188 *
	mshm_∑th_±r
;

189 
hπime_t
 
	mshm_ïoch
;

190 
hπime_t
 
	mshm_°¨âime
;

191 
	mshm_utid
;

192 
	mœthi°_íabÀd
;

193 
	mshm_cv¨_hópsize
;

198 
±hªad_muãx_t
 
	mshm_ism_lock
;

199 
size_t
 
	mshm_ªquúed
;

200 
size_t
 
	mshm_Æloˇãd
;

201 
ˇddr_t
 
	mshm_addr
;

202 *
	mshm_±r
;

208 
fb_∂ugö_ty≥_t
 
	mshm_fûesys_ty≥
;

216 
	mshm_bôm≠
[
FILEBENCH_MAXTYPE
][
FILEBENCH_MAXBITMAP
];

217 
	mshm_œ°bôm≠ödex
[
FILEBENCH_MAXTYPE
];

218 
±hªad_muãx_t
 
	mshm_mÆloc_lock
;

226 
	mshm_m¨kî
[0];

233 
fûe£t_t
 
	mshm_fûe£t
[
FILEBENCH_NFILESETS
];

234 
fûe£ã¡ry_t
 
	mshm_fûe£ã¡ry
[
FILEBENCH_NFILESETENTRIES
];

235 
¥ocÊow_t
 
	mshm_¥ocÊow
[
FILEBENCH_NPROCFLOWS
];

236 
thªadÊow_t
 
	mshm_thªadÊow
[
FILEBENCH_NTHREADFLOWS
];

237 
Êow›_t
 
	mshm_Êow›
[
FILEBENCH_NFLOWOPS
];

238 
v¨_t
 
	mshm_v¨
[
FILEBENCH_NVARIABLES
];

239 
avd
 
	mshm_avd_±rs
[
FILEBENCH_NAVDS
];

240 
ønddi°_t
 
	mshm_ønddi°
[
FILEBENCH_NRANDDISTS
];

241 
cv¨_t
 
	mshm_cv¨
[
FILEBENCH_NCVARS
];

242 
cv¨_libøry_öfo_t
 
	mshm_cv¨_lib_öfo
[
FILEBENCH_NCVAR_LIB_INFO
];

245 
	mshm_°rögs
[
FILEBENCH_STRINGMEMORY
];

246 
	mshm_fûe£ç©hs
[
FILEBENCH_FILESETPATHMEMORY
];

247 
	mshm_cv¨_hóp
[
FILEBENCH_CVAR_HEAPSIZE
];

249 } 
	tfûebích_shm_t
;

251 
shm∑th
[128];

253 
ùc_öô
();

254 
ùc_©èch
(*
shmaddr
, *
shm∑th
);

256 *
ùc_mÆloc
(
ty≥
);

257 
ùc_‰ì
(
ty≥
, *
addr
);

259 
±hªad_muãx©å_t
 *
ùc_muãx©å
();

260 
±hªad_c⁄d©å_t
 *
ùc_c⁄d©å
();

261 
ùc_£midÆloc
();

262 
ùc_£mid‰ì
(
£mid
);

263 *
ùc_°øŒoc
(c⁄° *
°rög
);

264 *
ùc_∑thÆloc
(*
°rög
);

265 *
ùc_cv¨_hó∑Œoc
(
size_t
 
size
);

266 
ùc_cv¨_hóp‰ì
(*
±r
);

267 
ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
);

268 
ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
);

269 
ùc_£möô
();

270 *
ùc_ismmÆloc
(
size_t
 
size
);

271 
ùc_ism¸óã
(
size_t
 
size
);

272 
ùc_ismdñëe
();

273 
ùc_föi
();

275 
fûebích_shm_t
 *
fûebích_shm
;

	@misc.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

28 
	~<limôs.h
>

29 
	~<time.h
>

30 
	~<libgí.h
>

31 
	~<uni°d.h
>

32 
	~<°rögs.h
>

33 
	~<sys/time.h
>

34 
	~"fûebích.h
"

35 
	~"ùc.h
"

36 
	~"evítgí.h
"

37 
	~"utûs.h
"

38 
	~"f•lug.h
"

39 
	~"fbtime.h
"

42 
f•lug_func_t
 *
	gfs_fun˘i⁄s_vec
;

44 
Àx_löío
;

57 
fûebích_log


58 
__V
((
Àvñ
, c⁄° *
fmt
, ...))

60 
va_li°
 
	g¨gs
;

61 
hπime_t
 
	gnow
 = 0;

62 
	glöe
[131072];

63 
	gbuf
[131072];

68 i‡(!
	gfûebích_shm
)

69 
	gÀvñ
 = 
LOG_FATAL
;

72 i‡(
	gÀvñ
 =
LOG_FATAL
)

73 
Áèl
;

76 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

77 (*
fûebích_shm
->
shm_dump_fûíame
 == 0))

80 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

81 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

83 
fûebích_shm
->
shm_dump_fd
 =

84 
›í
(
fûebích_shm
->
shm_dump_fûíame
,

85 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0666);

88 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

89 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

90 (Ë
¢¥ötf
(
löe
,  (line), "OpenÜogfile failed: %s",

91 
°ªº‹
(
î∫o
));

92 
	gÀvñ
 = 
LOG_ERROR
;

96 i‡((
	gfûebích_shm
->
	gshm_1°_îr
Ë&& (
	gÀvñ
 =
LOG_ERROR
))

99 i‡(
	gÀvñ
 =
LOG_ERROR1
) {

100 i‡(
fûebích_shm
->
shm_1°_îr
)

104 
	gfûebích_shm
->
	gshm_1°_îr
 = 1;

105 
	gÀvñ
 = 
LOG_ERROR
;

109 i‡((
	gÀvñ
 !
LOG_DUMP
) &&

110 (
Àvñ
 > 
fûebích_shm
->
shm_debug_Àvñ
))

113 
	gnow
 = 
gëhπime
();

115 
	gÁèl
:

117 #ifde‡
__STDC__


118 
va_°¨t
(
¨gs
, 
fmt
);

120 *
	gfmt
;

121 
va_°¨t
(
¨gs
);

122 
	gfmt
 = 
va_¨g
(
¨gs
, *);

125 (Ë
v•rötf
(
löe
, 
fmt
, 
¨gs
);

127 
va_íd
(
¨gs
);

129 i‡(
	gÀvñ
 =
LOG_FATAL
) {

130 (Ë
Ârötf
(
°dîr
, "%s\n", 
löe
);

135 (Ë
ùc_muãx_lock
(&
fûebích_shm
->
shm_msg_lock
);

137 i‡(
	gÀvñ
 =
LOG_DUMP
) {

138 i‡(
fûebích_shm
->
shm_dump_fd
 != -1) {

139 (Ë
¢¥ötf
(
buf
,  (buf), "%s\n", 
löe
);

141 i‡(
wrôe
(
fûebích_shm
->
shm_dump_fd
, 
buf
, 
°æí
(buf)));

142 (Ë
fsync
(
fûebích_shm
->
shm_dump_fd
);

143 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

147 } i‡(
	gfûebích_shm
->
	gshm_debug_Àvñ
 > 
	gLOG_INFO
) {

148 i‡(
	gÀvñ
 < 
	gLOG_INFO
)

149 (Ë
Ârötf
(
°dîr
, "%5d: ", ()
my_pid
);

151 (Ë
Ârötf
(
°dout
, "%5d: ", ()
my_pid
);

154 i‡(
	gÀvñ
 < 
	gLOG_INFO
) {

155 (Ë
Ârötf
(
°dîr
, "%4.3f: %s",

156 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

157 
löe
);

159 i‡(
	gmy_¥ocÊow
 =
NULL
)

160 (Ë
Ârötf
(
°dîr
, "ároundÜöê%d", 
Àx_löío
);

162 (Ë
Ârötf
(
°dîr
, "\n");

163 (Ë
fÊush
(
°dîr
);

165 (Ë
Ârötf
(
°dout
, "%4.3f: %s",

166 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

167 
löe
);

168 (Ë
Ârötf
(
°dout
, "\n");

169 (Ë
fÊush
(
°dout
);

172 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

181 
	$fûebích_shutdown
(
îr‹
) {

183 i‡(
îr‹
) {

184 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdow¿⁄Éº‹ %d", 
îr‹
);

185 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

186 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

187 (Ë
	`ùc_muãx_u∆ock
(

188 &
fûebích_shm
->
shm_¥ocÊow_lock
);

191 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_ERROR
;

192 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

194 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdown");

197 
	`¥ocÊow_shutdown
();

199 (Ë
	`u∆ök
("/tmp/filebench_shm");

200 
	`ùc_ismdñëe
();

201 
	`exô
(
îr‹
);

202 
	}
}

	@misc.h

26 #i‚de‡
_FB_MISC_H


27 
	#_FB_MISC_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	#LOG_ERROR
 0

	)

32 
	#LOG_ERROR1
 1

	)

34 
	#LOG_INFO
 2

	)

35 
	#LOG_VERBOSE
 3

	)

36 
	#LOG_DEBUG_SCRIPT
 4

	)

37 
	#LOG_DEBUG_IMPL
 6

	)

38 
	#LOG_DEBUG_NEVER
 10

	)

39 
	#LOG_FATAL
 999

	)

40 
	#LOG_DUMP
 1001

	)

	@multi_client_sync.c

27 
	~"fûebích.h
"

28 
	~"mu…i_˛õ¡_sync.h
"

29 
	~<√tdb.h
>

30 
	~<√töë/ö.h
>

31 
	~<¨∑/öë.h
>

32 
	~<î∫o.h
>

34 
	#MCS_NAMELENGTH
 128

	)

35 
	#MCS_MSGLENGTH
 (
MCS_NAMELENGTH
 * 8)

	)

37 
	gmc_sync_sock_id
;

38 
	gthis_˛õ¡_«me
[
MCS_NAMELENGTH
];

44 
	$mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
my_«me
)

46 
sockaddr_ö
 
˛õ¡_ö
;

47 
sockaddr_ö
 
ma°î_ö
;

48 
ho°ít
 *
ma°î_öfo
;

52 (Ë
	`°∫˝y
(
this_˛õ¡_«me
, 
my_«me
, 
MCS_NAMELENGTH
);

53 i‡((
mc_sync_sock_id
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) == -1) {

54 
	`fûebích_log
(
LOG_ERROR
, "couldÇot createá client socket");

55  (
FILEBENCH_ERROR
);

58 
˛õ¡_ö
.
sö_Ámûy
 = 
AF_INET
;

59 
˛õ¡_ö
.
sö_p‹t
 = 
INADDR_ANY
;

60 
˛õ¡_ö
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

62 i‡(
	`böd
(
mc_sync_sock_id
, (
sockaddr
 *)&
˛õ¡_ö
,

63  (
˛õ¡_ö
)) == -1) {

64 
	`fûebích_log
(
LOG_ERROR
, "couldÇot bindÅo client socket");

65  (
FILEBENCH_ERROR
);

68 
ma°î_öfo
 = 
	`gëho°by«me
(
ma°î_«me
);

78 
ma°î_ö
.
sö_Ámûy
 = 
AF_INET
;

79 
ma°î_ö
.
sö_p‹t
 = 
	`ht⁄s
((
uöt16_t
)
ma°î_p‹t
);

80 (Ë
	`mem˝y
(&
ma°î_ö
.
sö_addr
.
s_addr
, *(
ma°î_öfo
->
h_addr_li°
),

81  (
ma°î_ö
.
sö_addr
.
s_addr
));

83 i‡(
	`c⁄√˘
(
mc_sync_sock_id
, (
sockaddr
 *)&
ma°î_ö
,

84  (
ma°î_ö
)) == -1) {

85 
	`fûebích_log
(
LOG_ERROR
,

86 "c⁄√˘i⁄Ñefu£dÅÿsyn¯ma°î,Éº‹ %d", 
î∫o
);

87  (
FILEBENCH_ERROR
);

90  (
FILEBENCH_OK
);

91 
	}
}

97 
	$mc_sync_synchr⁄ize
(
sync_poöt
)

99 
msg
[
MCS_MSGLENGTH
];

100 
am¡
;

102 (Ë
	`¢¥ötf
(
msg
, 
MCS_MSGLENGTH
,

104 
this_˛õ¡_«me
, 
sync_poöt
);

105 (Ë
	`£nd
(
mc_sync_sock_id
, 
msg
, 
	`°æí
(msg), 0);

107 
am¡
 = 0;

108 
msg
[0] = 0;

110 
	`°rchr
(
msg
, '\n'Ë=
NULL
)

111 
am¡
 +
	`ªcv
(
mc_sync_sock_id
, 
msg
,  (msg), 0);

113 
	`fûebích_log
(
LOG_INFO
, "syn¯poöà%d suc˚eded!\n", 
sync_poöt
);

114  (
FILEBENCH_OK
);

115 
	}
}

	@multi_client_sync.h

26 #i‚def 
_MULTI_CLIENT_SYNC_H


27 
	#_MULTI_CLIENT_SYNC_H


	)

29 
	~<sys/ty≥s.h
>

31 
	~<sys/sockë.h
>

32 
	gXXX
: 
we
 dÿ
nŸ
 
suµ‹t
 
this
 
so
 
Ár


33 
	~<öë/ù.h
>

36 
mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
˛õ¡_«me
);

37 
mc_sync_synchr⁄ize
(
synch_poöt
);

	@parser_gram.c

48 
	#YYBISON
 1

	)

51 
	#YYBISON_VERSION
 "3.5.1"

	)

54 
	#YYSKELETON_NAME
 "yacc.c"

	)

57 
	#YYPURE
 0

	)

60 
	#YYPUSH
 0

	)

63 
	#YYPULL
 1

	)

72 
	~<°dlib.h
>

73 
	~<°dio.h
>

74 
	~<°rög.h
>

75 
	~<Êﬂt.h
>

76 
	~<limôs.h
>

77 
	~<sig«l.h
>

78 
	~<î∫o.h
>

79 
	~<sys/ty≥s.h
>

80 
	~<loˇÀ.h
>

81 
	~<sys/ut¢ame.h
>

82 
	~<sys/°©vfs.h
>

83 #ifde‡
HAVE_STDINT_H


84 
	~<°döt.h
>

86 
	~<f˙é.h
>

87 
	~<sys/mm™.h
>

88 
	~<sys/waô.h
>

89 
	~"∑r£πy≥s.h
"

90 
	~"fûebích.h
"

91 
	~"utûs.h
"

92 
	~"°©s.h
"

93 
	~"v¨s.h
"

94 
	~"evítgí.h
"

95 
	~"a¶r.h
"

96 
	~"mu…i_˛õ¡_sync.h
"

99 
FILE
 *
yyö
;

100 
yydebug
;

101 
yyîr‹
(*
s
);

102 
yyÀx
();

105 *
	gexe˙ame
;

108 
cmd_t
 *
Æloc_cmd
();

109 
©å_t
 *
Æloc_©å
();

110 
©å_t
 *
Æloc_lv¨_©å
(
v¨_t
 *
v¨
);

111 
©å_t
 *
gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
);

112 
gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
);

113 
li°_t
 *
Æloc_li°
();

114 
¥obèbít_t
 *
Æloc_¥obèbít
();

115 
add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
);

118 
∑r£r_fûe£t_li°
(
cmd_t
 *);

119 
∑r£r_Êow›_li°
(
cmd_t
 *);

122 
∑r£r_¥oc_deföe
(
cmd_t
 *);

123 
∑r£r_thªad_deföe
(
cmd_t
 *, 
¥ocÊow_t
 *);

124 
∑r£r_Êow›_deföe
(
cmd_t
 *, 
thªadÊow_t
 *, 
Êow›_t
 **, );

125 
∑r£r_composôe_Êow›_deföe
(
cmd_t
 *);

126 
∑r£r_fûe_deföe
(
cmd_t
 *);

127 
∑r£r_fûe£t_deföe
(
cmd_t
 *);

128 
∑r£r_v¨_assign_øndom
(*, 
cmd_t
 *);

129 
∑r£r_v¨_assign_cu°om
(*, 
cmd_t
 *);

132 
∑r£r_fûe£t_¸óã
(
cmd_t
 *);

135 
∑r£r_run
(
cmd_t
 *
cmd
);

136 
∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
);

137 
∑r£r_p§un
(
cmd_t
 *
cmd
);

140 
∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
);

143 
∑r£r_echo
(
cmd_t
 *
cmd
);

144 
∑r£r_sy°em
(
cmd_t
 *
cmd
);

145 
∑r£r_evítgí
(
cmd_t
 *
cmd
);

146 
∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
);

147 
∑r£r_domu…isync
(
cmd_t
 *
cmd
);

148 
∑r£r_¶ìp
(
cmd_t
 *
cmd
);

149 
∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
);

150 
∑r£r_vîsi⁄
(
cmd_t
 *
cmd
);

151 
∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
);

156 #i‚de‡
YY_CAST


157 #ifde‡
__˝lu•lus


158 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë
°©ic_ˇ°
<Ty≥> (VÆ)

	)

159 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë
ªöãΩªt_ˇ°
<Ty≥> (VÆ)

	)

161 
	#YY_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

162 
	#YY_REINTERPRET_CAST
(
Ty≥
, 
VÆ
Ë((Ty≥Ë(VÆ))

	)

165 #i‚de‡
YY_NULLPTR


166 #i‡
deföed
 
__˝lu•lus


167 #i‡201103L <
__˝lu•lus


168 
	#YY_NULLPTR
 
nuŒ±r


	)

170 
	#YY_NULLPTR
 0

	)

173 
	#YY_NULLPTR
 ((*)0)

	)

178 #ifde‡
YYERROR_VERBOSE


179 #unde‡
YYERROR_VERBOSE


180 
	#YYERROR_VERBOSE
 1

	)

182 
	#YYERROR_VERBOSE
 0

	)

187 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


188 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

190 #i‚de‡
YYDEBUG


191 
	#YYDEBUG
 0

	)

193 #i‡
YYDEBUG


194 
yydebug
;

198 #i‚de‡
YYTOKENTYPE


199 
	#YYTOKENTYPE


	)

200 
	eyytokíty≥


202 
	mFSC_LIST
 = 258,

203 
	mFSC_DEFINE
 = 259,

204 
	mFSC_QUIT
 = 260,

205 
	mFSC_DEBUG
 = 261,

206 
	mFSC_CREATE
 = 262,

207 
	mFSC_SLEEP
 = 263,

208 
	mFSC_SET
 = 264,

209 
	mFSC_SYSTEM
 = 265,

210 
	mFSC_EVENTGEN
 = 266,

211 
	mFSC_ECHO
 = 267,

212 
	mFSC_RUN
 = 268,

213 
	mFSC_PSRUN
 = 269,

214 
	mFSC_VERSION
 = 270,

215 
	mFSC_ENABLE
 = 271,

216 
	mFSC_DOMULTISYNC
 = 272,

217 
	mFSV_STRING
 = 273,

218 
	mFSV_VAL_POSINT
 = 274,

219 
	mFSV_VAL_NEGINT
 = 275,

220 
	mFSV_VAL_BOOLEAN
 = 276,

221 
	mFSV_VARIABLE
 = 277,

222 
	mFSV_WHITESTRING
 = 278,

223 
	mFSV_RANDUNI
 = 279,

224 
	mFSV_RANDTAB
 = 280,

225 
	mFSV_URAND
 = 281,

226 
	mFSV_RAND48
 = 282,

227 
	mFSE_FILE
 = 283,

228 
	mFSE_FILES
 = 284,

229 
	mFSE_FILESET
 = 285,

230 
	mFSE_PROC
 = 286,

231 
	mFSE_THREAD
 = 287,

232 
	mFSE_FLOWOP
 = 288,

233 
	mFSE_CVAR
 = 289,

234 
	mFSE_RAND
 = 290,

235 
	mFSE_MODE
 = 291,

236 
	mFSE_MULTI
 = 292,

237 
	mFSK_SEPLST
 = 293,

238 
	mFSK_OPENLST
 = 294,

239 
	mFSK_CLOSELST
 = 295,

240 
	mFSK_OPENPAR
 = 296,

241 
	mFSK_CLOSEPAR
 = 297,

242 
	mFSK_ASSIGN
 = 298,

243 
	mFSK_IN
 = 299,

244 
	mFSK_QUOTE
 = 300,

245 
	mFSA_SIZE
 = 301,

246 
	mFSA_PREALLOC
 = 302,

247 
	mFSA_PARALLOC
 = 303,

248 
	mFSA_PATH
 = 304,

249 
	mFSA_REUSE
 = 305,

250 
	mFSA_MEMSIZE
 = 306,

251 
	mFSA_RATE
 = 307,

252 
	mFSA_READONLY
 = 308,

253 
	mFSA_TRUSTTREE
 = 309,

254 
	mFSA_IOSIZE
 = 310,

255 
	mFSA_FILENAME
 = 311,

256 
	mFSA_WSS
 = 312,

257 
	mFSA_NAME
 = 313,

258 
	mFSA_RANDOM
 = 314,

259 
	mFSA_INSTANCES
 = 315,

260 
	mFSA_DSYNC
 = 316,

261 
	mFSA_TARGET
 = 317,

262 
	mFSA_ITERS
 = 318,

263 
	mFSA_NICE
 = 319,

264 
	mFSA_VALUE
 = 320,

265 
	mFSA_BLOCKING
 = 321,

266 
	mFSA_HIGHWATER
 = 322,

267 
	mFSA_DIRECTIO
 = 323,

268 
	mFSA_DIRWIDTH
 = 324,

269 
	mFSA_FD
 = 325,

270 
	mFSA_SRCFD
 = 326,

271 
	mFSA_ROTATEFD
 = 327,

272 
	mFSA_ENTRIES
 = 328,

273 
	mFSA_DIRDEPTHRV
 = 329,

274 
	mFSA_DIRGAMMA
 = 330,

275 
	mFSA_USEISM
 = 331,

276 
	mFSA_TYPE
 = 332,

277 
	mFSA_LEAFDIRS
 = 333,

278 
	mFSA_INDEXED
 = 334,

279 
	mFSA_RANDTABLE
 = 335,

280 
	mFSA_RANDSRC
 = 336,

281 
	mFSA_ROUND
 = 337,

282 
	mFSA_RANDSEED
 = 338,

283 
	mFSA_RANDGAMMA
 = 339,

284 
	mFSA_RANDMEAN
 = 340,

285 
	mFSA_MIN
 = 341,

286 
	mFSA_MAX
 = 342,

287 
	mFSA_MASTER
 = 343,

288 
	mFSA_CLIENT
 = 344,

289 
	mFSS_TYPE
 = 345,

290 
	mFSS_SEED
 = 346,

291 
	mFSS_GAMMA
 = 347,

292 
	mFSS_MEAN
 = 348,

293 
	mFSS_MIN
 = 349,

294 
	mFSS_SRC
 = 350,

295 
	mFSS_ROUND
 = 351,

296 
	mFSA_LVAR_ASSIGN
 = 352,

297 
	mFSA_ALLDONE
 = 353,

298 
	mFSA_FIRSTDONE
 = 354,

299 
	mFSA_TIMEOUT
 = 355,

300 
	mFSA_LATHIST
 = 356,

301 
	mFSA_NOREADAHEAD
 = 357,

302 
	mFSA_IOPRIO
 = 358,

303 
	mFSA_WRITEONLY
 = 359,

304 
	mFSA_PARAMETERS
 = 360,

305 
	mFSA_NOUSESTATS
 = 361

309 
	#FSC_LIST
 258

	)

310 
	#FSC_DEFINE
 259

	)

311 
	#FSC_QUIT
 260

	)

312 
	#FSC_DEBUG
 261

	)

313 
	#FSC_CREATE
 262

	)

314 
	#FSC_SLEEP
 263

	)

315 
	#FSC_SET
 264

	)

316 
	#FSC_SYSTEM
 265

	)

317 
	#FSC_EVENTGEN
 266

	)

318 
	#FSC_ECHO
 267

	)

319 
	#FSC_RUN
 268

	)

320 
	#FSC_PSRUN
 269

	)

321 
	#FSC_VERSION
 270

	)

322 
	#FSC_ENABLE
 271

	)

323 
	#FSC_DOMULTISYNC
 272

	)

324 
	#FSV_STRING
 273

	)

325 
	#FSV_VAL_POSINT
 274

	)

326 
	#FSV_VAL_NEGINT
 275

	)

327 
	#FSV_VAL_BOOLEAN
 276

	)

328 
	#FSV_VARIABLE
 277

	)

329 
	#FSV_WHITESTRING
 278

	)

330 
	#FSV_RANDUNI
 279

	)

331 
	#FSV_RANDTAB
 280

	)

332 
	#FSV_URAND
 281

	)

333 
	#FSV_RAND48
 282

	)

334 
	#FSE_FILE
 283

	)

335 
	#FSE_FILES
 284

	)

336 
	#FSE_FILESET
 285

	)

337 
	#FSE_PROC
 286

	)

338 
	#FSE_THREAD
 287

	)

339 
	#FSE_FLOWOP
 288

	)

340 
	#FSE_CVAR
 289

	)

341 
	#FSE_RAND
 290

	)

342 
	#FSE_MODE
 291

	)

343 
	#FSE_MULTI
 292

	)

344 
	#FSK_SEPLST
 293

	)

345 
	#FSK_OPENLST
 294

	)

346 
	#FSK_CLOSELST
 295

	)

347 
	#FSK_OPENPAR
 296

	)

348 
	#FSK_CLOSEPAR
 297

	)

349 
	#FSK_ASSIGN
 298

	)

350 
	#FSK_IN
 299

	)

351 
	#FSK_QUOTE
 300

	)

352 
	#FSA_SIZE
 301

	)

353 
	#FSA_PREALLOC
 302

	)

354 
	#FSA_PARALLOC
 303

	)

355 
	#FSA_PATH
 304

	)

356 
	#FSA_REUSE
 305

	)

357 
	#FSA_MEMSIZE
 306

	)

358 
	#FSA_RATE
 307

	)

359 
	#FSA_READONLY
 308

	)

360 
	#FSA_TRUSTTREE
 309

	)

361 
	#FSA_IOSIZE
 310

	)

362 
	#FSA_FILENAME
 311

	)

363 
	#FSA_WSS
 312

	)

364 
	#FSA_NAME
 313

	)

365 
	#FSA_RANDOM
 314

	)

366 
	#FSA_INSTANCES
 315

	)

367 
	#FSA_DSYNC
 316

	)

368 
	#FSA_TARGET
 317

	)

369 
	#FSA_ITERS
 318

	)

370 
	#FSA_NICE
 319

	)

371 
	#FSA_VALUE
 320

	)

372 
	#FSA_BLOCKING
 321

	)

373 
	#FSA_HIGHWATER
 322

	)

374 
	#FSA_DIRECTIO
 323

	)

375 
	#FSA_DIRWIDTH
 324

	)

376 
	#FSA_FD
 325

	)

377 
	#FSA_SRCFD
 326

	)

378 
	#FSA_ROTATEFD
 327

	)

379 
	#FSA_ENTRIES
 328

	)

380 
	#FSA_DIRDEPTHRV
 329

	)

381 
	#FSA_DIRGAMMA
 330

	)

382 
	#FSA_USEISM
 331

	)

383 
	#FSA_TYPE
 332

	)

384 
	#FSA_LEAFDIRS
 333

	)

385 
	#FSA_INDEXED
 334

	)

386 
	#FSA_RANDTABLE
 335

	)

387 
	#FSA_RANDSRC
 336

	)

388 
	#FSA_ROUND
 337

	)

389 
	#FSA_RANDSEED
 338

	)

390 
	#FSA_RANDGAMMA
 339

	)

391 
	#FSA_RANDMEAN
 340

	)

392 
	#FSA_MIN
 341

	)

393 
	#FSA_MAX
 342

	)

394 
	#FSA_MASTER
 343

	)

395 
	#FSA_CLIENT
 344

	)

396 
	#FSS_TYPE
 345

	)

397 
	#FSS_SEED
 346

	)

398 
	#FSS_GAMMA
 347

	)

399 
	#FSS_MEAN
 348

	)

400 
	#FSS_MIN
 349

	)

401 
	#FSS_SRC
 350

	)

402 
	#FSS_ROUND
 351

	)

403 
	#FSA_LVAR_ASSIGN
 352

	)

404 
	#FSA_ALLDONE
 353

	)

405 
	#FSA_FIRSTDONE
 354

	)

406 
	#FSA_TIMEOUT
 355

	)

407 
	#FSA_LATHIST
 356

	)

408 
	#FSA_NOREADAHEAD
 357

	)

409 
	#FSA_IOPRIO
 358

	)

410 
	#FSA_WRITEONLY
 359

	)

411 
	#FSA_PARAMETERS
 360

	)

412 
	#FSA_NOUSESTATS
 361

	)

415 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


416 
	uYYSTYPE


420 
öt64_t
 
	mivÆ
;

421 
	mbvÆ
;

422 * 
	msvÆ
;

423 
avd_t
 
	mavd
;

424 
cmd_t
 *
	mcmd
;

425 
©å_t
 *
	m©å
;

426 
li°_t
 *
	mli°
;

427 
¥obèbít_t
 *
	m∫dtb
;

432 
YYSTYPE
 
	tYYSTYPE
;

433 
	#YYSTYPE_IS_TRIVIAL
 1

	)

434 
	#YYSTYPE_IS_DECLARED
 1

	)

438 
YYSTYPE
 
yylvÆ
;

440 
yy∑r£
 ();

454 #i‚de‡
__PTRDIFF_MAX__


455 
	~<limôs.h
>

456 #i‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

457 
	~<°döt.h
>

458 
	#YY_STDINT_H


	)

467 #ifde‡
__INT_LEAST8_MAX__


468 
__INT_LEAST8_TYPE__
 
	tyyty≥_öt8
;

469 #ñi‡
deföed
 
YY_STDINT_H


470 
öt_Àa°8_t
 
	tyyty≥_öt8
;

472 sig√d 
	tyyty≥_öt8
;

475 #ifde‡
__INT_LEAST16_MAX__


476 
__INT_LEAST16_TYPE__
 
	tyyty≥_öt16
;

477 #ñi‡
deföed
 
YY_STDINT_H


478 
öt_Àa°16_t
 
	tyyty≥_öt16
;

480 
	tyyty≥_öt16
;

483 #i‡
deföed
 
__UINT_LEAST8_MAX__
 && __UINT_LEAST8_MAX__ <
__INT_MAX__


484 
__UINT_LEAST8_TYPE__
 
	tyyty≥_uöt8
;

485 #ñi‡(!
deföed
 
__UINT_LEAST8_MAX__
 && deföed 
YY_STDINT_H
 \

486 && 
	gUINT_LEAST8_MAX
 <
INT_MAX
)

487 
uöt_Àa°8_t
 
	tyyty≥_uöt8
;

488 #ñi‡!
deföed
 
__UINT_LEAST8_MAX__
 && 
UCHAR_MAX
 <
INT_MAX


489 
	tyyty≥_uöt8
;

491 
	tyyty≥_uöt8
;

494 #i‡
deföed
 
__UINT_LEAST16_MAX__
 && __UINT_LEAST16_MAX__ <
__INT_MAX__


495 
__UINT_LEAST16_TYPE__
 
	tyyty≥_uöt16
;

496 #ñi‡(!
deföed
 
__UINT_LEAST16_MAX__
 && deföed 
YY_STDINT_H
 \

497 && 
	gUINT_LEAST16_MAX
 <
INT_MAX
)

498 
uöt_Àa°16_t
 
	tyyty≥_uöt16
;

499 #ñi‡!
deföed
 
__UINT_LEAST16_MAX__
 && 
USHRT_MAX
 <
INT_MAX


500 
	tyyty≥_uöt16
;

502 
	tyyty≥_uöt16
;

505 #i‚de‡
YYPTRDIFF_T


506 #i‡
deföed
 
__PTRDIFF_TYPE__
 && deföed 
__PTRDIFF_MAX__


507 
	#YYPTRDIFF_T
 
__PTRDIFF_TYPE__


	)

508 
	#YYPTRDIFF_MAXIMUM
 
__PTRDIFF_MAX__


	)

509 #ñi‡
deföed
 
PTRDIFF_MAX


510 #i‚de‡
±rdiff_t


511 
	~<°ddef.h
>

513 
	#YYPTRDIFF_T
 
±rdiff_t


	)

514 
	#YYPTRDIFF_MAXIMUM
 
PTRDIFF_MAX


	)

516 
	#YYPTRDIFF_T
 

	)

517 
	#YYPTRDIFF_MAXIMUM
 
LONG_MAX


	)

521 #i‚de‡
YYSIZE_T


522 #ifde‡
__SIZE_TYPE__


523 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

524 #ñi‡
deföed
 
size_t


525 
	#YYSIZE_T
 
size_t


	)

526 #ñi‡
deföed
 
__STDC_VERSION__
 && 199901 <= __STDC_VERSION__

527 
	~<°ddef.h
>

528 
	#YYSIZE_T
 
size_t


	)

530 
	#YYSIZE_T
 

	)

534 
	#YYSIZE_MAXIMUM
 \

535 
	`YY_CAST
 (
YYPTRDIFF_T
, \

536 (
YYPTRDIFF_MAXIMUM
 < 
	`YY_CAST
 (
YYSIZE_T
, -1) \

537 ? 
YYPTRDIFF_MAXIMUM
 \

538 : 
	`YY_CAST
 (
YYSIZE_T
, -1)))

	)

540 
	#YYSIZEOF
(
X
Ë
	`YY_CAST
 (
YYPTRDIFF_T
,  (X))

	)

543 
yyty≥_öt16
 
	tyy_°©e_t
;

546 
	tyy_°©e_Á°_t
;

548 #i‚de‡
YY_


549 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

550 #i‡
ENABLE_NLS


551 
	~<liböé.h
>

552 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

555 #i‚de‡
YY_


556 
	#YY_
(
Msgid
Ë
	)
Msgid

560 #i‚de‡
YY_ATTRIBUTE_PURE


561 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (96 <
__GNUC_MINOR__
)

562 
	#YY_ATTRIBUTE_PURE
 
	`__©åibuã__
 ((
__puª__
))

	)

564 
	#YY_ATTRIBUTE_PURE


	)

568 #i‚de‡
YY_ATTRIBUTE_UNUSED


569 #i‡
deföed
 
__GNUC__
 && 2 < __GNUC__ + (7 <
__GNUC_MINOR__
)

570 
	#YY_ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

572 
	#YY_ATTRIBUTE_UNUSED


	)

577 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


578 
	#YYUSE
(
E
Ë((Ë(E))

	)

580 
	#YYUSE
(
E
Ë

	)

583 #i‡
deföed
 
__GNUC__
 && ! deföed 
__ICC
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


585 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

586 
	`_Pøgma
 ("GCC diagnosticÖush") \

587 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"") \

588 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

589 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

590 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

592 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

594 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


595 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

596 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

598 #i‚de‡
YY_INITIAL_VALUE


599 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

602 #i‡
deföed
 
__˝lu•lus
 && deföed 
__GNUC__
 && ! deföed 
__ICC
 && 6 <= __GNUC__

603 
	#YY_IGNORE_USELESS_CAST_BEGIN
 \

604 
	`_Pøgma
 ("GCC diagnosticÖush") \

605 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wu£Àss-ˇ°\"")

	)

606 
	#YY_IGNORE_USELESS_CAST_END
 \

607 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

609 #i‚de‡
YY_IGNORE_USELESS_CAST_BEGIN


610 
	#YY_IGNORE_USELESS_CAST_BEGIN


	)

611 
	#YY_IGNORE_USELESS_CAST_END


	)

615 
	#YY_ASSERT
(
E
Ë((Ë(0 && (E)))

	)

617 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


621 #ifde‡
YYSTACK_USE_ALLOCA


622 #i‡
YYSTACK_USE_ALLOCA


623 #ifde‡
__GNUC__


624 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

625 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


626 
	~<Æloˇ.h
>

627 #ñi‡
deföed
 
_AIX


628 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

629 #ñi‡
deföed
 
_MSC_VER


630 
	~<mÆloc.h
>

631 
	#Æloˇ
 
_Æloˇ


	)

633 
	#YYSTACK_ALLOC
 
Æloˇ


	)

634 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


635 
	~<°dlib.h
>

637 #i‚de‡
EXIT_SUCCESS


638 
	#EXIT_SUCCESS
 0

	)

645 #ifde‡
YYSTACK_ALLOC


647 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

648 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


653 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

656 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

657 
	#YYSTACK_FREE
 
YYFREE


	)

658 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


659 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

661 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

662 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

663 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

664 
	~<°dlib.h
>

665 #i‚de‡
EXIT_SUCCESS


666 
	#EXIT_SUCCESS
 0

	)

669 #i‚de‡
YYMALLOC


670 
	#YYMALLOC
 
mÆloc


	)

671 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


672 *
mÆloc
 (
YYSIZE_T
);

675 #i‚de‡
YYFREE


676 
	#YYFREE
 
‰ì


	)

677 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


678 
‰ì
 (*);

685 #i‡(! 
deföed
 
yyovîÊow
 \

686 && (! 
deföed
 
	g__˝lu•lus
 \

687 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

690 
	uyyÆloc


692 
yy_°©e_t
 
	myyss_Æloc
;

693 
YYSTYPE
 
	myyvs_Æloc
;

697 
	#YYSTACK_GAP_MAXIMUM
 (
	`YYSIZEOF
 (
yyÆloc
Ë- 1)

	)

701 
	#YYSTACK_BYTES
(
N
) \

702 ((
N
Ë* (
	`YYSIZEOF
 (
yy_°©e_t
Ë+ YYSIZEOF (
YYSTYPE
)) \

703 + 
YYSTACK_GAP_MAXIMUM
)

	)

705 
	#YYCOPY_NEEDED
 1

	)

712 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

715 
YYPTRDIFF_T
 
yy√wbyãs
; \

716 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

717 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

718 
yy√wbyãs
 = 
yy°acksize
 * 
	`YYSIZEOF
 (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

719 
yy±r
 +
yy√wbyãs
 / 
	`YYSIZEOF
 (*yyptr); \

721 0)

	)

725 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

728 #i‚de‡
YYCOPY


729 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

730 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

731 
	`__buûtö_mem˝y
 (
D°
, 
Src
, 
	`YY_CAST
 (
YYSIZE_T
, (
Cou¡
)Ë*  (*(Src)))

	)

733 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

736 
YYPTRDIFF_T
 
yyi
; \

737 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

738 (
D°
)[
yyi
] = (
Src
)[yyi]; \

740 0)

	)

746 
	#YYFINAL
 2

	)

748 
	#YYLAST
 256

	)

751 
	#YYNTOKENS
 107

	)

753 
	#YYNNTS
 71

	)

755 
	#YYNRULES
 209

	)

757 
	#YYNSTATES
 295

	)

759 
	#YYUNDEFTOK
 2

	)

760 
	#YYMAXUTOK
 361

	)

765 
	#YYTRANSLATE
(
YYX
) \

766 (0 <(
YYX
Ë&& (YYXË<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

770 c⁄° 
yyty≥_öt8
 
	gyyå™¶©e
[] =

811 #i‡
YYDEBUG


813 c⁄° 
yyty≥_öt16
 
	gyyæöe
[] =

839 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

842 c⁄° *c⁄° 
	gyyäame
[] =

885 "©ås_deföe_comp", "©å_vÆue", "v¨_öt_vÆ", 
YY_NULLPTR


889 #ifde‡
YYPRINT


892 c⁄° 
yyty≥_öt16
 
	gyytoknum
[] =

908 
	#YYPACT_NINF
 (-172)

	)

910 
	#yy∑˘_vÆue_is_deÁu…
(
Yyn
) \

911 ((
Yyn
Ë=
YYPACT_NINF
)

	)

913 
	#YYTABLE_NINF
 (-1)

	)

915 
	#yyèbÀ_vÆue_is_îr‹
(
Yyn
) \

916 0

	)

920 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

957 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

992 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

1005 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

1020 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

1050 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

1082 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1117 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1143 c⁄° 
yyty≥_öt8
 
	gyyr2
[] =

1169 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1170 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1171 
	#YYEMPTY
 (-2)

	)

1172 
	#YYEOF
 0

	)

1174 
	#YYACCEPT
 
yyac˚±œb


	)

1175 
	#YYABORT
 
yyab‹éab


	)

1176 
	#YYERROR
 
yyîr‹œb


	)

1179 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1181 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1183 i‡(
yych¨
 =
YYEMPTY
) \

1185 
yych¨
 = (
Tokí
); \

1186 
yylvÆ
 = (
VÆue
); \

1187 
	`YYPOPSTACK
 (
yyÀn
); \

1188 
yy°©e
 = *
yys•
; \

1189 
yybackup
; \

1193 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

1194 
YYERROR
; \

1196 0)

	)

1199 
	#YYTERROR
 1

	)

1200 
	#YYERRCODE
 256

	)

1205 #i‡
YYDEBUG


1207 #i‚de‡
YYFPRINTF


1208 
	~<°dio.h
>

1209 
	#YYFPRINTF
 
Ârötf


	)

1212 
	#YYDPRINTF
(
Args
) \

1214 i‡(
yydebug
) \

1215 
YYFPRINTF
 
Args
; \

1216 } 0)

	)

1219 #i‚de‡
YY_LOCATION_PRINT


1220 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1224 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1226 i‡(
yydebug
) \

1228 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1229 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1230 
Ty≥
, 
VÆue
); \

1231 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1233 } 0)

	)

1241 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1243 
FILE
 *
yyouçut
 = 
yyo
;

1244 
	`YYUSE
 (
yyouçut
);

1245 i‡(!
yyvÆuï
)

1247 #ifde‡
YYPRINT


1248 i‡(
yyty≥
 < 
YYNTOKENS
)

1249 
	`YYPRINT
 (
yyo
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1251 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1252 
	`YYUSE
 (
yyty≥
);

1253 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1254 
	}
}

1262 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyo
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1264 
	`YYFPRINTF
 (
yyo
, "%s %s (",

1265 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1267 
	`yy_symbﬁ_vÆue_¥öt
 (
yyo
, 
yyty≥
, 
yyvÆuï
);

1268 
	`YYFPRINTF
 (
yyo
, ")");

1269 
	}
}

1277 
	$yy_°ack_¥öt
 (
yy_°©e_t
 *
yybŸtom
, yy_°©e_à*
yyt›
)

1279 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1280 ; 
yybŸtom
 <
yyt›
; yybottom++)

1282 
yybŸ
 = *
yybŸtom
;

1283 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1285 
	`YYFPRINTF
 (
°dîr
, "\n");

1286 
	}
}

1288 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1290 i‡(
yydebug
) \

1291 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1292 } 0)

	)

1300 
	$yy_ªdu˚_¥öt
 (
yy_°©e_t
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1302 
yy o
 = 
yyæöe
[
yyruÀ
];

1303 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1304 
yyi
;

1305 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %d):\n",

1306 
yyruÀ
 - 1, 
yy o
);

1308 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1310 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1311 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1312 
yy°os
[+
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1313 &
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)]

1315 
	`YYFPRINTF
 (
°dîr
, "\n");

1317 
	}
}

1319 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1321 i‡(
yydebug
) \

1322 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

1323 } 0)

	)

1327 
	gyydebug
;

1329 
	#YYDPRINTF
(
Args
)

	)

1330 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1331 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1332 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1337 #i‚de‡
YYINITDEPTH


1338 
	#YYINITDEPTH
 200

	)

1348 #i‚de‡
YYMAXDEPTH


1349 
	#YYMAXDEPTH
 10000

	)

1353 #i‡
YYERROR_VERBOSE


1355 #i‚de‡
yy°æí


1356 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1357 
	#yy°æí
(
S
Ë(
	`YY_CAST
 (
YYPTRDIFF_T
, 
	`°æí
 (S)))

	)

1360 
YYPTRDIFF_T


1361 
	$yy°æí
 (c⁄° *
yy°r
)

1363 
YYPTRDIFF_T
 
yyÀn
;

1364 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1366  
yyÀn
;

1367 
	}
}

1371 #i‚de‡
yy°p˝y


1372 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1373 
	#yy°p˝y
 
°p˝y


	)

1378 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1380 *
yyd
 = 
yyde°
;

1381 c⁄° *
yys
 = 
yy§c
;

1383 (*
yyd
++ = *
yys
++) != '\0')

1386  
yyd
 - 1;

1387 
	}
}

1391 #i‚de‡
yyäamîr


1399 
YYPTRDIFF_T


1400 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1402 i‡(*
yy°r
 == '"')

1404 
YYPTRDIFF_T
 
yyn
 = 0;

1405 c⁄° *
yyp
 = 
yy°r
;

1408 *++
yyp
)

1412 
do_nŸ_°rù_quŸes
;

1415 i‡(*++
yyp
 != '\\')

1416 
do_nŸ_°rù_quŸes
;

1418 
≠≥nd
;

1420 
≠≥nd
:

1422 i‡(
yyªs
)

1423 
yyªs
[
yyn
] = *
yyp
;

1424 
yyn
++;

1428 i‡(
yyªs
)

1429 
yyªs
[
yyn
] = '\0';

1430  
yyn
;

1432 
do_nŸ_°rù_quŸes
: ;

1435 i‡(
yyªs
)

1436  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1438  
	`yy°æí
 (
yy°r
);

1439 
	}
}

1451 
	$yysy¡ax_îr‹
 (
YYPTRDIFF_T
 *
yymsg_Æloc
, **
yymsg
,

1452 
yy_°©e_t
 *
yys•
, 
yytokí
)

1454 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1456 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1459 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1461 
yycou¡
 = 0;

1463 
YYPTRDIFF_T
 
yysize
 = 0;

1488 i‡(
yytokí
 !
YYEMPTY
)

1490 
yyn
 = 
yy∑˘
[+*
yys•
];

1491 
YYPTRDIFF_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1492 
yysize
 = 
yysize0
;

1493 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1494 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1499 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1501 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1502 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1503 
yyx
;

1505 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1506 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1507 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1509 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1511 
yycou¡
 = 1;

1512 
yysize
 = 
yysize0
;

1515 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1517 
YYPTRDIFF_T
 
yysize1


1518 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1519 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1520 
yysize
 = 
yysize1
;

1528 
yycou¡
)

1530 
	#YYCASE_
(
N
, 
S
) \

1531 
N
: \

1532 
yyf‹m©
 = 
S
; \

1533 

	)

1535 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1536 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1537 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1538 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1539 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1540 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1541 #unde‡
YYCASE_


1547 
YYPTRDIFF_T
 
yysize1
 = 
yysize
 + (
	`yy°æí
 (
yyf‹m©
Ë- 2 * 
yycou¡
) + 1;

1548 i‡(
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
)

1549 
yysize
 = 
yysize1
;

1554 i‡(*
yymsg_Æloc
 < 
yysize
)

1556 *
yymsg_Æloc
 = 2 * 
yysize
;

1557 i‡(! (
yysize
 <*
yymsg_Æloc


1558 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1559 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1567 *
yyp
 = *
yymsg
;

1568 
yyi
 = 0;

1569 (*
yyp
 = *
yyf‹m©
) != '\0')

1570 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1572 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1573 
yyf‹m©
 += 2;

1577 ++
yyp
;

1578 ++
yyf‹m©
;

1582 
	}
}

1590 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1592 
	`YYUSE
 (
yyvÆuï
);

1593 i‡(!
yymsg
)

1594 
yymsg
 = "Deleting";

1595 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1597 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1598 
	`YYUSE
 (
yyty≥
);

1599 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1600 
	}
}

1606 
	gyych¨
;

1609 
YYSTYPE
 
	gyylvÆ
;

1611 
	gyy√ºs
;

1619 
	$yy∑r£
 ()

1621 
yy_°©e_Á°_t
 
yy°©e
;

1623 
yyîr°©us
;

1633 
yy_°©e_t
 
yysß
[
YYINITDEPTH
];

1634 
yy_°©e_t
 *
yyss
;

1635 
yy_°©e_t
 *
yys•
;

1638 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1639 
YYSTYPE
 *
yyvs
;

1640 
YYSTYPE
 *
yyv•
;

1642 
YYPTRDIFF_T
 
yy°acksize
;

1644 
yyn
;

1645 
yyªsu…
;

1647 
yytokí
 = 0;

1650 
YYSTYPE
 
yyvÆ
;

1652 #i‡
YYERROR_VERBOSE


1654 
yymsgbuf
[128];

1655 *
yymsg
 = 
yymsgbuf
;

1656 
YYPTRDIFF_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1659 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1663 
yyÀn
 = 0;

1665 
yys•
 = 
yyss
 = 
yysß
;

1666 
yyv•
 = 
yyvs
 = 
yyvß
;

1667 
yy°acksize
 = 
YYINITDEPTH
;

1669 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1671 
yy°©e
 = 0;

1672 
yyîr°©us
 = 0;

1673 
yy√ºs
 = 0;

1674 
yych¨
 = 
YYEMPTY
;

1675 
yy£t°©e
;

1681 
yy√w°©e
:

1684 
yys•
++;

1690 
yy£t°©e
:

1691 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1692 
	`YY_ASSERT
 (0 <
yy°©e
 && yy°©ê< 
YYNSTATES
);

1693 
YY_IGNORE_USELESS_CAST_BEGIN


1694 *
yys•
 = 
	`YY_CAST
 (
yy_°©e_t
, 
yy°©e
);

1695 
YY_IGNORE_USELESS_CAST_END


1697 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1698 #i‡!
deföed
 
yyovîÊow
 && !deföed 
YYSTACK_RELOCATE


1699 
yyexhau°edœb
;

1703 
YYPTRDIFF_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1705 #i‡
deföed
 
yyovîÊow


1710 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1711 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1717 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1718 &
yyss1
, 
yysize
 * 
	`YYSIZEOF
 (*
yys•
),

1719 &
yyvs1
, 
yysize
 * 
	`YYSIZEOF
 (*
yyv•
),

1720 &
yy°acksize
);

1721 
yyss
 = 
yyss1
;

1722 
yyvs
 = 
yyvs1
;

1726 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1727 
yyexhau°edœb
;

1728 
yy°acksize
 *= 2;

1729 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1730 
yy°acksize
 = 
YYMAXDEPTH
;

1733 
yy_°©e_t
 *
yyss1
 = 
yyss
;

1734 
yyÆloc
 *
yy±r
 =

1735 
	`YY_CAST
 (
yyÆloc
 *,

1736 
	`YYSTACK_ALLOC
 (
	`YY_CAST
 (
YYSIZE_T
, 
	`YYSTACK_BYTES
 (
yy°acksize
))));

1737 i‡(! 
yy±r
)

1738 
yyexhau°edœb
;

1739 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1740 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1741 #unde‡
YYSTACK_RELOCATE


1742 i‡(
yyss1
 !
yysß
)

1743 
	`YYSTACK_FREE
 (
yyss1
);

1747 
yys•
 = 
yyss
 + 
yysize
 - 1;

1748 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1750 
YY_IGNORE_USELESS_CAST_BEGIN


1751 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %ld\n",

1752 
	`YY_CAST
 (, 
yy°acksize
)));

1753 
YY_IGNORE_USELESS_CAST_END


1755 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1756 
YYABORT
;

1760 i‡(
yy°©e
 =
YYFINAL
)

1761 
YYACCEPT
;

1763 
yybackup
;

1769 
yybackup
:

1774 
yyn
 = 
yy∑˘
[
yy°©e
];

1775 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1776 
yydeÁu…
;

1781 i‡(
yych¨
 =
YYEMPTY
)

1783 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1784 
yych¨
 = 
	`yyÀx
 ();

1787 i‡(
yych¨
 <
YYEOF
)

1789 
yych¨
 = 
yytokí
 = 
YYEOF
;

1790 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1794 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1795 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1800 
yyn
 +
yytokí
;

1801 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1802 
yydeÁu…
;

1803 
yyn
 = 
yyèbÀ
[yyn];

1804 i‡(
yyn
 <= 0)

1806 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1807 
yyîæab
;

1808 
yyn
 = -yyn;

1809 
yyªdu˚
;

1814 i‡(
yyîr°©us
)

1815 
yyîr°©us
--;

1818 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1819 
yy°©e
 = 
yyn
;

1820 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1821 *++
yyv•
 = 
yylvÆ
;

1822 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1825 
yych¨
 = 
YYEMPTY
;

1826 
yy√w°©e
;

1832 
yydeÁu…
:

1833 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1834 i‡(
yyn
 == 0)

1835 
yyîæab
;

1836 
yyªdu˚
;

1842 
yyªdu˚
:

1844 
yyÀn
 = 
yyr2
[
yyn
];

1854 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1857 
	`YY_REDUCE_PRINT
 (
yyn
);

1858 
yyn
)

1863 i‡((
yyv•
[0].
cmd
)->cmd)

1864 (
yyv•
[0].
cmd
)->
	`cmd
((yyvsp[0].cmd));

1866 
	`‰ì
((
yyv•
[0].
cmd
));

1874 
YYABORT
;

1882 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1883 
YYERROR
;

1884 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_evítgí
;

1892 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

1900 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1901 
YYERROR
;

1903 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1904 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_sy°em
;

1912 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1913 
YYERROR
;

1915 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1916 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_echo
;

1924 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1925 
YYERROR
;

1926 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_vîsi⁄
;

1935 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1936 
YYERROR
;

1938 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_mc
;

1939 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1947 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1948 
YYERROR
;

1950 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_œthi°
;

1958 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1959 
YYERROR
;

1961 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_domu…isync
;

1962 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1970 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1971 
YYERROR
;

1973 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1981 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1982 
YYERROR
;

1984 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1992 
li°_t
 *
li°
 = 
NULL
;

1993 
li°_t
 *
li°_íd
 = 
NULL
;

1996 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1997 
YYERROR
;

1999 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

2002 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

2003 
li°
 =Üi°->
li°_√xt
)

2004 
li°_íd
 = 
li°
;

2005 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

2006 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2015 
li°_t
 *
li°
 = 
NULL
;

2016 
li°_t
 *
li°_íd
 = 
NULL
;

2019 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

2020 
YYERROR
;

2022 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

2025 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

2026 
li°
 =Üi°->
li°_√xt
)

2027 
li°_íd
 = 
li°
;

2028 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

2029 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2037 
li°_t
 *
li°
 = 
NULL
;

2038 
li°_t
 *
li°_íd
 = 
NULL
;

2041 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

2042 
YYERROR
;

2044 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

2047 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

2048 
li°
 =Üi°->
li°_√xt
)

2049 
li°_íd
 = 
li°
;

2050 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

2051 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2060 
li°_t
 *
li°
 = 
NULL
;

2061 
li°_t
 *
li°_íd
 = 
NULL
;

2064 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

2065 
YYERROR
;

2067 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

2070 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

2071 
li°
 =Üi°->
li°_√xt
)

2072 
li°_íd
 = 
li°
;

2073 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

2074 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2082 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2090 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2098 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2099 
YYERROR
;

2100 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_li°
;

2108 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2109 
YYERROR
;

2110 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_Êow›_li°
;

2118 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2119 
YYERROR
;

2120 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2121 
fûebích_shm
->
shm_debug_Àvñ
 = (
yyv•
[0].
ivÆ
);

2122 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 10) {

2123 
	`fûebích_log
(
LOG_ERROR
, "DebugÜevel set out ofÑange."

2125 
fûebích_shm
->
shm_debug_Àvñ
 = 10;

2127 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 9)

2128 
yydebug
 = 1;

2136 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2137 i‡(!(
yyvÆ
.
cmd
))

2138 
YYERROR
;

2140 
	`v¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
));

2142 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2150 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2151 i‡(!(
yyvÆ
.
cmd
))

2152 
YYERROR
;

2154 
	`v¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
));

2156 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2164 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2165 i‡(!(
yyvÆ
.
cmd
))

2166 
YYERROR
;

2168 
	`v¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyvsp[-1].sval));

2170 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2178 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2179 i‡(!(
yyvÆ
.
cmd
))

2180 
YYERROR
;

2182 
	`v¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyvsp[0].sval));

2184 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2192 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2193 i‡(!(
yyvÆ
.
cmd
))

2194 
YYERROR
;

2196 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2197 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2199 
	`∑r£r_v¨_assign_øndom
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2207 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2208 i‡(!(
yyvÆ
.
cmd
))

2209 
YYERROR
;

2211 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2212 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2214 
	`∑r£r_v¨_assign_cu°om
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2222 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2223 i‡(!(
yyvÆ
.
cmd
))

2224 
YYERROR
;

2226 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

2228 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2236 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2237 i‡(!(
yyvÆ
.
cmd
))

2238 
YYERROR
;

2240 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_QALLDONE
;

2242 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2250 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2251 i‡(!(
yyvÆ
.
cmd
))

2252 
YYERROR
;

2254 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_Q1STDONE
;

2256 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2264 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2265 i‡(!(
yyvÆ
.
cmd
))

2266 
YYERROR
;

2268 
	`fûebích_log
(
LOG_INFO
, "Disabling CPU usage statistics");

2269 
fûebích_shm
->
shm_mmode
 |
FILEBENCH_MODE_NOUSAGE
;

2271 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2279 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2280 
YYERROR
;

2281 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_fûebích_shutdown
;

2289 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2297 
cmd_t
 *
li°
 = 
NULL
;

2298 
cmd_t
 *
li°_íd
 = 
NULL
;

2301 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2302 
li°
 =Üi°->
cmd_√xt
)

2303 
li°_íd
 = 
li°
;

2305 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2307 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2308 "Êow›_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2310 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2322 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2323 
YYERROR
;

2324 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2325 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2333 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2341 
cmd_t
 *
li°
 = 
NULL
;

2342 
cmd_t
 *
li°_íd
 = 
NULL
;

2345 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2346 
li°
 =Üi°->
cmd_√xt
)

2347 
li°_íd
 = 
li°
;

2349 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2351 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2352 "thªad_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2354 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2362 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2363 i‡(!(
yyvÆ
.
cmd
))

2364 
YYERROR
;

2365 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_¥oc_deföe
;

2366 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2367 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2375 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2376 i‡(!(
yyvÆ
.
cmd
))

2377 
YYERROR
;

2379 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe_deföe
;

2380 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2388 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2389 i‡(!(
yyvÆ
.
cmd
))

2390 
YYERROR
;

2392 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_deföe
;

2393 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2401 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2402 
YYERROR
;

2404 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_¸óã
;

2412 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2413 
YYERROR
;

2414 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp
;

2415 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2423 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2424 
YYERROR
;

2425 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp_v¨übÀ
;

2426 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2434 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2435 
YYERROR
;

2436 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2437 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2445 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2446 
YYERROR
;

2447 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run_v¨übÀ
;

2448 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2456 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2457 
YYERROR
;

2458 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2459 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2467 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2468 
YYERROR
;

2469 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2470 (
yyvÆ
.
cmd
)->
cmd_qty1
 = 0;

2471 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2479 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2480 
YYERROR
;

2481 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2482 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2483 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2492 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2493 
YYERROR
;

2494 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2495 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2496 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2505 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2506 
YYERROR
;

2507 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2508 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2509 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2517 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2518 
YYERROR
;

2519 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2520 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2521 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2529 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2530 
YYERROR
;

2531 (
yyvÆ
.
cmd
)->
cmd_«me
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2539 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

2547 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2555 
©å_t
 *
©å
 = 
NULL
;

2556 
©å_t
 *
li°_íd
 = 
NULL
;

2558 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2559 
li°_íd
 = 
©å
;

2561 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2563 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2571 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2579 
©å_t
 *
©å
 = 
NULL
;

2580 
©å_t
 *
li°_íd
 = 
NULL
;

2582 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2583 
li°_íd
 = 
©å
;

2585 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2587 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2595 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2596 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2604 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2605 i‡(!(
yyvÆ
.
©å
))

2606 
YYERROR
;

2608 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2609 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2617 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2618 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2626 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2627 i‡(!(
yyvÆ
.
©å
))

2628 
YYERROR
;

2630 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2631 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2639 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2647 
©å_t
 *
©å
 = 
NULL
;

2648 
©å_t
 *
li°_íd
 = 
NULL
;

2650 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2651 
©å
 =áâr->
©å_√xt
)

2652 
li°_íd
 = 
©å
;

2654 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2656 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2664 
©å_t
 *
©å
 = 
NULL
;

2665 
©å_t
 *
li°_íd
 = 
NULL
;

2667 
©å
 = (
yyv•
[-6].©å);áâ∏!
NULL
;

2668 
©å
 =áâr->
©å_√xt
)

2669 
li°_íd
 = 
©å
;

2672 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

2673 
YYERROR
;

2675 
©å
->
©å_«me
 = 
FSA_RANDTABLE
;

2676 
©å
->
©å_obj
 = (*)(
yyv•
[-1].
∫dtb
);

2677 
li°_íd
->
©å_√xt
 = 
©å
;

2678 (
yyvÆ
.
©å
Ë(
yyv•
[-6].attr);

2686 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2687 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2695 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2696 
YYERROR
;

2697 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2698 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2706 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2707 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_TYPE
;

2715 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2716 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_RANDSRC
;

2724 i‡(((
yyvÆ
.
∫dtb
Ë
	`Æloc_¥obèbít
()Ë=
NULL
)

2725 
YYERROR
;

2726 (
yyvÆ
.
∫dtb
)->
±e_≥r˚¡
 = (
yyv•
[-5].
avd
);

2727 (
yyvÆ
.
∫dtb
)->
±e_£gmö
 = (
yyv•
[-3].
avd
);

2728 (
yyvÆ
.
∫dtb
)->
±e_£gmax
 = (
yyv•
[-1].
avd
);

2736 (
yyvÆ
.
∫dtb
Ë(
yyv•
[0].rndtb);

2744 
¥obèbít_t
 *
±e
 = 
NULL
;

2745 
¥obèbít_t
 *
±ñi°_íd
 = 
NULL
;

2747 
±e
 = (
yyv•
[-2].
∫dtb
);Öã !
NULL
;

2748 
±e
 =Öã->
±e_√xt
)

2749 
±ñi°_íd
 = 
±e
;

2751 
±ñi°_íd
->
±e_√xt
 = (
yyv•
[0].
∫dtb
);

2753 (
yyvÆ
.
∫dtb
Ë(
yyv•
[-2].rndtb);

2761 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2769 
©å_t
 *
©å
 = 
NULL
;

2770 
©å_t
 *
li°_íd
 = 
NULL
;

2772 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2773 
©å
 =áâr->
©å_√xt
)

2774 
li°_íd
 = 
©å
;

2776 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2778 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2786 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2787 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2795 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2796 i‡(!(
yyvÆ
.
©å
))

2797 
YYERROR
;

2798 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2799 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2807 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2815 
©å_t
 *
©å
 = 
NULL
;

2816 
©å_t
 *
li°_íd
 = 
NULL
;

2818 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2819 
©å
 =áâr->
©å_√xt
)

2820 
li°_íd
 = 
©å
;

2822 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2824 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2832 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2833 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2841 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2842 
YYERROR
;

2843 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2844 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2852 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2860 
©å_t
 *
©å
 = 
NULL
;

2861 
©å_t
 *
li°_íd
 = 
NULL
;

2863 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2864 
©å
 =áâr->
©å_√xt
)

2865 
li°_íd
 = 
©å
;

2867 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2869 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2877 
©å_t
 *
©å
 = 
NULL
;

2878 
©å_t
 *
li°_íd
 = 
NULL
;

2880 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2881 
©å
 =áâr->
©å_√xt
)

2882 
li°_íd
 = 
©å
;

2884 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2886 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2894 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2895 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2903 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2904 
YYERROR
;

2905 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2906 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2914 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2922 
©å_t
 *
©å
 = 
NULL
;

2923 
©å_t
 *
li°_íd
 = 
NULL
;

2925 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2926 
©å
 =áâr->
©å_√xt
)

2927 
li°_íd
 = 
©å
;

2929 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2931 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2939 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2940 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2948 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2949 
YYERROR
;

2950 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2951 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2959 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2967 
©å_t
 *
©å
 = 
NULL
;

2968 
©å_t
 *
li°_íd
 = 
NULL
;

2970 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2971 
©å
 =áâr->
©å_√xt
)

2972 
li°_íd
 = 
©å
;

2974 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2976 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2984 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2985 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2993 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2994 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_VALUE
;

3001 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3007 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

3013 { (
yyvÆ
.
ivÆ
Ë
FSA_NICE
;}

3019 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3025 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

3031 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

3037 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

3043 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

3049 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

3055 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

3061 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

3067 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

3073 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3079 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

3085 { (
yyvÆ
.
ivÆ
Ë
FSA_ENTRIES
;}

3091 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

3097 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

3103 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

3109 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

3115 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

3121 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

3127 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

3133 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRWIDTH
;}

3139 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRDEPTHRV
;}

3145 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRGAMMA
;}

3151 { (
yyvÆ
.
ivÆ
Ë
FSA_LEAFDIRS
;}

3157 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3163 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDSEED
;}

3169 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3175 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDMEAN
;}

3181 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3187 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3194 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3195 
YYERROR
;

3196 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3203 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDUNI
;}

3209 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDTAB
;}

3215 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3222 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3223 
YYERROR
;

3224 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3231 { (
yyvÆ
.
ivÆ
Ë
FSV_URAND
;}

3237 { (
yyvÆ
.
ivÆ
Ë
FSV_RAND48
;}

3243 { (
yyvÆ
.
ivÆ
Ë
FSA_TYPE
;}

3249 { (
yyvÆ
.
ivÆ
Ë
FSA_PARAMETERS
;}

3255 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3261 { (
yyvÆ
.
ivÆ
Ë
FSA_MAX
;}

3267 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3273 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3279 { (
yyvÆ
.
ivÆ
Ë
FSA_MEMSIZE
;}

3285 { (
yyvÆ
.
ivÆ
Ë
FSA_USEISM
;}

3291 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

3297 { (
yyvÆ
.
ivÆ
Ë
FSA_IOPRIO
;}

3303 { (
yyvÆ
.
ivÆ
Ë
FSA_WSS
;}

3309 { (
yyvÆ
.
ivÆ
Ë
FSA_FILENAME
;}

3315 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3321 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDOM
;}

3327 { (
yyvÆ
.
ivÆ
Ë
FSA_FD
;}

3333 { (
yyvÆ
.
ivÆ
Ë
FSA_SRCFD
;}

3339 { (
yyvÆ
.
ivÆ
Ë
FSA_ROTATEFD
;}

3345 { (
yyvÆ
.
ivÆ
Ë
FSA_DSYNC
;}

3351 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRECTIO
;}

3357 { (
yyvÆ
.
ivÆ
Ë
FSA_INDEXED
;}

3363 { (
yyvÆ
.
ivÆ
Ë
FSA_TARGET
;}

3369 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3375 { (
yyvÆ
.
ivÆ
Ë
FSA_VALUE
;}

3381 { (
yyvÆ
.
ivÆ
Ë
FSA_BLOCKING
;}

3387 { (
yyvÆ
.
ivÆ
Ë
FSA_HIGHWATER
;}

3393 { (
yyvÆ
.
ivÆ
Ë
FSA_IOSIZE
;}

3399 { (
yyvÆ
.
ivÆ
Ë
FSA_NOREADAHEAD
;}

3405 { (
yyvÆ
.
ivÆ
Ë
FSA_RATE
;}

3411 { (
yyvÆ
.
ivÆ
Ë
FSA_MASTER
;}

3417 { (
yyvÆ
.
ivÆ
Ë
FSA_CLIENT
;}

3424 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3432 
©å_t
 *
©å
 = 
NULL
;

3433 
©å_t
 *
li°_íd
 = 
NULL
;

3435 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3436 
©å
 =áâr->
©å_√xt
)

3437 
li°_íd
 = 
©å
;

3439 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3441 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3449 
©å_t
 *
©å
 = 
NULL
;

3450 
©å_t
 *
li°_íd
 = 
NULL
;

3452 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3453 
©å
 =áâr->
©å_√xt
)

3454 
li°_íd
 = 
©å
;

3456 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3458 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3466 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3467 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3475 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
)))Ë=
NULL
)

3476 
YYERROR
;

3484 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
)))Ë=
NULL
)

3485 
YYERROR
;

3493 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyv•[-1].svÆ)))Ë=
NULL
)

3494 
YYERROR
;

3502 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3503 
YYERROR
;

3511 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_v¨
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3512 
YYERROR
;

3520 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_Æloc_loˇl
((
yyv•
[0].
svÆ
)))Ë=
NULL
)

3521 
YYERROR
;

3529 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

3530 
YYERROR
;

3531 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_composôe_Êow›_deföe
;

3532 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

3533 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

3541 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

3549 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3557 
©å_t
 *
©å
 = 
NULL
;

3558 
©å_t
 *
li°_íd
 = 
NULL
;

3560 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3561 
©å
 =áâr->
©å_√xt
)

3562 
li°_íd
 = 
©å
;

3564 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3566 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3574 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3575 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3582 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3588 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3595 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3596 i‡(!(
yyvÆ
.
©å
))

3597 
YYERROR
;

3598 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

3606 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3607 i‡(!(
yyvÆ
.
©å
))

3608 
YYERROR
;

3609 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[-1].
svÆ
));

3617 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3618 i‡(!(
yyvÆ
.
©å
))

3619 
YYERROR
;

3620 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3628 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3629 i‡(!(
yyvÆ
.
©å
))

3630 
YYERROR
;

3631 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
((
yyv•
[0].
bvÆ
));

3639 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3640 i‡(!(
yyvÆ
.
©å
))

3641 
YYERROR
;

3642 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3650 (
yyvÆ
.
avd
Ë
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3658 (
yyvÆ
.
avd
Ë
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3679 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

3681 
	`YYPOPSTACK
 (
yyÀn
);

3682 
yyÀn
 = 0;

3683 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3685 *++
yyv•
 = 
yyvÆ
;

3691 c⁄° 
yylhs
 = 
yyr1
[
yyn
] - 
YYNTOKENS
;

3692 c⁄° 
yyi
 = 
yypgŸo
[
yylhs
] + *
yys•
;

3693 
yy°©e
 = (0 <
yyi
 && yyò<
YYLAST
 && 
yycheck
[yyi] =*
yys•


3694 ? 
yyèbÀ
[
yyi
]

3695 : 
yydefgŸo
[
yylhs
]);

3698 
yy√w°©e
;

3704 
yyîæab
:

3707 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

3710 i‡(!
yyîr°©us
)

3712 ++
yy√ºs
;

3713 #i‡! 
YYERROR_VERBOSE


3714 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

3716 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

3717 
yys•
, 
yytokí
)

	)

3719 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

3720 
yysy¡ax_îr‹_°©us
;

3721 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3722 i‡(
yysy¡ax_îr‹_°©us
 == 0)

3723 
yymsgp
 = 
yymsg
;

3724 i‡(
yysy¡ax_îr‹_°©us
 == 1)

3726 i‡(
yymsg
 !
yymsgbuf
)

3727 
	`YYSTACK_FREE
 (
yymsg
);

3728 
yymsg
 = 
	`YY_CAST
 (*, 
	`YYSTACK_ALLOC
 (YY_CAST (
YYSIZE_T
, 
yymsg_Æloc
)));

3729 i‡(!
yymsg
)

3731 
yymsg
 = 
yymsgbuf
;

3732 
yymsg_Æloc
 =  
yymsgbuf
;

3733 
yysy¡ax_îr‹_°©us
 = 2;

3737 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3738 
yymsgp
 = 
yymsg
;

3741 
	`yyîr‹
 (
yymsgp
);

3742 i‡(
yysy¡ax_îr‹_°©us
 == 2)

3743 
yyexhau°edœb
;

3745 #unde‡
YYSYNTAX_ERROR


3751 i‡(
yyîr°©us
 == 3)

3756 i‡(
yych¨
 <
YYEOF
)

3759 i‡(
yych¨
 =
YYEOF
)

3760 
YYABORT
;

3764 
	`yyde°ru˘
 ("Error: discarding",

3765 
yytokí
, &
yylvÆ
);

3766 
yych¨
 = 
YYEMPTY
;

3772 
yyîæab1
;

3778 
yyîr‹œb
:

3782 
YYERROR
;

3786 
	`YYPOPSTACK
 (
yyÀn
);

3787 
yyÀn
 = 0;

3788 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3789 
yy°©e
 = *
yys•
;

3790 
yyîæab1
;

3796 
yyîæab1
:

3797 
yyîr°©us
 = 3;

3801 
yyn
 = 
yy∑˘
[
yy°©e
];

3802 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

3804 
yyn
 +
YYTERROR
;

3805 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

3807 
yyn
 = 
yyèbÀ
[yyn];

3808 i‡(0 < 
yyn
)

3814 i‡(
yys•
 =
yyss
)

3815 
YYABORT
;

3818 
	`yyde°ru˘
 ("Error:Öopping",

3819 
yy°os
[
yy°©e
], 
yyv•
);

3820 
	`YYPOPSTACK
 (1);

3821 
yy°©e
 = *
yys•
;

3822 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3825 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


3826 *++
yyv•
 = 
yylvÆ
;

3827 
YY_IGNORE_MAYBE_UNINITIALIZED_END


3831 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

3833 
yy°©e
 = 
yyn
;

3834 
yy√w°©e
;

3840 
yyac˚±œb
:

3841 
yyªsu…
 = 0;

3842 
yyªtu∫
;

3848 
yyab‹éab
:

3849 
yyªsu…
 = 1;

3850 
yyªtu∫
;

3853 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


3857 
yyexhau°edœb
:

3858 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

3859 
yyªsu…
 = 2;

3867 
yyªtu∫
:

3868 i‡(
yych¨
 !
YYEMPTY
)

3872 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

3873 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

3874 
yytokí
, &
yylvÆ
);

3878 
	`YYPOPSTACK
 (
yyÀn
);

3879 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3880 
yys•
 !
yyss
)

3882 
	`yyde°ru˘
 ("Cleanup:Öopping",

3883 
yy°os
[+*
yys•
], 
yyv•
);

3884 
	`YYPOPSTACK
 (1);

3886 #i‚de‡
yyovîÊow


3887 i‡(
yyss
 !
yysß
)

3888 
	`YYSTACK_FREE
 (
yyss
);

3890 #i‡
YYERROR_VERBOSE


3891 i‡(
yymsg
 !
yymsgbuf
)

3892 
	`YYSTACK_FREE
 (
yymsg
);

3894  
yyªsu…
;

3895 
	}
}

3908 
	#USAGE
 \

3911 " Fûebích vîsi⁄ " 
FILEBENCH_VERSION
 "\n\n" \

3920 " -¯[cv¨ty≥] di•œy o±i⁄†o‡thê•ecifi¯cv¨Åy≥\n\n"

	)

3923 
	$ußge_exô
(
ªt
, c⁄° *
msg
)

3925 i‡(
ªt
) {

3926 ()
	`Ârötf
(
°dîr
, "Ußgêîr‹: %s\n\n", 
msg
);

3927 ()
	`Ârötf
(
°dîr
, 
USAGE
);

3929 
	`¥ötf
(
USAGE
);

3930 
	`exô
(
ªt
);

3931 
	}
}

3933 
	sfb∑øms
 {

3934 *
	mexe˙ame
;

3935 *
	mfs¸ùäame
;

3936 *
	m¥o˙ame
;

3937 *
	mshmaddr
;

3938 *
	mshm∑th
;

3939 
	mö°™˚
;

3940 *
	mcv¨ty≥
;

3944 
	$öô_fb∑øms
(
fb∑øms
 *fbparams)

3946 
	`mem£t
(
fb∑øms
, 0, (*fbparams));

3947 
fb∑øms
->
ö°™˚
 = -1;

3948 
	}
}

3950 
	#FB_MODE_NONE
 0

	)

3951 
	#FB_MODE_HELP
 1

	)

3952 
	#FB_MODE_MASTER
 2

	)

3953 
	#FB_MODE_WORKER
 3

	)

3954 
	#FB_MODE_CVARS
 4

	)

3957 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], 
fb∑øms
 *fbparams)

3959 c⁄° 
cmd_›ti⁄s
[] = "m:s:a:i:hf:c:";

3960 
mode
 = 
FB_MODE_NONE
;

3961 
›t
;

3963 
	`öô_fb∑øms
(
fb∑øms
);

3964 
fb∑øms
->
exe˙ame
 = 
¨gv
[0];

3973 
›ãº
 = 0;

3981 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
cmd_›ti⁄s
)) > 0) {

3982 
›t
) {

3985 i‡(
mode
 !
FB_MODE_NONE
)

3986 
	`ußge_exô
(1, "Too many options specified");

3987 
mode
 = 
FB_MODE_HELP
;

3990 i‡(
mode
 !
FB_MODE_NONE
)

3991 
	`ußge_exô
(1, "Too many options specified");

3992 
mode
 = 
FB_MODE_CVARS
;

3993 
fb∑øms
->
cv¨ty≥
 = 
›èrg
;

3996 i‡(
mode
 !
FB_MODE_NONE
)

3997 
	`ußge_exô
(1, "Too many options specified");

3998 
mode
 = 
FB_MODE_MASTER
;

3999 
fb∑øms
->
fs¸ùäame
 = 
›èrg
;

4003 i‡(
mode
 !
FB_MODE_NONE
 &&

4004 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
¥o˙ame
))

4005 
	`ußge_exô
(1, "Too many options");

4006 
mode
 = 
FB_MODE_WORKER
;

4007 
fb∑øms
->
¥o˙ame
 = 
›èrg
;

4010 i‡(
mode
 !
FB_MODE_NONE
 &&

4011 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shmaddr
))

4012 
	`ußge_exô
(1, "Too many options");

4013 
mode
 = 
FB_MODE_WORKER
;

4014 
	`ssˇnf
(
›èrg
, "%p", &
fb∑øms
->
shmaddr
);

4017 i‡(
mode
 !
FB_MODE_NONE
 &&

4018 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shm∑th
))

4019 
	`ußge_exô
(1, "Too many options");

4020 
mode
 = 
FB_MODE_WORKER
;

4021 
fb∑øms
->
shm∑th
 = 
›èrg
;

4024 i‡(
mode
 !
FB_MODE_NONE
 &&

4025 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
ö°™˚
 != -1))

4026 
	`ußge_exô
(1, "Too many options");

4027 
mode
 = 
FB_MODE_WORKER
;

4028 
	`ssˇnf
(
›èrg
, "%d", &
fb∑øms
->
ö°™˚
);

4031 i‡(
›t›t
 == 'c') {

4032 i‡(
mode
 !
FB_MODE_NONE
)

4033 
	`ußge_exô
(1, "Too many options");

4034 
mode
 = 
FB_MODE_CVARS
;

4038 
	`ußge_exô
(1, "Unrecognized option");

4043 i‡(
mode
 =
FB_MODE_NONE
)

4044 
	`ußge_exô
(1, "NoÑuntime options specified");

4046 i‡(
mode
 =
FB_MODE_WORKER
) {

4047 i‡(!
fb∑øms
->
¥o˙ame
 ||

4048 !
fb∑øms
->
shmaddr
 ||

4049 !
fb∑øms
->
shm∑th
 ||

4050 
fb∑øms
->
ö°™˚
 == -1)

4051 
	`ußge_exô
(1, "Invalid worker settings");

4054  
mode
;

4055 
	}
}

4058 
	$w‹kî_mode
(
fb∑øms
 *fbparams)

4060 
ªt
;

4062 
ªt
 = 
	`ùc_©èch
(
fb∑øms
->
shmaddr
, fb∑øms->
shm∑th
);

4063 i‡(
ªt
 < 0) {

4064 
	`fûebích_log
(
LOG_FATAL
, "Cannotáttach shm for %s",

4065 
fb∑øms
->
¥o˙ame
);

4066 
	`exô
(1);

4070 
	`Êow›_öô
(0);

4073 
ªt
 = 
	`öô_cv¨_libørõs
();

4074 i‡(
ªt
)

4075 
	`exô
(1);

4077 
ªt
 = 
	`ªvÆid©e_cv¨_h™dÀs
();

4078 i‡(
ªt
)

4079 
	`exô
(1);

4082 
ªt
 = 
	`¥ocÊow_exec
(
fb∑øms
->
¥o˙ame
, fb∑øms->
ö°™˚
);

4083 i‡(
ªt
 < 0) {

4084 
	`fûebích_log
(
LOG_FATAL
, "Cannot startupÖrocess %s",

4085 
fb∑øms
->
¥o˙ame
);

4086 
	`exô
(1);

4089 
	`exô
(0);

4090 
	}
}

4092 
	$∑r£r_li°_cv¨_ty≥s
()

4094 
cv¨_libøry_öfo_t
 *
t
;

4096 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

4097 
	`¥ötf
("No custom variables supported.\n");

4101 
	`¥ötf
("Custom variableÅypes supported:\n");

4102 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å;Å =Å->
√xt
)

4103 
	`¥ötf
(" %s\n", 
t
->
ty≥
);

4106 
	}
}

4108 
	$∑r£r_li°_cv¨_ty≥_∑ømëîs
(*
ty≥
)

4110 c⁄° *
vîsi⁄
 = 
NULL
;

4111 c⁄° *
ußge
 = 
NULL
;

4113 
cv¨_libøry_öfo_t
 *
t
;

4115 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

4116 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

4120 i‡(!
t
) {

4121 
	`¥ötf
("Unknow¿cu°om v¨übÀÅy≥ %s.\n", 
ty≥
);

4125 
	`¥ötf
("Cu°om v¨übÀÅy≥: %s\n", 
t
->
ty≥
);

4126 
	`¥ötf
("Suµ‹tögÜibøry: %s\n", 
t
->
fûíame
);

4128 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_vîsi⁄
)

4129 
vîsi⁄
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_vîsi⁄
();

4131 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_ußge
)

4132 
ußge
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_ußge
();

4135 i‡(
vîsi⁄
)

4136 
	`¥ötf
("Vîsi⁄: %s\n", 
vîsi⁄
);

4138 
	`¥ötf
("Oops. No version informationÖrovided.\n");

4140 i‡(
ußge
)

4141 
	`¥ötf
("Ußge:\n%s\n", 
ußge
);

4143 
	`¥ötf
("Oops. No usage informationÖrovided.\n");

4146 
	}
}

4149 
	$cv¨s_mode
(
fb∑øms
 *fbparams)

4151 
ªt
;

4153 
	`ùc_öô
();

4155 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBDATADIR
 "/cvars");

4156 i‡(
ªt
)

4157 
	`fûebích_shutdown
(1);

4159 
ªt
 = 
	`öô_cv¨_libørõs
();

4160 i‡(
ªt
)

4161 
	`fûebích_shutdown
(1);

4163 i‡(
fb∑øms
->
cv¨ty≥
)

4164 
	`∑r£r_li°_cv¨_ty≥_∑ømëîs
(
fb∑øms
->
cv¨ty≥
);

4166 
	`∑r£r_li°_cv¨_ty≥s
();

4168 
	`ùc_föi
();

4170 
	`exô
(0);

4171 
	}
}

4177 
	$∑r£r_ab‹t
(
¨g
)

4179 (Ë
	`sigign‹e
(
SIGINT
);

4180 
	`fûebích_log
(
LOG_INFO
, "Aborting...");

4181 
	`fûebích_shutdown
(1);

4182 
	}
}

4185 
	$ma°î_mode
(
fb∑øms
 *fbparams) {

4186 
ªt
;

4188 
	`¥ötf
("Fûebích Vîsi⁄ %s\n", 
FILEBENCH_VERSION
);

4190 
yyö
 = 
	`f›í
(
fb∑øms
->
fs¸ùäame
, "r");

4191 i‡(!
yyö
) {

4192 
	`fûebích_log
(
LOG_FATAL
,

4193 "C™nŸ o≥¿fûê%s!", 
fb∑øms
->
fs¸ùäame
);

4194 
	`exô
(1);

4197 
exe˙ame
 = 
fb∑øms
->execname;

4198 
	`fb_£t_shmmax
();

4200 
	`ùc_öô
();

4203 ()
	`°r˝y
(
fûebích_shm
->
shm_fs¸ùäame
,

4204 
fb∑øms
->
fs¸ùäame
);

4206 
	`Êow›_öô
(1);

4207 
	`evítgí_öô
();

4210 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBDATADIR
 "/cvars");

4211 i‡(
ªt
)

4212 
	`fûebích_shutdown
(1);

4214 
ªt
 = 
	`öô_cv¨_libørõs
();

4215 i‡(
ªt
)

4216 
	`fûebích_shutdown
(1);

4218 
	`sig«l
(
SIGINT
, 
∑r£r_ab‹t
);

4221 
	`yy∑r£
();

4226 
	`¥ötf
("Warning:ÇoÑun command inÅhe WML script!\n");

4227 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

4228 
	}
}

4231 
	$öô_comm⁄
()

4233 
	`dißbÀ_a¶r
();

4234 
my_pid
 = 
	`gëpid
();

4235 
	`fb_£t_æimô
();

4236 
	}
}

4253 
	$maö
(
¨gc
, *
¨gv
[])

4255 
fb∑øms
 fbparams;

4256 
mode
;

4259 
mode
 = 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, &
fb∑øms
);

4261 i‡(
mode
 =
FB_MODE_HELP
)

4262 
	`ußge_exô
(0, 
NULL
);

4264 i‡(
mode
 =
FB_MODE_CVARS
)

4265 
	`cv¨s_mode
(&
fb∑øms
);

4267 
	`öô_comm⁄
();

4269 i‡(
mode
 =
FB_MODE_MASTER
)

4270 
	`ma°î_mode
(&
fb∑øms
);

4272 i‡(
mode
 =
FB_MODE_WORKER
)

4273 
	`w‹kî_mode
(&
fb∑øms
);

4277 
	}
}

4285 
	$∑r£r_li°2°rög
(
li°_t
 *
li°
)

4287 
li°_t
 *
l
;

4288 *
°rög
;

4289 *
tmp
;

4291 
°rög
 = 
	`mÆloc
(
MAXPATHLEN
);

4292 i‡(!
°rög
) {

4293 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate memory");

4294  
NULL
;

4297 *
°rög
 = 0;

4300 
l
 = 
li°
;Ü !
NULL
;Ü =Ü->
li°_√xt
) {

4302 *
l°r
 = 
	`avd_gë_°r
(
l
->
li°_°rög
);

4304 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "c⁄vîtög såög '%s'", 
l°r
);

4307 i‡(
l
->
li°_öãgî
) {

4308 
fböt_t
 
∑øm_«me
;

4310 
tmp
 = 
NULL
;

4311 
∑øm_«me
 = 
	`avd_gë_öt
(
l
->
li°_öãgî
);

4313 
∑øm_«me
) {

4314 
FSS_TYPE
:

4315 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4316 
RAND_PARAM_TYPE
);

4319 
FSS_SRC
:

4320 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4321 
RAND_PARAM_SRC
);

4324 
FSS_SEED
:

4325 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4326 
RAND_PARAM_SEED
);

4329 
FSS_MIN
:

4330 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4331 
RAND_PARAM_MIN
);

4334 
FSS_MEAN
:

4335 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4336 
RAND_PARAM_MEAN
);

4339 
FSS_GAMMA
:

4340 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4341 
RAND_PARAM_GAMMA
);

4344 
FSS_ROUND
:

4345 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4346 
RAND_PARAM_ROUND
);

4350 i‡(
tmp
) {

4351 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4352 
	`‰ì
(
tmp
);

4354 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4358 i‡((
tmp
 = 
	`v¨_to_°rög
(
l°r
)Ë!
NULL
) {

4359 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4360 
	`‰ì
(
tmp
);

4362 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4367  
°rög
;

4368 
	}
}

4377 
avd_t


4378 
	$∑r£r_li°2v¨°rög
(
li°_t
 *
li°
)

4380 *
l°r
 = 
	`avd_gë_°r
(
li°
->
li°_°rög
);

4383 i‡((
li°
->
li°_√xt
 =
NULL
Ë&& (*
l°r
 == '$'))

4384  
	`avd_v¨_Æloc
(
l°r
);

4386  (
	`avd_°r_Æloc
(
	`∑r£r_li°2°rög
(
li°
)));

4387 
	}
}

4396 
avd_t


4397 
	$∑r£r_li°2avd
(
li°_t
 *
li°
)

4399 
avd_t
 
avd
;

4400 *
l°r
;

4402 i‡(
li°
 && ((
l°r
 = 
	`avd_gë_°r
÷i°->
li°_°rög
)Ë!
NULL
)) {

4403 
avd
 = 
	`avd_v¨_Æloc
(
l°r
);

4404  (
avd
);

4407  (
NULL
);

4408 
	}
}

4415 
	$∑r£r_evítgí
(
cmd_t
 *
cmd
)

4417 
©å_t
 *
©å
;

4420 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RATE
))) {

4421 i‡(
©å
->
©å_avd
) {

4422 
	`evítgí_£å©e
(
©å
->
©å_avd
);

4425 
	}
}

4432 
	$∑r£r_fûe£t_li°
(
cmd_t
 *
cmd
)

4434 (Ë
	`fûe£t_ôî
(
fûe£t_¥öt
);

4435 
	}
}

4441 
	$∑r£r_Êow›_li°
(
cmd_t
 *
cmd
)

4443 
	`Êow›_¥öèŒ
();

4444 
	}
}

4455 
	$∑r£r_¥oc_deföe
(
cmd_t
 *
cmd
)

4457 
¥ocÊow_t
 *
¥ocÊow
;

4458 *
«me
 = 
NULL
;

4459 
©å_t
 *
©å
;

4460 
avd_t
 
v¨_ö°™˚s
;

4461 
fböt_t
 
ö°™˚s
;

4462 
cmd_t
 *
ö√r_cmd
;

4464 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4465 i‡(
©å
)

4466 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4468 
	`fûebích_log
(
LOG_ERROR
, "process specifiesÇoÇame");

4469 
	`fûebích_shutdown
(1);

4472 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4473 i‡(
©å
) {

4474 
v¨_ö°™˚s
 = 
©å
->
©å_avd
;

4475 
ö°™˚s
 = 
	`avd_gë_öt
(
v¨_ö°™˚s
);

4476 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4477 "Sëtög in°™˚†%Œu", (
u_l⁄gl⁄g_t
)
ö°™˚s
);

4479 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4481 
v¨_ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4482 
ö°™˚s
 = 1;

4485 
¥ocÊow
 = 
	`¥ocÊow_deföe
(
«me
, 
v¨_ö°™˚s
);

4486 i‡(!
¥ocÊow
) {

4487 
	`fûebích_log
(
LOG_ERROR
,

4489 
ö°™˚s
, 
«me
);

4490 
	`fûebích_shutdown
(1);

4493 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NICE
);

4494 i‡(
©å
) {

4495 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri = %llu",

4496 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
©å
->
©å_avd
));

4497 
¥ocÊow
->
pf_ni˚
 = 
©å
->
©å_avd
;

4499 
¥ocÊow
->
pf_ni˚
 = 
	`avd_öt_Æloc
(0);

4502 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4503 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4504 
	`∑r£r_thªad_deföe
(
ö√r_cmd
, 
¥ocÊow
);

4505 
	}
}

4518 
	$∑r£r_thªad_deföe
(
cmd_t
 *
cmd
, 
¥ocÊow_t
 *
¥ocÊow
)

4520 
thªadÊow_t
 *
thªadÊow
, 
ãm∂©e
;

4521 
©å_t
 *
©å
;

4522 
avd_t
 
ö°™˚s
;

4523 
cmd_t
 *
ö√r_cmd
;

4524 *
«me
 = 
NULL
;

4526 
	`mem£t
(&
ãm∂©e
, 0,  (
thªadÊow_t
));

4528 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4529 i‡(
©å
)

4530 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4532 
	`fûebích_log
(
LOG_ERROR
,

4534 
¥ocÊow
->
pf_«me
);

4535 
	`fûebích_shutdown
(1);

4538 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4539 i‡(
©å
)

4540 
ö°™˚s
 = 
©å
->
©å_avd
;

4542 
ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4544 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MEMSIZE
);

4545 i‡(
©å
)

4546 
ãm∂©e
.
tf_memsize
 = 
©å
->
©å_avd
;

4548 
ãm∂©e
.
tf_memsize
 = 
	`avd_öt_Æloc
(0);

4550 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOPRIO
);

4551 i‡(
©å
)

4552 
ãm∂©e
.
tf_i›rio
 = 
©å
->
©å_avd
;

4554 
ãm∂©e
.
tf_i›rio
 = 
	`avd_öt_Æloc
(8);

4557 
thªadÊow
 = 
	`thªadÊow_deföe
(
¥ocÊow
, 
«me
, &
ãm∂©e
, 
ö°™˚s
);

4558 i‡(!
thªadÊow
) {

4559 
	`fûebích_log
(
LOG_ERROR
,

4561 
	`fûebích_shutdown
(1);

4564 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_USEISM
);

4565 i‡(
©å
)

4566 
thªadÊow
->
tf_©ås
 |
THREADFLOW_USEISM
;

4569 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4570 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4571 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
thªadÊow
,

4572 &
thªadÊow
->
tf_thrd_f›s
, 
FLOW_MASTER
);

4573 
	}
}

4579 
	$∑r£r_Êow›_gë_©ås
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

4581 
©å_t
 *
©å
;

4584 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FILENAME
))) {

4585 
Êow›
->
fo_fûíame
 = 
©å
->
©å_avd
;

4586 i‡(
Êow›
->
fo_fûíame
 =
NULL
) {

4587 
	`fûebích_log
(
LOG_ERROR
,

4589 
	`fûebích_shutdown
(1);

4593 
Êow›
->
fo_fûíame
 = 
NULL
;

4597 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOSIZE
)))

4598 
Êow›
->
fo_iosize
 = 
©å
->
©å_avd
;

4600 
Êow›
->
fo_iosize
 = 
	`avd_öt_Æloc
(0);

4603 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WSS
)))

4604 
Êow›
->
fo_wss
 = 
©å
->
©å_avd
;

4606 
Êow›
->
fo_wss
 = 
	`avd_öt_Æloc
(0);

4609 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDOM
)))

4610 
Êow›
->
fo_øndom
 = 
©å
->
©å_avd
;

4612 
Êow›
->
fo_øndom
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4615 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DSYNC
)))

4616 
Êow›
->
fo_dsync
 = 
©å
->
©å_avd
;

4618 
Êow›
->
fo_dsync
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4621 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TARGET
)))

4622 (Ë
	`°r˝y
(
Êow›
->
fo_èrgë«me
,

4623 
	`avd_gë_°r
(
©å
->
©å_avd
));

4626 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

4627 
Êow›
->
fo_vÆue
 = 
©å
->
©å_avd
;

4629 
Êow›
->
fo_vÆue
 = 
	`avd_öt_Æloc
(0);

4632 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FD
))) {

4633 
Êow›
->
fo_fdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4634 i‡(
Êow›
->
fo_fûíame
 !
NULL
)

4635 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "It isÇot "

4641 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROTATEFD
)))

4642 
Êow›
->
fo_rŸ©efd
 = 
©å
->
©å_avd
;

4644 
Êow›
->
fo_rŸ©efd
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4647 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SRCFD
)))

4648 
Êow›
->
fo_§cfdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4651 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_BLOCKING
)))

4652 
Êow›
->
fo_blockög
 = 
©å
->
©å_avd
;

4654 
Êow›
->
fo_blockög
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4657 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRECTIO
)))

4658 
Êow›
->
fo_dúe˘io
 = 
©å
->
©å_avd
;

4660 
Êow›
->
fo_dúe˘io
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4663 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_HIGHWATER
))) {

4664 
Êow›
->
fo_highw©î
 = 
©å
->
©å_avd
;

4665 i‡(
	`AVD_IS_RANDOM
(
©å
->
©å_avd
)) {

4666 
	`fûebích_log
(
LOG_ERROR
,

4668 
	`fûebích_shutdown
(1);

4671 
Êow›
->
fo_highw©î
 = 
	`avd_öt_Æloc
(1);

4675 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INDEXED
)))

4676 
Êow›
->
fo_fûeödex
 = 
©å
->
©å_avd
;

4678 
Êow›
->
fo_fûeödex
 = 
NULL
;

4681 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NOREADAHEAD
)))

4682 
Êow›
->
fo_n‹ódahód
 = 
©å
->
©å_avd
;

4684 
Êow›
->
fo_n‹ódahód
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4687 
	}
}

4698 
	$∑r£r_ö√r_Êow›_deföe
(
thªadÊow_t
 *
thªad
, 
Êow›_t
 *
comp0_Êow
,

4699 
Êow›_t
 *
comp_m°r_Êow
)

4701 
Êow›_t
 *
ö√r_Êowty≥
, *
ö√r_Êow›
;

4704 
ö√r_Êowty≥
 = 
comp0_Êow
->
fo_comp_f›s
;

4705 
comp_m°r_Êow
->
fo_comp_f›s
 = 
NULL
;

4707 
ö√r_Êowty≥
) {

4708 
fuŒ«me
[
MAXPATHLEN
];

4711 
	`¢¥ötf
(
fuŒ«me
, 
MAXPATHLEN
, "%s.%s",

4712 
comp_m°r_Êow
->
fo_«me
, 
ö√r_Êowty≥
->fo_name);

4714 i‡((
ö√r_Êow›
 = 
	`Êow›_deföe
(
thªad
, 
fuŒ«me
,

4715 
ö√r_Êowty≥
, &
comp_m°r_Êow
->
fo_comp_f›s
,

4716 
FLOW_MASTER
, 0)Ë=
NULL
) {

4717 
	`fûebích_log
(
LOG_ERROR
,

4719 
fuŒ«me
);

4720 
	`fûebích_shutdown
(1);

4724 i‡(
ö√r_Êow›
->
fo_fûíame
) {

4725 *
«me
;

4728 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_fûíame
,

4729 
comp_m°r_Êow
->
fo_lv¨_li°
);

4732 
«me
 = 
	`avd_gë_°r
(
ö√r_Êow›
->
fo_fûíame
);

4733 i‡(
«me
) {

4735 
ö√r_Êow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

4737 i‡(
ö√r_Êow›
->
fo_fûe£t
 =
NULL
) {

4738 
	`fûebích_log
(
LOG_ERROR
,

4740 
ö√r_Êow›
->
fo_«me
, 
«me
);

4741 
	`fûebích_shutdown
(1);

4747 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4748 
comp_m°r_Êow
->
fo_lv¨_li°
);

4751 i‡(
ö√r_Êowty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4752 
v¨_t
 *
√wlv¨
, *
¥Ÿo_lv¨s
, *
lv¨_±r
;

4754 
¥Ÿo_lv¨s
 = 
ö√r_Êow›
->
fo_lv¨_li°
;

4755 
ö√r_Êow›
->
fo_lv¨_li°
 = 0;

4757 
lv¨_±r
 = 
ö√r_Êowty≥
->
fo_lv¨_li°
;Üvar_ptr;

4758 
lv¨_±r
 =Üv¨_±r->
v¨_√xt
) {

4760 i‡((
√wlv¨
 = 
	`v¨_lv¨_Æloc_loˇl
(

4761 
lv¨_±r
->
v¨_«me
)Ë!
NULL
) {

4763 
	`add_lv¨_to_li°
(
√wlv¨
,

4764 &
ö√r_Êow›
->
fo_lv¨_li°
);

4766 
	`v¨_upd©e_comp_lv¨s
(
√wlv¨
,

4767 
¥Ÿo_lv¨s
,

4768 
comp_m°r_Êow
->
fo_lv¨_li°
);

4772 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4773 
ö√r_Êowty≥
,

4774 
ö√r_Êow›
);

4776 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4780 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_iosize
,

4781 
comp_m°r_Êow
->
fo_lv¨_li°
);

4782 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_wss
,

4783 
comp_m°r_Êow
->
fo_lv¨_li°
);

4784 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4785 
comp_m°r_Êow
->
fo_lv¨_li°
);

4786 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_vÆue
,

4787 
comp_m°r_Êow
->
fo_lv¨_li°
);

4788 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_øndom
,

4789 
comp_m°r_Êow
->
fo_lv¨_li°
);

4790 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dsync
,

4791 
comp_m°r_Êow
->
fo_lv¨_li°
);

4792 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_rŸ©efd
,

4793 
comp_m°r_Êow
->
fo_lv¨_li°
);

4794 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_blockög
,

4795 
comp_m°r_Êow
->
fo_lv¨_li°
);

4796 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dúe˘io
,

4797 
comp_m°r_Êow
->
fo_lv¨_li°
);

4798 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_highw©î
,

4799 
comp_m°r_Êow
->
fo_lv¨_li°
);

4801 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4803 
	}
}

4833 
	$∑r£r_Êow›_deföe
(
cmd_t
 *
cmd
, 
thªadÊow_t
 *
thªad
,

4834 
Êow›_t
 **
Êow›li°_hdp
, 
ˇãg‹y
)

4836 
Êow›_t
 *
Êow›
, *
Êow›_ty≥
;

4837 *
ty≥
 = (*)
cmd
->
cmd_«me
;

4838 *
«me
 = 
NULL
;

4839 
©å_t
 *
©å
;

4842 
Êow›_ty≥
 = 
	`Êow›_föd
(
ty≥
);

4843 i‡(
Êow›_ty≥
 =
NULL
) {

4844 
	`fûebích_log
(
LOG_ERROR
,

4846 
ty≥
);

4847 
	`fûebích_shutdown
(1);

4851 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4852 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4854 
	`fûebích_log
(
LOG_ERROR
,

4856 
Êow›_ty≥
->
fo_«me
);

4857 
	`fûebích_shutdown
(1);

4860 i‡((
Êow›
 = 
	`Êow›_deföe
(
thªad
, 
«me
,

4861 
Êow›_ty≥
, 
Êow›li°_hdp
, 
ˇãg‹y
, 0)Ë=
NULL
) {

4862 
	`fûebích_log
(
LOG_ERROR
,

4864 
cmd
->
cmd_«me
);

4865 
	`fûebích_shutdown
(1);

4869 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4870 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4872 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4876 i‡(
Êow›_ty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4877 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4878 i‡(
ˇãg‹y
 =
FLOW_MASTER
)

4879 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4880 
Êow›_ty≥
, 
Êow›
);

4883 
	`∑r£r_Êow›_gë_©ås
(
cmd
, 
Êow›
);

4885 
	}
}

4888 
	$∑r£r_composôe_Êow›_deföe
(
cmd_t
 *
cmd
)

4890 
Êow›_t
 *
Êow›
;

4891 
cmd_t
 *
ö√r_cmd
;

4892 *
«me
 = 
NULL
;

4893 
©å_t
 *
©å
;

4896 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4897 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4899 
	`fûebích_log
(
LOG_ERROR
,

4902 
	`fûebích_shutdown
(1);

4905 i‡((
Êow›
 = 
	`Êow›_√w_composôe_deföe
(
«me
)Ë=
NULL
) {

4906 
	`fûebích_log
(
LOG_ERROR
,

4908 
cmd
->
cmd_«me
);

4909 
	`fûebích_shutdown
(1);

4913 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4916 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4917 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4919 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4922 
ö√r_cmd
 = 
cmd
->
cmd_li°
; i¬î_cmd !
NULL
;

4923 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
) {

4924 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
NULL
,

4925 &
Êow›
->
fo_comp_f›s
, 
FLOW_INNER_DEF
);

4927 
	}
}

4936 
fûe£t_t
 *

4937 
	$∑r£r_fûe£t_deföe_comm⁄
(
cmd_t
 *
cmd
)

4939 
fûe£t_t
 *
fûe£t
;

4940 
©å_t
 *
©å
;

4941 
avd_t
 
«me
;

4942 
avd_t
 
∑th
;

4944 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4945 i‡(
©å
)

4946 
«me
 = 
©å
->
©å_avd
;

4948 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÇame");

4949  
NULL
;

4952 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PATH
);

4953 i‡(
©å
)

4954 
∑th
 = 
©å
->
©å_avd
;

4956 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÖath");

4957  
NULL
;

4960 
fûe£t
 = 
	`fûe£t_deföe
(
«me
, 
∑th
);

4961 i‡(!
fûe£t
) {

4962 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file[set] %s\n",

4963 
	`avd_gë_°r
(
«me
));

4964  
NULL
;

4967 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PREALLOC
);

4968 i‡(
©å
)

4969 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
©å
->
©å_avd
;

4971 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
	`avd_öt_Æloc
(0);

4973 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARALLOC
);

4974 i‡(
©å
)

4975 
fûe£t
->
fs_∑øŒoc
 = 
©å
->
©å_avd
;

4977 
fûe£t
->
fs_∑øŒoc
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4979 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_READONLY
);

4980 i‡(
©å
)

4981 
fûe£t
->
fs_ªad⁄ly
 = 
©å
->
©å_avd
;

4983 
fûe£t
->
fs_ªad⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4985 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WRITEONLY
);

4986 i‡(
©å
)

4987 
fûe£t
->
fs_wrôe⁄ly
 = 
©å
->
©å_avd
;

4989 
fûe£t
->
fs_wrôe⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4991 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_REUSE
);

4992 i‡(
©å
)

4993 
fûe£t
->
fs_ªu£
 = 
©å
->
©å_avd
;

4995 
fûe£t
->
fs_ªu£
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4998 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TRUSTTREE
);

4999 i‡(
©å
 )

5000 
fûe£t
->
fs_åu°_åì
 = 
©å
->
©å_avd
;

5002 
fûe£t
->
fs_åu°_åì
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

5004 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SIZE
);

5005 i‡(
©å
)

5006 
fûe£t
->
fs_size
 = 
©å
->
©å_avd
;

5008 
fûe£t
->
fs_size
 = 
	`avd_öt_Æloc
(1024);

5010  
fûe£t
;

5011 
	}
}

5014 
	$∑r£r_fûe_deföe
(
cmd_t
 *
cmd
)

5016 
fûe£t_t
 *
fûe£t
;

5018 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

5019 i‡(!
fûe£t
) {

5020 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file");

5021 
	`fûebích_shutdown
(1);

5026 
fûe£t
->
fs_©ås
 = 
FILESET_IS_FILE
;

5027 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(1);

5029 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(10);

5030 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(0);

5031 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

5032 
	}
}

5035 
	$∑r£r_fûe£t_deföe
(
cmd_t
 *
cmd
)

5037 
fûe£t_t
 *
fûe£t
;

5038 
©å_t
 *
©å
;

5040 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

5041 i‡(!
fûe£t
) {

5042 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate fileset");

5043 
	`fûebích_shutdown
(1);

5047 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ENTRIES
);

5048 i‡(
©å
)

5049 
fûe£t
->
fs_íåõs
 = 
©å
->
©å_avd
;

5051 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(0);

5053 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_LEAFDIRS
);

5054 i‡(
©å
)

5055 
fûe£t
->
fs_Àafdús
 = 
©å
->
©å_avd
;

5057 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

5059 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRWIDTH
);

5060 i‡(
©å
)

5061 
fûe£t
->
fs_dúwidth
 = 
©å
->
©å_avd
;

5063 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo directory width");

5064 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(0);

5067 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRDEPTHRV
);

5068 i‡(
©å
)

5069 
fûe£t
->
fs_dúdïthrv
 = 
©å
->
©å_avd
;

5071 
fûe£t
->
fs_dúdïthrv
 = 
NULL
;

5073 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRGAMMA
);

5074 i‡(
©å
)

5075 
fûe£t
->
fs_dúgamma
 = 
©å
->
©å_avd
;

5077 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(1500);

5078 
	}
}

5086 
	$∑r£r_fûe£t_¸óã
(
cmd_t
 *
cmd
)

5088 
ªt
;

5090 
ªt
 = 
	`fûe£t_¸óã£ts
();

5091 i‡(
ªt
) {

5092 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo create filesets");

5093 
	`fûebích_shutdown
(1);

5095 
	}
}

5103 
	$∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
)

5105 
f_ab‹t
 = 
fûebích_shm
->
shm_f_ab‹t
;

5107 
	`ùc_föi
();

5109 i‡(
f_ab‹t
 =
FILEBENCH_ABORT_ERROR
)

5110 
	`fûebích_shutdown
(1);

5112 
	`fûebích_shutdown
(0);

5113 
	}
}

5121 
	$∑r£r_∑u£
(
±ime
)

5123 
time¶ït
 = 0;

5125 i‡(
±ime
) {

5126 
time¶ït
 < 
±ime
) {

5127 (Ë
	`¶ìp
(1);

5128 
time¶ït
++;

5129 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5136 (Ë
	`¶ìp
(1);

5137 
time¶ït
++;

5138 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5143  (
time¶ït
);

5144 
	}
}

5146 
	#TIMED_RUNTIME_DEFAULT
 60

	)

5147 
	#PERIOD_DEFAULT
 10

	)

5157 
	$∑r£r_run
(
cmd_t
 *
cmd
)

5159 
ru¡ime
;

5160 
time¶ït
;

5162 
ru¡ime
 = 
cmd
->
cmd_qty
;

5164 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5165 
	`¥oc_¸óã
();

5168 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5171 
	`fûebích_log
(
LOG_INFO
, "Running...");

5172 
	`°©s_˛ór
();

5175 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5176 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5178 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5180 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5181 
	`°©s_¢≠
();

5182 
	`¥oc_shutdown
();

5183 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5184 
	}
}

5187 
	$∑r£r_p§un
(
cmd_t
 *
cmd
)

5189 
ru¡ime
;

5190 
≥riod
;

5191 
time¶ït
 = 0;

5192 
ª£t_°©s
 = 0;

5194 
ru¡ime
 = 
cmd
->
cmd_qty
;

5201 i‡(
cmd
->
cmd_qty1
 < 0) {

5202 
≥riod
 = -
cmd
->
cmd_qty1
;

5203 
ª£t_°©s
 = 1;

5204 } i‡(
cmd
->
cmd_qty1
 > 0) {

5205 
≥riod
 = 
cmd
->
cmd_qty1
;

5206 
ª£t_°©s
 = 0;

5208 
≥riod
 = 
PERIOD_DEFAULT
;

5209 
ª£t_°©s
 = 0;

5212 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5213 
	`¥oc_¸óã
();

5216 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5219 
	`fûebích_log
(
LOG_INFO
, "Running...");

5220 
	`°©s_˛ór
();

5223 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5224 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5228 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
)

5229 
≥riod
 =Öîiod > (
ru¡ime
 - 
time¶ït
) ?

5230 (
ru¡ime
 - 
time¶ït
Ë: 
≥riod
;

5232 
time¶ït
 +
	`∑r£r_∑u£
(
≥riod
);

5234 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5237 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 &&

5238 
time¶ït
 >
ru¡ime
)

5241 
	`°©s_¢≠
();

5243 i‡(
ª£t_°©s
)

5244 
	`°©s_˛ór
();

5247 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5248 
	`°©s_¢≠
();

5249 
	`¥oc_shutdown
();

5250 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5251 
	}
}

5258 
	$∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
)

5260 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5261 
ru¡ime
;

5262 
time¶ït
;

5264 i‡(
öãgî
 =
NULL
) {

5265 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5266 
cmd
->
cmd_tgt1
);

5270 
ru¡ime
 = 
	`avd_gë_öt
(
öãgî
);

5272 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5273 
	`¥oc_¸óã
();

5276 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5279 
	`fûebích_log
(
LOG_INFO
, "Running...");

5280 
	`°©s_˛ór
();

5283 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5284 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5286 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5288 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5289 
	`°©s_¢≠
();

5290 
	`¥oc_shutdown
();

5291 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5292 
	}
}

5298 
	$∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
)

5300 
©å_t
 *
©å
;

5301 *
ma°î
;

5302 *
˛õ¡
;

5304 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MASTER
))) {

5305 
ma°î
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5307 
	`fûebích_log
(
LOG_ERROR
,

5312 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_CLIENT
))) {

5313 
˛õ¡
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5315 
	`fûebích_log
(
LOG_ERROR
,

5320 
	`mc_sync_›í_sock
(
ma°î
, 8001, 
˛õ¡
);

5321 
	}
}

5327 
	$∑r£r_domu…isync
(
cmd_t
 *
cmd
)

5329 
©å_t
 *
©å
;

5330 
fböt_t
 
vÆue
;

5332 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

5333 
vÆue
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

5335 
vÆue
 = 1;

5337 
	`mc_sync_synchr⁄ize
(()
vÆue
);

5338 
	}
}

5344 
	$∑r£r_¶ìp
(
cmd_t
 *
cmd
)

5346 
¶ì±ime
;

5347 
time¶ït
;

5350 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5353 
¶ì±ime
 = 
cmd
->
cmd_qty
;

5354 
	`fûebích_log
(
LOG_INFO
, "Sleeping...");

5356 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5358 
	`fûebích_log
(
LOG_INFO
, "SÀ± f‹ %d sec⁄ds...", 
time¶ït
);

5359 
	}
}

5366 
	$∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
)

5368 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5369 
¶ì±ime
;

5370 
time¶ït
;

5372 i‡(
öãgî
 =
NULL
) {

5373 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5374 
cmd
->
cmd_tgt1
);

5378 
¶ì±ime
 = 
	`avd_gë_öt
(
öãgî
);

5381 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5384 
	`fûebích_log
(
LOG_INFO
, "Running...");

5386 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5388 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5389 
	}
}

5398 
	$∑r£r_sy°em
(
cmd_t
 *
cmd
)

5400 *
°rög
;

5402 i‡(!
cmd
->
cmd_∑øm_li°
)

5405 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5407 i‡(!
°rög
)

5410 
	`fûebích_log
(
LOG_VERBOSE
, "Ru¬ög '%s'", 
°rög
);

5412 i‡(
	`sy°em
(
°rög
) < 0) {

5413 
	`fûebích_log
(
LOG_ERROR
,

5415 
	`°ªº‹
(
î∫o
));

5416 
	`‰ì
(
°rög
);

5417 
	`fûebích_shutdown
(1);

5420 
	`‰ì
(
°rög
);

5421 
	}
}

5427 
	$∑r£r_echo
(
cmd_t
 *
cmd
)

5429 *
°rög
;

5431 i‡(
cmd
->
cmd_∑øm_li°
 =
NULL
)

5434 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5436 i‡(
°rög
 =
NULL
)

5439 
	`fûebích_log
(
LOG_INFO
, "%s", 
°rög
);

5440 
	}
}

5446 
	$∑r£r_vîsi⁄
(
cmd_t
 *
cmd
)

5448 
	`fûebích_log
(
LOG_INFO
, "Fûebích Vîsi⁄: %s", 
FILEBENCH_VERSION
);

5449 
	}
}

5452 
	$∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
)

5454 
fûebích_shm
->
œthi°_íabÀd
 = 1;

5455 
	`fûebích_log
(
LOG_INFO
, "Latency histogramÉnabled");

5456 
	}
}

5462 
	$∑r£r_v¨_assign_øndom
(*
«me
, 
cmd_t
 *
cmd
)

5464 
ønddi°_t
 *
∫dp
;

5465 
©å_t
 *
©å
;

5467 
∫dp
 = 
	`ønddi°_Æloc
();

5468 i‡(!
∫dp
) {

5469 
	`fûebích_log
(
LOG_ERROR
,

5474 
∫dp
->
∫d_ty≥
 = 0;

5477 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSRC
))) {

5478 
ønd§c
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5480 
ønd§c
) {

5481 
FSV_URAND
:

5482 
∫dp
->
∫d_ty≥
 |
RAND_SRC_URANDOM
;

5484 
FSV_RAND48
:

5485 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5490 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5494 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5495 
∫dp
->
∫d_mö
 = 
©å
->
©å_avd
;

5497 
∫dp
->
∫d_mö
 = 
	`avd_öt_Æloc
(0);

5500 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5501 
∫dp
->
∫d_round
 = 
©å
->
©å_avd
;

5503 
∫dp
->
∫d_round
 = 
	`avd_öt_Æloc
(0);

5506 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDTABLE
))) {

5507 
∫dp
->
∫d_¥obèbs
 = (
¥obèbít_t
 *)(
©å
->
©å_obj
);

5508 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_TABLE
;

5511 
ønddi°_öô
;

5513 
∫dp
->
∫d_¥obèbs
 = 
NULL
;

5517 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
))) {

5518 
di°ty≥
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5520 
di°ty≥
) {

5521 
FSV_RANDUNI
:

5522 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_UNIFORM
;

5524 
FSA_RANDGAMMA
:

5525 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5527 
FSV_RANDTAB
:

5528 
	`fûebích_log
(
LOG_ERROR
,

5534 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5538 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSEED
)))

5539 
∫dp
->
∫d_£ed
 = 
©å
->
©å_avd
;

5541 
∫dp
->
∫d_£ed
 = 
	`avd_öt_Æloc
(0);

5544 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDGAMMA
)))

5545 
∫dp
->
∫d_gamma
 = 
©å
->
©å_avd
;

5547 
∫dp
->
∫d_gamma
 = 
	`avd_öt_Æloc
(1500);

5550 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDMEAN
))) {

5551 
∫dp
->
∫d_món
 = 
©å
->
©å_avd
;

5552 } i‡((
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
Ë=
RAND_TYPE_GAMMA
) {

5553 
∫dp
->
∫d_món
 = 
NULL
;

5555 
∫dp
->
∫d_món
 = 
	`avd_öt_Æloc
(0);

5558 
	`v¨_assign_øndom
(
«me
, 
∫dp
);

5560 
ønddi°_öô
:

5561 
	`ønddi°_öô
(
∫dp
);

5562 
	}
}

5568 
cmd_t
 *

5569 
	$Æloc_cmd
()

5571 
cmd_t
 *
cmd
;

5573 
cmd
 = 
	`mÆloc
((*cmd));

5574 i‡(!
cmd
) {

5575 
	`fûebích_log
(
LOG_ERROR
, "Alloc cmd failed");

5576  
NULL
;

5579 
	`mem£t
(
cmd
, 0,  (
cmd_t
));

5581  
cmd
;

5582 
	}
}

5588 
©å_t
 *

5589 
	$Æloc_©å
()

5591 
©å_t
 *
©å
;

5593 
©å
 = 
	`mÆloc
((*attr));

5594 i‡(!
©å
)

5595  (
NULL
);

5597 (Ë
	`mem£t
(
©å
, 0, (*attr));

5599  (
©å
);

5600 
	}
}

5606 
¥obèbít_t
 *

5607 
	$Æloc_¥obèbít
()

5609 
¥obèbít_t
 *
πe
;

5611 i‡((
πe
 = 
	`mÆloc
( (
¥obèbít_t
))Ë=
NULL
) {

5612  (
NULL
);

5615 (Ë
	`mem£t
(
πe
, 0,  (
¥obèbít_t
));

5616  (
πe
);

5617 
	}
}

5623 
©å_t
 *

5624 
	$Æloc_lv¨_©å
(
v¨_t
 *
v¨
)

5626 
©å_t
 *
©å
;

5628 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

5629  (
NULL
);

5631 
©å
->
©å_«me
 = 
FSA_LVAR_ASSIGN
;

5632 
©å
->
©å_avd
 = (
avd_t
)
v¨
;

5634  (
©å
);

5635 
	}
}

5646 
©å_t
 *

5647 
	$gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
)

5649 
©å_t
 *
©å
;

5650 
©å_t
 *
πn
 = 
NULL
;

5652 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5653 
©å
 =áâr->
©å_√xt
) {

5655 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

5657 
©å
->
©å_«me
,

5658 
«me
,

5659 
©å
->
©å_avd
);

5661 i‡(
©å
->
©å_«me
 =
«me
)

5662 
πn
 = 
©å
;

5665  
πn
;

5666 
	}
}

5674 
	$add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
)

5676 
v¨_t
 *
¥ev
;

5679 i‡(
√wlv¨
 =
fûebích_shm
->
shm_v¨_loc_li°
) {

5681 
fûebích_shm
->
shm_v¨_loc_li°
 = 
√wlv¨
->
v¨_√xt
;

5684 
¥ev
 = 
fûebích_shm
->
shm_v¨_loc_li°
;Örev;

5685 
¥ev
 =Öªv->
v¨_√xt
) {

5686 i‡(
¥ev
->
v¨_√xt
 =
√wlv¨
)

5687 
¥ev
->
v¨_√xt
 = 
√wlv¨
->var_next;

5690 
√wlv¨
->
v¨_√xt
 = 
NULL
;

5693 
√wlv¨
->
v¨_√xt
 = *
lv¨_li°
;

5694 *
lv¨_li°
 = 
√wlv¨
;

5695 
	}
}

5705 
	$gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

5707 
©å_t
 *
©å
;

5708 
v¨_t
 *
‹ig_lv¨_li°
;

5711 
‹ig_lv¨_li°
 = 
Êow›
->
fo_lv¨_li°
;

5713 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5714 
©å
 =áâr->
©å_√xt
) {

5716 i‡(
©å
->
©å_«me
 =
FSA_LVAR_ASSIGN
) {

5717 
v¨_t
 *
√wv¨
;

5719 i‡((
√wv¨
 = (
v¨_t
 *)
©å
->
©å_avd
Ë=
NULL
)

5722 
	`add_lv¨_to_li°
(
√wv¨
, &
Êow›
->
fo_lv¨_li°
);

5723 
	`v¨_upd©e_comp_lv¨s
(
√wv¨
, 
‹ig_lv¨_li°
, 
NULL
);

5726 
	}
}

5732 
li°_t
 *

5733 
	$Æloc_li°
()

5735 
li°_t
 *
li°
;

5737 i‡((
li°
 = 
	`mÆloc
( (
li°_t
))Ë=
NULL
) {

5738  (
NULL
);

5741 (Ë
	`mem£t
(
li°
, 0,  (
li°_t
));

5742  (
li°
);

5743 
	}
}

5750 
	$∑r£r_v¨_assign_cu°om
(*
«me
, 
cmd_t
 *
cmd
)

5752 
cv¨_t
 *
cv¨
;

5753 
©å_t
 *
©å
;

5754 *
ty≥
;

5755 *
∑ømëîs
;

5756 
ªt
;

5758 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
);

5759 i‡(
©å
)

5760 
ty≥
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5762 
	`fûebích_log
(
LOG_ERROR
, "define cvar:ÇoÅype specified");

5763 
	`fûebích_shutdown
(1);

5767 
cv¨
 = 
	`cv¨_Æloc
();

5768 i‡(!
cv¨
) {

5769 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate custom variable");

5770 
	`fûebích_shutdown
(1);

5775 (Ë
	`±hªad_muãx_öô
(&
cv¨
->
cv¨_lock
,

5776 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

5779 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5780 
cv¨
->
mö
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5782 
cv¨
->
mö
 = 
DBL_MIN
;

5784 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MAX
)))

5785 
cv¨
->
max
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5787 
cv¨
->
max
 = 
DBL_MAX
;

5789 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5790 
cv¨
->
round
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5792 
cv¨
->
round
 = 0;

5794 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARAMETERS
);

5795 i‡(
©å
)

5796 
∑ømëîs
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5798 
∑ømëîs
 = 
NULL
;

5800 
ªt
 = 
	`öô_cv¨_h™dÀ
(
cv¨
, 
ty≥
, 
∑ømëîs
);

5801 i‡(
ªt
) {

5802 
	`fûebích_log
(
LOG_FATAL
, "define cvar: failed for custom variable %s",

5803 
«me
);

5804 
	`fûebích_shutdown
(1);

5808 
	`v¨_assign_cu°om
(
«me
, 
cv¨
);

5809 
	}
}

	@parser_gram.h

37 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


38 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

40 #i‚de‡
YYDEBUG


41 
	#YYDEBUG
 0

	)

43 #i‡
YYDEBUG


44 
yydebug
;

48 #i‚de‡
YYTOKENTYPE


49 
	#YYTOKENTYPE


	)

50 
	eyytokíty≥


52 
	mFSC_LIST
 = 258,

53 
	mFSC_DEFINE
 = 259,

54 
	mFSC_QUIT
 = 260,

55 
	mFSC_DEBUG
 = 261,

56 
	mFSC_CREATE
 = 262,

57 
	mFSC_SLEEP
 = 263,

58 
	mFSC_SET
 = 264,

59 
	mFSC_SYSTEM
 = 265,

60 
	mFSC_EVENTGEN
 = 266,

61 
	mFSC_ECHO
 = 267,

62 
	mFSC_RUN
 = 268,

63 
	mFSC_PSRUN
 = 269,

64 
	mFSC_VERSION
 = 270,

65 
	mFSC_ENABLE
 = 271,

66 
	mFSC_DOMULTISYNC
 = 272,

67 
	mFSV_STRING
 = 273,

68 
	mFSV_VAL_POSINT
 = 274,

69 
	mFSV_VAL_NEGINT
 = 275,

70 
	mFSV_VAL_BOOLEAN
 = 276,

71 
	mFSV_VARIABLE
 = 277,

72 
	mFSV_WHITESTRING
 = 278,

73 
	mFSV_RANDUNI
 = 279,

74 
	mFSV_RANDTAB
 = 280,

75 
	mFSV_URAND
 = 281,

76 
	mFSV_RAND48
 = 282,

77 
	mFSE_FILE
 = 283,

78 
	mFSE_FILES
 = 284,

79 
	mFSE_FILESET
 = 285,

80 
	mFSE_PROC
 = 286,

81 
	mFSE_THREAD
 = 287,

82 
	mFSE_FLOWOP
 = 288,

83 
	mFSE_CVAR
 = 289,

84 
	mFSE_RAND
 = 290,

85 
	mFSE_MODE
 = 291,

86 
	mFSE_MULTI
 = 292,

87 
	mFSK_SEPLST
 = 293,

88 
	mFSK_OPENLST
 = 294,

89 
	mFSK_CLOSELST
 = 295,

90 
	mFSK_OPENPAR
 = 296,

91 
	mFSK_CLOSEPAR
 = 297,

92 
	mFSK_ASSIGN
 = 298,

93 
	mFSK_IN
 = 299,

94 
	mFSK_QUOTE
 = 300,

95 
	mFSA_SIZE
 = 301,

96 
	mFSA_PREALLOC
 = 302,

97 
	mFSA_PARALLOC
 = 303,

98 
	mFSA_PATH
 = 304,

99 
	mFSA_REUSE
 = 305,

100 
	mFSA_MEMSIZE
 = 306,

101 
	mFSA_RATE
 = 307,

102 
	mFSA_READONLY
 = 308,

103 
	mFSA_TRUSTTREE
 = 309,

104 
	mFSA_IOSIZE
 = 310,

105 
	mFSA_FILENAME
 = 311,

106 
	mFSA_WSS
 = 312,

107 
	mFSA_NAME
 = 313,

108 
	mFSA_RANDOM
 = 314,

109 
	mFSA_INSTANCES
 = 315,

110 
	mFSA_DSYNC
 = 316,

111 
	mFSA_TARGET
 = 317,

112 
	mFSA_ITERS
 = 318,

113 
	mFSA_NICE
 = 319,

114 
	mFSA_VALUE
 = 320,

115 
	mFSA_BLOCKING
 = 321,

116 
	mFSA_HIGHWATER
 = 322,

117 
	mFSA_DIRECTIO
 = 323,

118 
	mFSA_DIRWIDTH
 = 324,

119 
	mFSA_FD
 = 325,

120 
	mFSA_SRCFD
 = 326,

121 
	mFSA_ROTATEFD
 = 327,

122 
	mFSA_ENTRIES
 = 328,

123 
	mFSA_DIRDEPTHRV
 = 329,

124 
	mFSA_DIRGAMMA
 = 330,

125 
	mFSA_USEISM
 = 331,

126 
	mFSA_TYPE
 = 332,

127 
	mFSA_LEAFDIRS
 = 333,

128 
	mFSA_INDEXED
 = 334,

129 
	mFSA_RANDTABLE
 = 335,

130 
	mFSA_RANDSRC
 = 336,

131 
	mFSA_ROUND
 = 337,

132 
	mFSA_RANDSEED
 = 338,

133 
	mFSA_RANDGAMMA
 = 339,

134 
	mFSA_RANDMEAN
 = 340,

135 
	mFSA_MIN
 = 341,

136 
	mFSA_MAX
 = 342,

137 
	mFSA_MASTER
 = 343,

138 
	mFSA_CLIENT
 = 344,

139 
	mFSS_TYPE
 = 345,

140 
	mFSS_SEED
 = 346,

141 
	mFSS_GAMMA
 = 347,

142 
	mFSS_MEAN
 = 348,

143 
	mFSS_MIN
 = 349,

144 
	mFSS_SRC
 = 350,

145 
	mFSS_ROUND
 = 351,

146 
	mFSA_LVAR_ASSIGN
 = 352,

147 
	mFSA_ALLDONE
 = 353,

148 
	mFSA_FIRSTDONE
 = 354,

149 
	mFSA_TIMEOUT
 = 355,

150 
	mFSA_LATHIST
 = 356,

151 
	mFSA_NOREADAHEAD
 = 357,

152 
	mFSA_IOPRIO
 = 358,

153 
	mFSA_WRITEONLY
 = 359,

154 
	mFSA_PARAMETERS
 = 360,

155 
	mFSA_NOUSESTATS
 = 361

159 
	#FSC_LIST
 258

	)

160 
	#FSC_DEFINE
 259

	)

161 
	#FSC_QUIT
 260

	)

162 
	#FSC_DEBUG
 261

	)

163 
	#FSC_CREATE
 262

	)

164 
	#FSC_SLEEP
 263

	)

165 
	#FSC_SET
 264

	)

166 
	#FSC_SYSTEM
 265

	)

167 
	#FSC_EVENTGEN
 266

	)

168 
	#FSC_ECHO
 267

	)

169 
	#FSC_RUN
 268

	)

170 
	#FSC_PSRUN
 269

	)

171 
	#FSC_VERSION
 270

	)

172 
	#FSC_ENABLE
 271

	)

173 
	#FSC_DOMULTISYNC
 272

	)

174 
	#FSV_STRING
 273

	)

175 
	#FSV_VAL_POSINT
 274

	)

176 
	#FSV_VAL_NEGINT
 275

	)

177 
	#FSV_VAL_BOOLEAN
 276

	)

178 
	#FSV_VARIABLE
 277

	)

179 
	#FSV_WHITESTRING
 278

	)

180 
	#FSV_RANDUNI
 279

	)

181 
	#FSV_RANDTAB
 280

	)

182 
	#FSV_URAND
 281

	)

183 
	#FSV_RAND48
 282

	)

184 
	#FSE_FILE
 283

	)

185 
	#FSE_FILES
 284

	)

186 
	#FSE_FILESET
 285

	)

187 
	#FSE_PROC
 286

	)

188 
	#FSE_THREAD
 287

	)

189 
	#FSE_FLOWOP
 288

	)

190 
	#FSE_CVAR
 289

	)

191 
	#FSE_RAND
 290

	)

192 
	#FSE_MODE
 291

	)

193 
	#FSE_MULTI
 292

	)

194 
	#FSK_SEPLST
 293

	)

195 
	#FSK_OPENLST
 294

	)

196 
	#FSK_CLOSELST
 295

	)

197 
	#FSK_OPENPAR
 296

	)

198 
	#FSK_CLOSEPAR
 297

	)

199 
	#FSK_ASSIGN
 298

	)

200 
	#FSK_IN
 299

	)

201 
	#FSK_QUOTE
 300

	)

202 
	#FSA_SIZE
 301

	)

203 
	#FSA_PREALLOC
 302

	)

204 
	#FSA_PARALLOC
 303

	)

205 
	#FSA_PATH
 304

	)

206 
	#FSA_REUSE
 305

	)

207 
	#FSA_MEMSIZE
 306

	)

208 
	#FSA_RATE
 307

	)

209 
	#FSA_READONLY
 308

	)

210 
	#FSA_TRUSTTREE
 309

	)

211 
	#FSA_IOSIZE
 310

	)

212 
	#FSA_FILENAME
 311

	)

213 
	#FSA_WSS
 312

	)

214 
	#FSA_NAME
 313

	)

215 
	#FSA_RANDOM
 314

	)

216 
	#FSA_INSTANCES
 315

	)

217 
	#FSA_DSYNC
 316

	)

218 
	#FSA_TARGET
 317

	)

219 
	#FSA_ITERS
 318

	)

220 
	#FSA_NICE
 319

	)

221 
	#FSA_VALUE
 320

	)

222 
	#FSA_BLOCKING
 321

	)

223 
	#FSA_HIGHWATER
 322

	)

224 
	#FSA_DIRECTIO
 323

	)

225 
	#FSA_DIRWIDTH
 324

	)

226 
	#FSA_FD
 325

	)

227 
	#FSA_SRCFD
 326

	)

228 
	#FSA_ROTATEFD
 327

	)

229 
	#FSA_ENTRIES
 328

	)

230 
	#FSA_DIRDEPTHRV
 329

	)

231 
	#FSA_DIRGAMMA
 330

	)

232 
	#FSA_USEISM
 331

	)

233 
	#FSA_TYPE
 332

	)

234 
	#FSA_LEAFDIRS
 333

	)

235 
	#FSA_INDEXED
 334

	)

236 
	#FSA_RANDTABLE
 335

	)

237 
	#FSA_RANDSRC
 336

	)

238 
	#FSA_ROUND
 337

	)

239 
	#FSA_RANDSEED
 338

	)

240 
	#FSA_RANDGAMMA
 339

	)

241 
	#FSA_RANDMEAN
 340

	)

242 
	#FSA_MIN
 341

	)

243 
	#FSA_MAX
 342

	)

244 
	#FSA_MASTER
 343

	)

245 
	#FSA_CLIENT
 344

	)

246 
	#FSS_TYPE
 345

	)

247 
	#FSS_SEED
 346

	)

248 
	#FSS_GAMMA
 347

	)

249 
	#FSS_MEAN
 348

	)

250 
	#FSS_MIN
 349

	)

251 
	#FSS_SRC
 350

	)

252 
	#FSS_ROUND
 351

	)

253 
	#FSA_LVAR_ASSIGN
 352

	)

254 
	#FSA_ALLDONE
 353

	)

255 
	#FSA_FIRSTDONE
 354

	)

256 
	#FSA_TIMEOUT
 355

	)

257 
	#FSA_LATHIST
 356

	)

258 
	#FSA_NOREADAHEAD
 357

	)

259 
	#FSA_IOPRIO
 358

	)

260 
	#FSA_WRITEONLY
 359

	)

261 
	#FSA_PARAMETERS
 360

	)

262 
	#FSA_NOUSESTATS
 361

	)

265 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


266 
	uYYSTYPE


270 
öt64_t
 
	mivÆ
;

271 
	mbvÆ
;

272 * 
	msvÆ
;

273 
avd_t
 
	mavd
;

274 
cmd_t
 *
	mcmd
;

275 
©å_t
 *
	m©å
;

276 
li°_t
 *
	mli°
;

277 
¥obèbít_t
 *
	m∫dtb
;

282 
YYSTYPE
 
	tYYSTYPE
;

283 
	#YYSTYPE_IS_TRIVIAL
 1

	)

284 
	#YYSTYPE_IS_DECLARED
 1

	)

288 
YYSTYPE
 
yylvÆ
;

290 
yy∑r£
 ();

	@parser_lex.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

86 #i‚de‡
SIZE_MAX


87 
	#SIZE_MAX
 (~(
size_t
)0)

	)

97 
	#yyc⁄°
 c⁄°

	)

99 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

100 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

102 
	#yyn‹ëu∫


	)

106 
	#YY_NULL
 0

	)

111 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

117 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

122 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

123 
	#YYSTATE
 
YY_START


	)

125 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

127 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

128 
	#YY_END_OF_BUFFER_CHAR
 0

	)

131 #i‚de‡
YY_BUF_SIZE


132 #ifde‡
__ü64__


137 
	#YY_BUF_SIZE
 32768

	)

139 
	#YY_BUF_SIZE
 16384

	)

145 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

147 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


148 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

149 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

152 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


153 
	#YY_TYPEDEF_YY_SIZE_T


	)

154 
size_t
 
	tyy_size_t
;

157 
yyÀng
;

159 
FILE
 *
yyö
, *
yyout
;

161 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

162 
	#EOB_ACT_END_OF_FILE
 1

	)

163 
	#EOB_ACT_LAST_MATCH
 2

	)

165 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

169 
	#yyÀss
(
n
) \

173 
yyÀss_ma¸o_¨g
 = (
n
); \

174 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

175 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

176 
YY_RESTORE_YY_MORE_OFFSET
 \

177 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

178 
YY_DO_BEFORE_ACTION
; \

180  0 )

	)

181 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

183 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


184 
	#YY_STRUCT_YY_BUFFER_STATE


	)

185 
	syy_buf„r_°©e


187 
FILE
 *
	myy_öput_fûe
;

189 *
	myy_ch_buf
;

190 *
	myy_buf_pos
;

195 
	myy_buf_size
;

200 
	myy_n_ch¨s
;

206 
	myy_is_our_buf„r
;

213 
	myy_is_öãø˘ive
;

219 
	myy_©_bﬁ
;

221 
	myy_bs_löío
;

222 
	myy_bs_cﬁumn
;

227 
	myy_fûl_buf„r
;

229 
	myy_buf„r_°©us
;

231 
	#YY_BUFFER_NEW
 0

	)

232 
	#YY_BUFFER_NORMAL
 1

	)

243 
	#YY_BUFFER_EOF_PENDING
 2

	)

249 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

250 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

251 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 
NULL
;

259 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

260 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

261 : 
NULL
)

	)

265 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

268 
	gyy_hﬁd_ch¨
;

269 
	gyy_n_ch¨s
;

270 
	gyyÀng
;

273 *
	gyy_c_buf_p
 = 
NULL
;

274 
	gyy_öô
 = 0;

275 
	gyy_°¨t
 = 0;

280 
	gyy_did_buf„r_swôch_⁄_eof
;

282 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 );

283 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

284 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 );

285 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

286 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

287 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
yyp›_buf„r_°©e
 ( );

290 
yyísuª_buf„r_°ack
 ( );

291 
yy_lﬂd_buf„r_°©e
 ( );

292 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 );

293 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 )

	)

295 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 );

296 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 );

297 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 );

299 *
yyÆloc
 ( 
yy_size_t
 );

300 *
yyªÆloc
 ( *, 
yy_size_t
 );

301 
yy‰ì
 ( * );

303 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

304 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

306 i‡–! 
YY_CURRENT_BUFFER
 ){ \

307 
	`yyísuª_buf„r_°ack
 (); \

308 
YY_CURRENT_BUFFER_LVALUE
 = \

309 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

311 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

312 }

	)

313 
	#yy_£t_bﬁ
(
©_bﬁ
) \

315 i‡–! 
YY_CURRENT_BUFFER
 ){\

316 
	`yyísuª_buf„r_°ack
 (); \

317 
YY_CURRENT_BUFFER_LVALUE
 = \

318 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

320 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

321 }

	)

322 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

326 
	#yywøp
(Ë–1)

	)

327 
	#YY_SKIP_YYWRAP


	)

328 
Êex_uöt8_t
 
	tYY_CHAR
;

330 
FILE
 *
	gyyö
 = 
NULL
, *
	gyyout
 = NULL;

332 
	tyy_°©e_ty≥
;

334 
yylöío
;

335 
	gyylöío
 = 1;

337 *
yyãxt
;

338 #ifde‡
yyãxt_±r


339 #unde‡
yyãxt_±r


341 
	#yyãxt_±r
 
yyãxt


	)

343 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( );

344 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 );

345 
yy_gë_√xt_buf„r
 ( );

346 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 );

351 
	#YY_DO_BEFORE_ACTION
 \

352 (
yyãxt_±r
Ë
yy_bp
; \

353 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

354 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

355 *
yy_˝
 = '\0'; \

356 (
yy_c_buf_p
Ë
yy_˝
;

	)

357 
	#YY_NUM_RULES
 111

	)

358 
	#YY_END_OF_BUFFER
 112

	)

361 
	syy_å™s_öfo


363 
Êex_öt32_t
 
	myy_vîify
;

364 
Êex_öt32_t
 
	myy_nxt
;

366 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[886] =

467 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

499 c⁄° 
YY_CHAR
 
	gyy_mëa
[48] =

508 c⁄° 
Êex_öt16_t
 
	gyy_ba£
[892] =

611 c⁄° 
Êex_öt16_t
 
	gyy_def
[892] =

714 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[1432] =

876 c⁄° 
Êex_öt16_t
 
	gyy_chk
[1432] =

1038 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

1039 *
	gyy_œ°_ac˚±ög_˝os
;

1041 
yy_Êex_debug
;

1042 
	gyy_Êex_debug
 = 0;

1047 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

1048 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

1049 
	#YY_MORE_ADJ
 0

	)

1050 
	#YY_RESTORE_YY_MORE_OFFSET


	)

1051 *
	gyyãxt
;

1081 
	~<°dlib.h
>

1082 
	~<sys/ty≥s.h
>

1083 
	~<as£π.h
>

1084 
	~<°rög.h
>

1085 
	~<î∫o.h
>

1086 #ifde‡
HAVE_STDINT_H


1087 
	~<°döt.h
>

1090 
	~"fûebích.h
"

1091 
	~"∑r£πy≥s.h
"

1092 
	~"utûs.h
"

1093 
	~"∑r£r_gøm.h
"

1095 
	gÀx_löío
 = 1;

1096 
yyîr‹
(*
s
);

1101 
	#INITIAL
 0

	)

1102 
	#WHITESTRINGSTATE
 1

	)

1104 #i‚de‡
YY_NO_UNISTD_H


1109 
	~<uni°d.h
>

1112 #i‚de‡
YY_EXTRA_TYPE


1113 
	#YY_EXTRA_TYPE
 *

	)

1116 
yy_öô_globÆs
 ( );

1121 
yyÀx_de°roy
 ( );

1123 
yygë_debug
 ( );

1125 
yy£t_debug
 ( 
debug_Êag
 );

1127 
YY_EXTRA_TYPE
 
yygë_exåa
 ( );

1129 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 );

1131 
FILE
 *
yygë_ö
 ( );

1133 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 );

1135 
FILE
 *
yygë_out
 ( );

1137 
yy£t_out
 ( 
FILE
 * 
_out_°r
 );

1139 
yygë_Àng
 ( );

1141 *
yygë_ãxt
 ( );

1143 
yygë_löío
 ( );

1145 
yy£t_löío
 ( 
_löe_numbî
 );

1151 #i‚de‡
YY_SKIP_YYWRAP


1152 #ifde‡
__˝lu•lus


1153 "C" 
yywøp
 ( );

1155 
yywøp
 ( );

1159 #i‚de‡
YY_NO_UNPUT


1163 #i‚de‡
yyãxt_±r


1164 
yy_Êex_°∫˝y
 ( *, const *, );

1167 #ifde‡
YY_NEED_STRLEN


1168 
yy_Êex_°æí
 ( const * );

1171 #i‚de‡
YY_NO_INPUT


1172 #ifde‡
__˝lu•lus


1173 
yyöput
 ( );

1175 
öput
 ( );

1181 #i‚de‡
YY_READ_BUF_SIZE


1182 #ifde‡
__ü64__


1184 
	#YY_READ_BUF_SIZE
 16384

	)

1186 
	#YY_READ_BUF_SIZE
 8192

	)

1191 #i‚de‡
ECHO


1195 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

1201 #i‚de‡
YY_INPUT


1202 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

1203 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

1205 
c
 = '*'; \

1206 
n
; \

1207  
n
 = 0;Ç < 
max_size
 && \

1208 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

1209 
buf
[
n
] = (Ë
c
; \

1210 i‡–
c
 == '\n' ) \

1211 
buf
[
n
++] = (Ë
c
; \

1212 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

1213 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1214 
ªsu…
 = 
n
; \

1218 
î∫o
=0; \

1219  (
ªsu…
 = (Ë
	`‰ód
(
buf
, 1, (
yy_size_t
Ë
max_size
, 
yyö
)Ë=0 && 
	`„º‹
(yyin)) \

1221 if–
î∫o
 !
EINTR
) \

1223 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1226 
î∫o
=0; \

1227 
	`˛óªº
(
yyö
); \

1231 

	)

1238 #i‚de‡
yyãrmö©e


1239 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1243 #i‚de‡
YY_START_STACK_INCR


1244 
	#YY_START_STACK_INCR
 25

	)

1248 #i‚de‡
YY_FATAL_ERROR


1249 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1257 #i‚de‡
YY_DECL


1258 
	#YY_DECL_IS_OURS
 1

	)

1260 
yyÀx
 ();

1262 
	#YY_DECL
 
	`yyÀx
 ()

	)

1268 #i‚de‡
YY_USER_ACTION


1269 
	#YY_USER_ACTION


	)

1273 #i‚de‡
YY_BREAK


1274 
	#YY_BREAK
 ;

	)

1277 
	#YY_RULE_SETUP
 \

1278 
YY_USER_ACTION


	)

1282 
	gYY_DECL


1284 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1285 *
	gyy_˝
, *
	gyy_bp
;

1286 
	gyy_a˘
;

1288 i‡–!(
	gyy_öô
) )

1290 (
	gyy_öô
) = 1;

1292 #ifde‡
YY_USER_INIT


1293 
	gYY_USER_INIT
;

1296 i‡–! (
	gyy_°¨t
) )

1297 (
	gyy_°¨t
) = 1;

1299 i‡–! 
	gyyö
 )

1300 
	gyyö
 = 
°dö
;

1302 i‡–! 
	gyyout
 )

1303 
	gyyout
 = 
°dout
;

1305 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1306 
yyísuª_buf„r_°ack
 ();

1307 
	gYY_CURRENT_BUFFER_LVALUE
 =

1308 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1311 
yy_lﬂd_buf„r_°©e
( );

1322 
	gyy_˝
 = (
yy_c_buf_p
);

1325 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1330 
	gyy_bp
 = 
yy_˝
;

1332 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1333 
	gyy_m©ch
:

1336 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1337 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1339 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1340 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1342  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1344 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1345 i‡–
	gyy_cuºít_°©e
 >= 886 )

1346 
yy_c
 = 
yy_mëa
[yy_c];

1348 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
];

1349 ++
	gyy_˝
;

1351  
	gyy_ba£
[
yy_cuºít_°©e
] != 1384 );

1353 
	gyy_föd_a˘i⁄
:

1354 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1355 i‡–
	gyy_a˘
 == 0 )

1357 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1358 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1359 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1362 
	gYY_DO_BEFORE_ACTION
;

1364 
	gdo_a˘i⁄
:

1366  
yy_a˘
 )

1370 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1371 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1372 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1373 
	gyy_föd_a˘i⁄
;

1377 
YY_RULE_SETUP


1379 { 
Àx_löío
++; }

1380 
YY_BREAK


1382 
YY_RULE_SETUP


1385 
YY_BREAK


1387 
YY_RULE_SETUP


1390 
YY_BREAK


1392 
YY_RULE_SETUP


1394 {  
FSC_CREATE
; }

1395 
YY_BREAK


1397 
YY_RULE_SETUP


1399 {  
FSC_DEFINE
; }

1400 
YY_BREAK


1402 
YY_RULE_SETUP


1404 {  
FSC_DEBUG
; }

1405 
YY_BREAK


1407 
YY_RULE_SETUP


1409 {  
FSC_DOMULTISYNC
; }

1410 
YY_BREAK


1412 
YY_RULE_SETUP


1414 {  
FSC_ECHO
; }

1415 
YY_BREAK


1417 
YY_RULE_SETUP


1419 {  
FSC_ENABLE
; }

1420 
YY_BREAK


1422 
YY_RULE_SETUP


1424 {  
FSC_EVENTGEN
; }

1425 
YY_BREAK


1427 
YY_RULE_SETUP


1429 {  
FSC_QUIT
; }

1430 
YY_BREAK


1432 
YY_RULE_SETUP


1434 {  
FSC_LIST
; }

1435 
YY_BREAK


1437 
YY_RULE_SETUP


1439 {  
FSC_RUN
; }

1440 
YY_BREAK


1442 
YY_RULE_SETUP


1444 {  
FSC_PSRUN
; }

1445 
YY_BREAK


1447 
YY_RULE_SETUP


1449 {  
FSC_SET
; }

1450 
YY_BREAK


1452 
YY_RULE_SETUP


1454 {  
FSC_SLEEP
; }

1455 
YY_BREAK


1457 
YY_RULE_SETUP


1459 {  
FSC_SYSTEM
; }

1460 
YY_BREAK


1462 
YY_RULE_SETUP


1464 {  
FSC_VERSION
; }

1465 
YY_BREAK


1467 
YY_RULE_SETUP


1469 {  
FSE_FILE
; }

1470 
YY_BREAK


1472 
YY_RULE_SETUP


1474 {  
FSE_FILES
; }

1475 
YY_BREAK


1477 
YY_RULE_SETUP


1479 {  
FSE_FILESET
; }

1480 
YY_BREAK


1482 
YY_RULE_SETUP


1484 {  
FSE_PROC
; }

1485 
YY_BREAK


1487 
YY_RULE_SETUP


1489 {  
FSE_THREAD
; }

1490 
YY_BREAK


1492 
YY_RULE_SETUP


1494 {  
FSE_FLOWOP
; }

1495 
YY_BREAK


1497 
YY_RULE_SETUP


1499 {  
FSE_RAND
; }

1500 
YY_BREAK


1502 
YY_RULE_SETUP


1504 {  
FSE_MODE
; }

1505 
YY_BREAK


1507 
YY_RULE_SETUP


1509 {  
FSE_MULTI
; }

1510 
YY_BREAK


1512 
YY_RULE_SETUP


1514 {  
FSE_CVAR
; }

1515 
YY_BREAK


1517 
YY_RULE_SETUP


1519 {  
FSA_ALLDONE
; }

1520 
YY_BREAK


1522 
YY_RULE_SETUP


1524 {  
FSA_BLOCKING
; }

1525 
YY_BREAK


1527 
YY_RULE_SETUP


1529 {  
FSA_CLIENT
; }

1530 
YY_BREAK


1532 
YY_RULE_SETUP


1534 {  
FSA_DIRWIDTH
; }

1535 
YY_BREAK


1537 
YY_RULE_SETUP


1539 {  
FSA_DIRDEPTHRV
; }

1540 
YY_BREAK


1542 
YY_RULE_SETUP


1544 {  
FSA_DIRECTIO
; }

1545 
YY_BREAK


1547 
YY_RULE_SETUP


1549 {  
FSA_DIRGAMMA
; }

1550 
YY_BREAK


1552 
YY_RULE_SETUP


1554 {  
FSA_DSYNC
; }

1555 
YY_BREAK


1557 
YY_RULE_SETUP


1559 {  
FSA_ENTRIES
;}

1560 
YY_BREAK


1562 
YY_RULE_SETUP


1564 {  
FSA_FD
; }

1565 
YY_BREAK


1567 
YY_RULE_SETUP


1569 {  
FSA_FILENAME
; }

1570 
YY_BREAK


1572 
YY_RULE_SETUP


1574 {  
FSA_FILENAME
; }

1575 
YY_BREAK


1577 
YY_RULE_SETUP


1579 {  
FSA_SIZE
; }

1580 
YY_BREAK


1582 
YY_RULE_SETUP


1584 {  
FSA_FIRSTDONE
; }

1585 
YY_BREAK


1587 
YY_RULE_SETUP


1589 {  
FSA_RANDGAMMA
; }

1590 
YY_BREAK


1592 
YY_RULE_SETUP


1594 {  
FSA_HIGHWATER
; }

1595 
YY_BREAK


1597 
YY_RULE_SETUP


1599 {  
FSA_INDEXED
; }

1600 
YY_BREAK


1602 
YY_RULE_SETUP


1604 {  
FSA_INSTANCES
;}

1605 
YY_BREAK


1607 
YY_RULE_SETUP


1609 {  
FSA_IOSIZE
; }

1610 
YY_BREAK


1612 
YY_RULE_SETUP


1614 {  
FSA_ITERS
;}

1615 
YY_BREAK


1617 
YY_RULE_SETUP


1619 {  
FSA_LEAFDIRS
;}

1620 
YY_BREAK


1622 
YY_RULE_SETUP


1624 {  
FSA_MASTER
; }

1625 
YY_BREAK


1627 
YY_RULE_SETUP


1629 {  
FSA_RANDMEAN
; }

1630 
YY_BREAK


1632 
YY_RULE_SETUP


1634 {  
FSA_MEMSIZE
; }

1635 
YY_BREAK


1637 
YY_RULE_SETUP


1639 {  
FSA_IOPRIO
; }

1640 
YY_BREAK


1642 
YY_RULE_SETUP


1644 {  
FSA_MIN
; }

1645 
YY_BREAK


1647 
YY_RULE_SETUP


1649 {  
FSA_MAX
; }

1650 
YY_BREAK


1652 
YY_RULE_SETUP


1654 {  
FSA_NAME
;}

1655 
YY_BREAK


1657 
YY_RULE_SETUP


1659 {  
FSA_NICE
;}

1660 
YY_BREAK


1662 
YY_RULE_SETUP


1664 {  
FSA_ROTATEFD
; }

1665 
YY_BREAK


1667 
YY_RULE_SETUP


1669 {  
FSA_PARALLOC
; }

1670 
YY_BREAK


1672 
YY_RULE_SETUP


1674 {  
FSA_PARAMETERS
; }

1675 
YY_BREAK


1677 
YY_RULE_SETUP


1679 {  
FSA_PATH
; }

1680 
YY_BREAK


1682 
YY_RULE_SETUP


1684 {  
FSA_PREALLOC
; }

1685 
YY_BREAK


1687 
YY_RULE_SETUP


1689 {  
FSA_RANDOM
;}

1690 
YY_BREAK


1692 
YY_RULE_SETUP


1694 {  
FSA_RANDSRC
; }

1695 
YY_BREAK


1697 
YY_RULE_SETUP


1699 {  
FSA_RANDTABLE
; }

1700 
YY_BREAK


1702 
YY_RULE_SETUP


1704 {  
FSA_RATE
;}

1705 
YY_BREAK


1707 
YY_RULE_SETUP


1709 {  
FSA_READONLY
; }

1710 
YY_BREAK


1712 
YY_RULE_SETUP


1714 {  
FSA_WRITEONLY
; }

1715 
YY_BREAK


1717 
YY_RULE_SETUP


1719 {  
FSA_REUSE
; }

1720 
YY_BREAK


1722 
YY_RULE_SETUP


1724 {  
FSA_ROUND
; }

1725 
YY_BREAK


1727 
YY_RULE_SETUP


1729 {  
FSA_RANDSEED
; }

1730 
YY_BREAK


1732 
YY_RULE_SETUP


1734 {  
FSA_SIZE
; }

1735 
YY_BREAK


1737 
YY_RULE_SETUP


1739 {  
FSA_SRCFD
; }

1740 
YY_BREAK


1742 
YY_RULE_SETUP


1744 {  
FSA_TARGET
;}

1745 
YY_BREAK


1747 
YY_RULE_SETUP


1749 {  
FSA_TIMEOUT
; }

1750 
YY_BREAK


1752 
YY_RULE_SETUP


1754 {  
FSA_TRUSTTREE
; }

1755 
YY_BREAK


1757 
YY_RULE_SETUP


1759 {  
FSA_TYPE
; }

1760 
YY_BREAK


1762 
YY_RULE_SETUP


1764 {  
FSA_USEISM
;}

1765 
YY_BREAK


1767 
YY_RULE_SETUP


1769 {  
FSA_VALUE
;}

1770 
YY_BREAK


1772 
YY_RULE_SETUP


1774 {  
FSA_WSS
; }

1775 
YY_BREAK


1777 
YY_RULE_SETUP


1779 {  
FSA_NOUSESTATS
; }

1780 
YY_BREAK


1782 
YY_RULE_SETUP


1784 {  
FSA_LATHIST
; }

1785 
YY_BREAK


1787 
YY_RULE_SETUP


1789 {  
FSV_RANDUNI
; }

1790 
YY_BREAK


1792 
YY_RULE_SETUP


1794 {  
FSV_RANDTAB
; }

1795 
YY_BREAK


1797 
YY_RULE_SETUP


1799 {  
FSV_URAND
; }

1800 
YY_BREAK


1802 
YY_RULE_SETUP


1804 {  
FSV_RAND48
; }

1805 
YY_BREAK


1807 
YY_RULE_SETUP


1809 {  
FSA_NOREADAHEAD
; }

1810 
YY_BREAK


1812 
YY_RULE_SETUP


1815 
BEGIN
 
WHITESTRINGSTATE
;

1816  
	gFSK_QUOTE
;

1818 
YY_BREAK


1820 
YY_RULE_SETUP


1823 
BEGIN
 
INITIAL
;

1824  
	gFSK_QUOTE
;

1826 
YY_BREAK


1829 
YY_RULE_SETUP


1832 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1833 
yyîr‹
("Out of memory");

1834 
fûebích_shutdown
(1);

1836  
	gFSV_WHITESTRING
;

1838 
YY_BREAK


1840 
YY_RULE_SETUP


1843 
yylvÆ
.
svÆ
 = "\n";

1844  
	gFSV_WHITESTRING
;

1846 
YY_BREAK


1849 
YY_RULE_SETUP


1852 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
 + 1)Ë=
NULL
) {

1853 
yyîr‹
("Out of memory");

1854 
fûebích_shutdown
(1);

1856  
	gFSV_WHITESTRING
;

1858 
YY_BREAK


1861 
YY_RULE_SETUP


1864 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1865 
yyîr‹
("Out of memory");

1866 
fûebích_shutdown
(1);

1868  
	gFSV_WHITESTRING
;

1870 
YY_BREAK


1872 
YY_RULE_SETUP


1874 {  
FSK_OPENLST
; }

1875 
YY_BREAK


1877 
YY_RULE_SETUP


1879 {  
FSK_CLOSELST
; }

1880 
YY_BREAK


1882 
YY_RULE_SETUP


1884 {  
FSK_OPENPAR
; }

1885 
YY_BREAK


1887 
YY_RULE_SETUP


1889 {  
FSK_CLOSEPAR
; }

1890 
YY_BREAK


1892 
YY_RULE_SETUP


1894 {  
FSK_ASSIGN
; }

1895 
YY_BREAK


1897 
YY_RULE_SETUP


1899 {  
FSK_SEPLST
; }

1900 
YY_BREAK


1902 
YY_RULE_SETUP


1904 {  
FSK_IN
; }

1905 
YY_BREAK


1907 
YY_RULE_SETUP


1910 
î∫o
 = 0;

1911 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1912 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1913 (Ë
fûebích_log
(
LOG_ERROR
,

1914 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1915 
°ªº‹
(
î∫o
));

1917  
	gFSV_VAL_POSINT
;

1919 
YY_BREAK


1921 
YY_RULE_SETUP


1924 
î∫o
 = 0;

1925 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1926 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1927 (Ë
fûebích_log
(
LOG_ERROR
,

1928 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1929 
°ªº‹
(
î∫o
));

1931  
	gFSV_VAL_NEGINT
;

1933 
YY_BREAK


1935 
YY_RULE_SETUP


1938 
î∫o
 = 0;

1939 
	gyylvÆ
.
	givÆ
 = 
KB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1940 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1941 (Ë
fûebích_log
(
LOG_ERROR
,

1942 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1943 
°ªº‹
(
î∫o
));

1945  
	gFSV_VAL_POSINT
;

1947 
YY_BREAK


1949 
YY_RULE_SETUP


1952 
î∫o
 = 0;

1953 
	gyylvÆ
.
	givÆ
 = 
MB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1954 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1955 (Ë
fûebích_log
(
LOG_ERROR
,

1956 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1957 
°ªº‹
(
î∫o
));

1959  
	gFSV_VAL_POSINT
;

1961 
YY_BREAK


1963 
YY_RULE_SETUP


1966 
î∫o
 = 0;

1967 
	gyylvÆ
.
	givÆ
 = 
GB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1968 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1969 (Ë
fûebích_log
(
LOG_ERROR
,

1970 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1971 
°ªº‹
(
î∫o
));

1973  
	gFSV_VAL_POSINT
;

1975 
YY_BREAK


1977 
YY_RULE_SETUP


1980 
yylvÆ
.
bvÆ
 = 
TRUE
;

1981  
	gFSV_VAL_BOOLEAN
;

1983 
YY_BREAK


1985 
YY_RULE_SETUP


1988 
yylvÆ
.
bvÆ
 = 
FALSE
;

1989  
	gFSV_VAL_BOOLEAN
;

1991 
YY_BREAK


1993 
YY_RULE_SETUP


1996 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1997 
yyîr‹
("Out of memory");

1998 
fûebích_shutdown
(1);

2001  
	gFSV_VARIABLE
;

2003 
YY_BREAK


2005 
YY_RULE_SETUP


2008 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

2009 
yyîr‹
("Out of memory");

2010 
fûebích_shutdown
(1);

2012  
	gFSV_STRING
;

2014 
YY_BREAK


2016 
YY_RULE_SETUP


2019 
yyîr‹
("Illegal character");

2021 
YY_BREAK


2023 
YY_RULE_SETUP


2025 
ECHO
;

2026 
	gYY_BREAK


2028 
YY_STATE_EOF
(
INITIAL
):

2029 
YY_STATE_EOF
(
WHITESTRINGSTATE
):

2030 
yyãrmö©e
();

2032 
	gYY_END_OF_BUFFER
:

2035 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

2038 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

2039 
YY_RESTORE_YY_MORE_OFFSET


2041 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

2052 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2053 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

2054 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

2064 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2066 
yy_°©e_ty≥
 
yy_√xt_°©e
;

2068 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2070 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2081 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

2083 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2085 i‡–
	gyy_√xt_°©e
 )

2088 
	gyy_˝
 = ++(
yy_c_buf_p
);

2089 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

2090 
	gyy_m©ch
;

2095 
	gyy_˝
 = (
yy_c_buf_p
);

2096 
	gyy_föd_a˘i⁄
;

2100  
yy_gë_√xt_buf„r
( ) )

2102 
	gEOB_ACT_END_OF_FILE
:

2104 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

2106 i‡–
yywøp
( ) )

2117 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2119 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

2120 
	gdo_a˘i⁄
;

2125 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

2126 
	gYY_NEW_FILE
;

2131 
	gEOB_ACT_CONTINUE_SCAN
:

2132 (
yy_c_buf_p
) =

2133 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2135 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2137 
	gyy_˝
 = (
yy_c_buf_p
);

2138 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2139 
	gyy_m©ch
;

2141 
	gEOB_ACT_LAST_MATCH
:

2142 (
yy_c_buf_p
) =

2143 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

2145 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2147 
	gyy_˝
 = (
yy_c_buf_p
);

2148 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2149 
	gyy_föd_a˘i⁄
;

2155 
YY_FATAL_ERROR
(

2169 
	$yy_gë_√xt_buf„r
 ()

2171 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

2172 *
sour˚
 = (
yyãxt_±r
);

2173 
numbî_to_move
, 
i
;

2174 
ªt_vÆ
;

2176 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

2177 
	`YY_FATAL_ERROR
(

2180 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

2182 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

2187  
EOB_ACT_END_OF_FILE
;

2195  
EOB_ACT_LAST_MATCH
;

2202 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
) - 1);

2204  
i
 = 0; i < 
numbî_to_move
; ++i )

2205 *(
de°
++Ë*(
sour˚
++);

2207 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

2211 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

2215 
num_to_ªad
 =

2216 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

2218  
num_to_ªad
 <= 0 )

2222 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

2224 
yy_c_buf_p_off£t
 =

2225 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

2227 i‡–
b
->
yy_is_our_buf„r
 )

2229 
√w_size
 = 
b
->
yy_buf_size
 * 2;

2231 i‡–
√w_size
 <= 0 )

2232 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

2234 
b
->
yy_buf_size
 *= 2;

2236 
b
->
yy_ch_buf
 = (*)

2238 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

2239 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2) );

2243 
b
->
yy_ch_buf
 = 
NULL
;

2245 i‡–! 
b
->
yy_ch_buf
 )

2246 
	`YY_FATAL_ERROR
(

2249 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

2251 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

2252 
numbî_to_move
 - 1;

2256 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

2257 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

2260 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

2261 (
yy_n_ch¨s
), 
num_to_ªad
 );

2263 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2266 i‡–(
yy_n_ch¨s
) == 0 )

2268 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

2270 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

2271 
	`yyª°¨t
–
yyö
 );

2276 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

2277 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

2278 
YY_BUFFER_EOF_PENDING
;

2283 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

2285 i‡(((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

2287 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

2288 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

2289 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 );

2290 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2291 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

2293 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

2296 (
yy_n_ch¨s
Ë+
numbî_to_move
;

2297 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

2298 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

2300 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

2302  
ªt_vÆ
;

2303 
	}
}

2307 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

2309 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

2310 *
yy_˝
;

2312 
yy_cuºít_°©e
 = (
yy_°¨t
);

2314  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

2316 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

2317 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2319 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2320 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2322  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2324 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2325 i‡–
yy_cuºít_°©e
 >= 886 )

2326 
yy_c
 = 
yy_mëa
[yy_c];

2328 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

2331  
yy_cuºít_°©e
;

2332 
	}
}

2339 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2341 
yy_is_jam
;

2342 *
yy_˝
 = (
yy_c_buf_p
);

2344 
YY_CHAR
 
yy_c
 = 1;

2345 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2347 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2348 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2350  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2352 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2353 i‡–
yy_cuºít_°©e
 >= 886 )

2354 
yy_c
 = 
yy_mëa
[yy_c];

2356 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

2357 
yy_is_jam
 = (
yy_cuºít_°©e
 == 885);

2359  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2360 
	}
}

2362 #i‚de‡
YY_NO_UNPUT


2366 #i‚de‡
YY_NO_INPUT


2367 #ifde‡
__˝lu•lus


2368 
	$yyöput
 ()

2370 
	$öput
 ()

2374 
c
;

2376 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2378 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2384 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2386 *(
yy_c_buf_p
) = '\0';

2390 
off£t
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
));

2391 ++(
yy_c_buf_p
);

2393  
	`yy_gë_√xt_buf„r
( ) )

2395 
EOB_ACT_LAST_MATCH
:

2407 
	`yyª°¨t
–
yyö
 );

2411 
EOB_ACT_END_OF_FILE
:

2413 i‡–
	`yywøp
( ) )

2416 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2417 
YY_NEW_FILE
;

2418 #ifde‡
__˝lu•lus


2419  
	`yyöput
();

2421  
	`öput
();

2425 
EOB_ACT_CONTINUE_SCAN
:

2426 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2432 
c
 = *(*Ë(
yy_c_buf_p
);

2433 *(
yy_c_buf_p
) = '\0';

2434 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2436  
c
;

2437 
	}
}

2445 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

2448 i‡–! 
YY_CURRENT_BUFFER
 ){

2449 
	`yyísuª_buf„r_°ack
 ();

2450 
YY_CURRENT_BUFFER_LVALUE
 =

2451 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

2454 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 );

2455 
	`yy_lﬂd_buf„r_°©e
( );

2456 
	}
}

2462 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2470 
	`yyísuª_buf„r_°ack
 ();

2471 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2474 i‡–
YY_CURRENT_BUFFER
 )

2477 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2478 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2479 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2482 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2483 
	`yy_lﬂd_buf„r_°©e
( );

2490 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2491 
	}
}

2493 
	$yy_lﬂd_buf„r_°©e
 ()

2495 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2496 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2497 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2498 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2499 
	}
}

2507 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2509 
YY_BUFFER_STATE
 
b
;

2511 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

2512 i‡–! 
b
 )

2513 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2515 
b
->
yy_buf_size
 = 
size
;

2520 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2) );

2521 i‡–! 
b
->
yy_ch_buf
 )

2522 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2524 
b
->
yy_is_our_buf„r
 = 1;

2526 
	`yy_öô_buf„r
–
b
, 
fûe
 );

2528  
b
;

2529 
	}
}

2535 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2538 i‡–! 
b
 )

2541 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2542 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2544 i‡–
b
->
yy_is_our_buf„r
 )

2545 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 );

2547 
	`yy‰ì
–(*Ë
b
 );

2548 
	}
}

2554 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2557 
€ºno
 = 
î∫o
;

2559 
	`yy_Êush_buf„r
–
b
 );

2561 
b
->
yy_öput_fûe
 = 
fûe
;

2562 
b
->
yy_fûl_buf„r
 = 1;

2568 i‡(
b
 !
YY_CURRENT_BUFFER
){

2569 
b
->
yy_bs_löío
 = 1;

2570 
b
->
yy_bs_cﬁumn
 = 0;

2573 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2575 
î∫o
 = 
€ºno
;

2576 
	}
}

2582 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2584 i‡–! 
b
 )

2587 
b
->
yy_n_ch¨s
 = 0;

2593 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2594 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2596 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2598 
b
->
yy_©_bﬁ
 = 1;

2599 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2601 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2602 
	`yy_lﬂd_buf„r_°©e
( );

2603 
	}
}

2611 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2613 i‡(
√w_buf„r
 =
NULL
)

2616 
	`yyísuª_buf„r_°ack
();

2619 i‡–
YY_CURRENT_BUFFER
 )

2622 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2623 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2624 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2628 i‡(
YY_CURRENT_BUFFER
)

2629 (
yy_buf„r_°ack_t›
)++;

2630 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2633 
	`yy_lﬂd_buf„r_°©e
( );

2634 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2635 
	}
}

2641 
	$yyp›_buf„r_°©e
 ()

2643 i‡(!
YY_CURRENT_BUFFER
)

2646 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2647 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2648 i‡((
yy_buf„r_°ack_t›
) > 0)

2649 --(
yy_buf„r_°ack_t›
);

2651 i‡(
YY_CURRENT_BUFFER
) {

2652 
	`yy_lﬂd_buf„r_°©e
( );

2653 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2655 
	}
}

2660 
	$yyísuª_buf„r_°ack
 ()

2662 
yy_size_t
 
num_to_Æloc
;

2664 i‡(!(
yy_buf„r_°ack
)) {

2670 
num_to_Æloc
 = 1;

2671 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


2672 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2674 i‡–! (
yy_buf„r_°ack
) )

2675 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2677 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2679 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2680 (
yy_buf„r_°ack_t›
) = 0;

2684 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2687 
yy_size_t
 
grow_size
 = 8 ;

2689 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2690 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


2691 ((
yy_buf„r_°ack
),

2692 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2694 i‡–! (
yy_buf„r_°ack
) )

2695 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2698 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2699 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2701 
	}
}

2709 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2711 
YY_BUFFER_STATE
 
b
;

2713 i‡–
size
 < 2 ||

2714 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2715 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2717  
NULL
;

2719 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

2720 i‡–! 
b
 )

2721 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

2723 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

2724 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2725 
b
->
yy_is_our_buf„r
 = 0;

2726 
b
->
yy_öput_fûe
 = 
NULL
;

2727 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2728 
b
->
yy_is_öãø˘ive
 = 0;

2729 
b
->
yy_©_bﬁ
 = 1;

2730 
b
->
yy_fûl_buf„r
 = 0;

2731 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2733 
	`yy_swôch_to_buf„r
–
b
 );

2735  
b
;

2736 
	}
}

2746 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 )

2749  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yystr) );

2750 
	}
}

2759 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 )

2761 
YY_BUFFER_STATE
 
b
;

2762 *
buf
;

2763 
yy_size_t
 
n
;

2764 
i
;

2767 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

2768 
buf
 = (*Ë
	`yyÆloc
–
n
 );

2769 i‡–! 
buf
 )

2770 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2772  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2773 
buf
[
i
] = 
yybyãs
[i];

2775 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2777 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

2778 i‡–! 
b
 )

2779 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2784 
b
->
yy_is_our_buf„r
 = 1;

2786  
b
;

2787 
	}
}

2789 #i‚de‡
YY_EXIT_FAILURE


2790 
	#YY_EXIT_FAILURE
 2

	)

2793 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 )

2795 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2796 
	`exô
–
YY_EXIT_FAILURE
 );

2797 
	}
}

2801 #unde‡
yyÀss


2802 
	#yyÀss
(
n
) \

2806 
yyÀss_ma¸o_¨g
 = (
n
); \

2807 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2808 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

2809 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2810 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2811 *(
yy_c_buf_p
) = '\0'; \

2812 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2814  0 )

	)

2821 
	$yygë_löío
 ()

2824  
yylöío
;

2825 
	}
}

2830 
FILE
 *
	$yygë_ö
 ()

2832  
yyö
;

2833 
	}
}

2838 
FILE
 *
	$yygë_out
 ()

2840  
yyout
;

2841 
	}
}

2846 
	$yygë_Àng
 ()

2848  
yyÀng
;

2849 
	}
}

2855 *
	$yygë_ãxt
 ()

2857  
yyãxt
;

2858 
	}
}

2864 
	$yy£t_löío
 (
_löe_numbî
 )

2867 
yylöío
 = 
_löe_numbî
;

2868 
	}
}

2876 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

2878 
yyö
 = 
_ö_°r
 ;

2879 
	}
}

2881 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

2883 
yyout
 = 
_out_°r
 ;

2884 
	}
}

2886 
	$yygë_debug
 ()

2888  
yy_Êex_debug
;

2889 
	}
}

2891 
	$yy£t_debug
 (
_bdebug
 )

2893 
yy_Êex_debug
 = 
_bdebug
 ;

2894 
	}
}

2896 
	$yy_öô_globÆs
 ()

2902 (
yy_buf„r_°ack
Ë
NULL
;

2903 (
yy_buf„r_°ack_t›
) = 0;

2904 (
yy_buf„r_°ack_max
) = 0;

2905 (
yy_c_buf_p
Ë
NULL
;

2906 (
yy_öô
) = 0;

2907 (
yy_°¨t
) = 0;

2910 #ifde‡
YY_STDINIT


2911 
yyö
 = 
°dö
;

2912 
yyout
 = 
°dout
;

2914 
yyö
 = 
NULL
;

2915 
yyout
 = 
NULL
;

2922 
	}
}

2925 
	$yyÀx_de°roy
 ()

2929 
YY_CURRENT_BUFFER
){

2930 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 );

2931 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2932 
	`yyp›_buf„r_°©e
();

2936 
	`yy‰ì
((
yy_buf„r_°ack
) );

2937 (
yy_buf„r_°ack
Ë
NULL
;

2941 
	`yy_öô_globÆs
( );

2944 
	}
}

2950 #i‚de‡
yyãxt_±r


2951 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 )

2954 
i
;

2955  
i
 = 0; i < 
n
; ++i )

2956 
s1
[
i
] = 
s2
[i];

2957 
	}
}

2960 #ifde‡
YY_NEED_STRLEN


2961 
	$yy_Êex_°æí
 (c⁄° * 
s
 )

2963 
n
;

2964  
n
 = 0; 
s
[n]; ++n )

2967  
n
;

2968 
	}
}

2971 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2973  
	`mÆloc
(
size
);

2974 
	}
}

2976 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2986  
	`ªÆloc
(
±r
, 
size
);

2987 
	}
}

2989 
	$yy‰ì
 (* 
±r
 )

2991 
	`‰ì
–(*Ë
±r
 );

2992 
	}
}

2994 
	#YYTABLES_NAME
 "yyèbÀs"

	)

3000 
	$yyîr‹
(*
s
)

3002 i‡(
yyãxt
[0] == '\0') {

3003 ()
	`fûebích_log
(
LOG_ERROR
, "%s,ÅokíÉx≥˘ed", 
s
);

3007 ()
	`fûebích_log
(
LOG_ERROR
, "%†© '%s'", 
s
, 
yyãxt
);

3008 
	}
}

3010 
yy_buf„r_°©e
 *
	g∑ª¡
;

3011 
yy_buf„r_°©e
 *
	gs¸ùt
;

3014 
	$yy_swôchfûï¨ít
(
FILE
 *
fûe
)

3016 
s¸ùt
 = 
YY_CURRENT_BUFFER
;

3017 
∑ª¡
 = (
yy_buf„r_°©e
 *)
	`yy_¸óã_buf„r
(
yyö
, 128);

3018 
	`yy_swôch_to_buf„r
(
∑ª¡
);

3020 
	}
}

3023 
	$yy_swôchfûes¸ùt
(
FILE
 *
fûe
)

3025 
	`yy_swôch_to_buf„r
(
s¸ùt
);

3027 
	}
}

	@parsertypes.h

27 #i‚def 
_FB_PARSERTYPES_H


28 
	#_FB_PARSERTYPES_H


	)

30 
	~"fûebích.h
"

32 
	#DOFILE_FALSE
 0

	)

33 
	#DOFILE_TRUE
 1

	)

35 
	#FSE_SYSTEM
 1

	)

37 
	sli°
 {

38 
li°
 *
	mli°_√xt
;

39 
avd_t
 
	mli°_°rög
;

40 
avd_t
 
	mli°_öãgî
;

41 } 
	tli°_t
;

43 
	s©å
 {

44 
	m©å_«me
;

45 
©å
 *
	m©å_√xt
;

46 
avd_t
 
	m©å_avd
;

47 *
	m©å_obj
;

48 } 
	t©å_t
;

50 
	scmd
 {

51 (*
	mcmd
)(cmd *);

52 *
	mcmd_«me
;

53 *
	mcmd_tgt1
;

54 *
	mcmd_tgt2
;

55 *
	mcmd_tgt3
;

56 *
	mthªad_«me
;

57 
	mcmd_subty≥
;

58 
uöt64_t
 
	mcmd_qty
;

59 
öt64_t
 
	mcmd_qty1
;

60 
cmd
 *
	mcmd_li°
;

61 
cmd
 *
	mcmd_√xt
;

62 
©å_t
 *
	mcmd_©å_li°
;

63 
li°_t
 *
	mcmd_∑øm_li°
;

64 
li°_t
 *
	mcmd_∑øm_li°2
;

65 } 
	tcmd_t
;

68 
öt64_t
 
	mi
;

69 
	mb
;

70 *
	ms
;

71 } 
	tfs_u
;

73 
	spidli°
 {

74 
pidli°
 *
	m∂_√xt
;

75 
	m∂_fd
;

76 
pid_t
 
	m∂_pid
;

77 } 
	tpidli°_t
;

79 (*
	tcmdfunc
)(
	tcmd_t
 *);

80 
	`yy_swôchfûï¨ít
(
FILE
 *
fûe
);

81 
	`yy_swôchfûes¸ùt
(
FILE
 *
fûe
);

	@procflow.c

28 
	~<sig«l.h
>

29 
	~<f˙é.h
>

30 
	~<sys/°©.h
>

31 
	~<sys/waô.h
>

33 
	~"fûebích.h
"

34 
	~"¥ocÊow.h
"

35 
	~"Êow›.h
"

36 
	~"ùc.h
"

37 
	~"evítgí.h
"

40 
pid_t
 
	gmy_pid
;

41 
¥ocÊow_t
 *
	gmy_¥ocÊow
 = 
NULL
;

43 
¥ocÊow_t
 *
¥ocÊow_deföe_comm⁄
’rocÊow_à**
li°
, *
«me
,

44 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
);

45 
¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
);

68 
	$¥ocÊow_¸óã¥oc
(
¥ocÊow_t
 *
¥ocÊow
)

70 
pid_t
 
pid
 = 0;

72 
ö°™˚
[128];

73 
shmaddr
[128];

74 
¥o˙ame
[128];

76 (Ë
	`¢¥ötf
(
ö°™˚
,  (instance), "%d",

77 
¥ocÊow
->
pf_ö°™˚
);

78 (Ë
	`¢¥ötf
(
¥o˙ame
,  (¥o˙ame), "%s", 
¥ocÊow
->
pf_«me
);

79 (Ë
	`¢¥ötf
(
shmaddr
,  (shmaddr), "%p", 
fûebích_shm
);

80 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "creatingÖrocess %s",

81 
¥ocÊow
->
pf_«me
);

83 
¥ocÊow
->
pf_ru¬ög
 = 0;

85 #ifde‡
HAVE_FORK1


86 i‡((
pid
 = 
	`f‹k1
()) < 0) {

87 
	`fûebích_log
(
LOG_ERROR
,

89 
	`°ªº‹
(
î∫o
));

93 i‡((
pid
 = 
	`f‹k
()) < 0) {

94 
	`fûebích_log
(
LOG_ERROR
,

96 
	`°ªº‹
(
î∫o
));

102 i‡(
pid
 == 0) {

103 #ifde‡
USE_SYSTEM


104 
syscmd
[1024];

107 (Ë
	`sigign‹e
(
SIGINT
);

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

109 "Sèπög %s-%d", 
¥ocÊow
->
pf_«me
,

110 
¥ocÊow
->
pf_ö°™˚
);

113 #ifde‡
USE_SYSTEM


114 (Ë
	`¢¥ötf
(
syscmd
,  (syscmd), "%s -a %s -i %s -s %s",

115 
exe˙ame
,

116 
¥o˙ame
,

117 
ö°™˚
,

118 
shmaddr
);

119 i‡(
	`sy°em
(
syscmd
) < 0) {

120 
	`fûebích_log
(
LOG_ERROR
,

122 
	`°ªº‹
(
î∫o
));

123 
	`fûebích_shutdown
(1);

127 i‡(
	`exe˛p
(
exe˙ame
, 
¥o˙ame
, "-a",Örocname, "-i",

128 
ö°™˚
, "-s", 
shmaddr
, "-m", 
shm∑th
, 
NULL
) < 0) {

129 
	`fûebích_log
(
LOG_ERROR
,

131 
	`°ªº‹
(
î∫o
));

132 
	`fûebích_shutdown
(1);

135 
	`exô
(1);

138 
¥ocÊow
->
pf_pid
 = 
pid
;

141 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "procflow_createproc createdÖid %d",

142 
pid
);

145 
	}
}

155 
	$¥ocÊow_¸óã_Æl_¥ocs
()

157 
¥ocÊow_t
 *
¥ocÊow
;

158 
ªt
 = 0;

160 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

161 
¥ocÊow
) {

162 
ö°™˚s
;

163 
i
;

165 
ö°™˚s
 = ()
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
);

166 
	`fûebích_log
(
LOG_INFO
, "Starting %d %s instances",

167 
ö°™˚s
, 
¥ocÊow
->
pf_«me
);

170 
i
 = 0; (ò< 
ö°™˚s
Ë&& (
ªt
 == 0); i++) {

171 
¥ocÊow_t
 *
√w¥oc
;

174 
√w¥oc
 =

175 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

176 
¥ocÊow
->
pf_«me
,ÖrocÊow, 
i
 + 1);

186 i‡(!
√w¥oc
) {

187 
ªt
 = -1;

189 
	`˛ór_Êag
(&
√w¥oc
->
pf_thªads_deföed_Êag
);

190 
ªt
 = 
	`¥ocÊow_¸óã¥oc
(
√w¥oc
);

194 i‡(
ªt
)

197 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

202 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

203 
¥ocÊow
) {

204 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

205 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

206 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

210 
	`waô_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

212 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

215  (
ªt
);

216 
	}
}

225 
¥ocÊow_t
 *

226 
	$¥ocÊow_föd
(*
«me
, 
ö°™˚
)

228 
¥ocÊow_t
 *
¥ocÊow
;

230 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

232 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

234 
¥ocÊow
) {

235 i‡((
	`°rcmp
(
«me
, 
¥ocÊow
->
pf_«me
) == 0) &&

236 (
ö°™˚
 =
¥ocÊow
->
pf_ö°™˚
)) {

237 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

238  (
¥ocÊow
);

241 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

244 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

246  (
NULL
);

247 
	}
}

260 
	$¥ocÊow_exec
(*
«me
, 
ö°™˚
)

262 
¥ocÊow_t
 *
¥ocÊow
;

263 
¥oc_ni˚
;

264 #ifde‡
HAVE_SETRLIMIT


265 
æimô
 
æp
;

267 
ªt
;

269 i‡((
¥ocÊow
 = 
	`¥ocÊow_föd
(
«me
, 
ö°™˚
)Ë=
NULL
) {

270 
	`fûebích_log
(
LOG_FATAL
,

272 
«me
, 
ö°™˚
);

277 
my_¥ocÊow
 = 
¥ocÊow
;

280 
¥ocÊow
->
pf_pid
 = 
my_pid
;

282 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

283 "Sèπed u∞%†pid %d", 
¥ocÊow
->
pf_«me
, 
my_pid
);

285 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

286 "ni˚ = %Œx", 
¥ocÊow
->
pf_ni˚
);

288 
¥oc_ni˚
 = 
	`avd_gë_öt
(
¥ocÊow
->
pf_ni˚
);

289 i‡(
¥oc_ni˚
)

290 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri of %s-%dÅo %d",

291 
«me
, 
ö°™˚
, 
	`ni˚
(
¥oc_ni˚
));

293 
¥ocÊow
->
pf_ru¬ög
 = 1;

295 #ifde‡
HAVE_SETRLIMIT


297 (Ë
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

298 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%d fûêdes¸ùt‹s", 
æp
.
æim_cur
);

301 i‡((
ªt
 = 
	`thªadÊow_öô
(
¥ocÊow
)Ë!
FILEBENCH_OK
) {

302 i‡(
ªt
 < 0) {

303 
	`fûebích_log
(
LOG_ERROR
,

305 
¥ocÊow
->
pf_«me
, 
my_pid
);

308 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

312 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

313 
fûebích_shm
->
shm_¥ocs_ru¬ög
 --;

314 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

315 
¥ocÊow
->
pf_ru¬ög
 = 0;

317  (
ªt
);

318 
	}
}

327 
	$¥ocÊow_¸óãnwaô
(*
unu£d
)

330 
	`¥ocÊow_¸óã_Æl_¥ocs
();

339 
	`£t_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

345 #ifde‡
HAVE_WAITID


346 
sigöfo_t
 
°©us
;

347 i‡(
	`waôid
(
P_ALL
, 0, &
°©us
, 
WEXITED
) != 0)

349 
°©us
;

350 i‡(
	`waôpid
(-1, &
°©us
, 0) < 0)

352 
	`±hªad_exô
(0);

354 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

356 i‡(
fûebích_shm
->
shm_f_ab‹t
) {

357 (Ë
	`ùc_muãx_u∆ock
(

358 &
fûebích_shm
->
shm_¥ocÊow_lock
);

359 
	`±hªad_exô
(0);

363 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 == 0) {

364 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_RSRC
;

365 (Ë
	`ùc_muãx_u∆ock
(

366 &
fûebích_shm
->
shm_¥ocÊow_lock
);

367 
	`±hªad_exô
(0);

369 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

371 #ifde‡
HAVE_WAITID


372 i‡(
°©us
.
si_code
 =
CLD_EXITED
) {

374 i‡(
°©us
.
si_°©us
 != 0) {

375 
	`fûebích_log
(
LOG_ERROR
,

377 
°©us
.
si_°©us
);

378 
	`fûebích_shutdown
(1);

382 
	`fûebích_log
(
LOG_ERROR
,

384 
°©us
.
si_code
, sètus.
si_î∫o
);

385 
	`fûebích_shutdown
(1);

389 i‡(
	`WIFSTOPPED
(
°©us
Ë|| 
	`WIFCONTINUED
(status))

392 i‡(
	`WIFEXITED
(
°©us
)) {

394 i‡(
	`WEXITSTATUS
(
°©us
) != 0) {

395 
	`fûebích_log
(
LOG_ERROR
,

397 
	`WEXITSTATUS
(
°©us
));

398 
	`fûebích_shutdown
(1);

402 
	`fûebích_log
(
LOG_ERROR
,

404 
	`WTERMSIG
(
°©us
));

405 
	`fûebích_shutdown
(1);

411  (
NULL
);

412 
	}
}

420 
	$¥ocÊow_ˇn˚l
(
¨g1
)

422 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Process signal handler onÖid %",

423 
my_¥ocÊow
->
pf_pid
);

425 
	`¥ocÊow_¶ìp
(
my_¥ocÊow
, 
SHUTDOWN_WAIT_SECONDS
);

427 
	`thªadÊow_dñëe_Æl
(&
my_¥ocÊow
->
pf_thªads
);

430 
	`exô
(0);

431 
	}
}

438 
	$¥ocÊow_öô
()

440 
¥ocÊow_t
 *
¥ocÊow
;

441 
±hªad_t
 
tid
;

442 
ªt
 = 0;

444 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

446 i‡(!
¥ocÊow
) {

447 
	`fûebích_log
(
LOG_ERROR
, "Workload hasÇoÖrocesses");

448  (
FILEBENCH_ERROR
);

451 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

453 
¥ocÊow
->
pf_«me
,

454 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
));

461 
	`˛ór_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

463 
ªt
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
¥ocÊow_¸óãnwaô
, NULL);

464 i‡(
ªt
)

465  
ªt
;

467 (Ë
	`sig«l
(
SIGUSR1
, 
¥ocÊow_ˇn˚l
);

473 
	`waô_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

475  (
ªt
);

476 
	}
}

483 
	$¥ocÊow_waô
(
pid_t
 
pid
)

485 
pid_t
 
wpid
;

486 
°©
;

488 (Ë
	`waôpid
(
pid
, &
°©
, 0);

489 (
wpid
 = 
	`waôpid
(
	`gëpid
(Ë* -1, &
°©
, 
WNOHANG
)) > 0)

490 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Waôed f‹Öid %d", ()
wpid
);

491 
	}
}

498 
	$¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
)

500 
¥ocÊow
->
pf_ru¬ög
 & 
waô_˙t
) {

501 (Ë
	`¶ìp
(1);

502 
waô_˙t
--;

504 
	}
}

514 
	$¥ocÊow_˛ónup
(
¥ocÊow_t
 *
¥ocÊow
)

516 
¥ocÊow_t
 *
íåy
;

518 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

520 
¥ocÊow
->
pf_«me
,

521 
¥ocÊow
->
pf_ö°™˚
,

522 
¥ocÊow
->
pf_pid
);

524 
¥ocÊow
->
pf_ru¬ög
 = 0;

527 
íåy
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

530 i‡(
íåy
 =
¥ocÊow
) {

532 
fûebích_shm
->
shm_¥ocÊowli°
 = 
¥ocÊow
->
pf_√xt
;

535 
íåy
 &&É¡ry->
pf_√xt
 !
¥ocÊow
)

536 
íåy
 =É¡ry->
pf_√xt
;

539 i‡(
íåy
 =
NULL
)

542 
íåy
->
pf_√xt
 = 
¥ocÊow
->pf_next;

546 
	`ùc_‰ì
(
FILEBENCH_PROCFLOW
, (*)
¥ocÊow
);

548 
	}
}

563 
	$¥ocÊow_Æl°¨ãd
()

565 
¥ocÊow_t
 *
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

566 
ru¬ög_¥ocs
 = 0;

567 
ªt
 = 0;

569 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

571 (Ë
	`¶ìp
(1);

573 
¥ocÊow
) {

574 
waôs
;

576 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

577 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

578 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

582 
waôs
 = 10;

583 
waôs
 && 
¥ocÊow
->
pf_ru¬ög
 == 0) {

584 (Ë
	`ùc_muãx_u∆ock
(

585 &
fûebích_shm
->
shm_¥ocÊow_lock
);

586 i‡(
fûebích_shm
->
shm_f_ab‹t
 == 1)

589 i‡(
waôs
 < 3)

590 
	`fûebích_log
(
LOG_INFO
,

592 
¥ocÊow
->
pf_«me
,

593 
¥ocÊow
->
pf_ö°™˚
,

594 
¥ocÊow
->
pf_pid
);

596 (Ë
	`¶ìp
(3);

597 
waôs
--;

598 (Ë
	`ùc_muãx_lock
(

599 &
fûebích_shm
->
shm_¥ocÊow_lock
);

602 i‡(
waôs
 == 0)

603 
	`fûebích_log
(
LOG_INFO
,

605 
¥ocÊow
->
pf_«me
,

606 
¥ocÊow
->
pf_ö°™˚
);

608 
ru¬ög_¥ocs
++;

609 
	`thªadÊow_Æl°¨ãd
(
¥ocÊow
->
pf_pid
,ÖrocÊow->
pf_thªads
);

611 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

614 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

615 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 
ru¬ög_¥ocs
;

616 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

618 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

621  (
ªt
);

622 
	}
}

634 
	$¥ocÊow_shutdown
()

636 
¥ocÊow_t
 *
¥ocÊow
, *
√xt_¥ocÊow
;

637 
waô_˙t
 = 
SHUTDOWN_WAIT_SECONDS
;

639 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

640 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 <= 0) {

642 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

645 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

647 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

648 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

649 (Ë
	`ùc_muãx_u∆ock
(

650 &
fûebích_shm
->
shm_¥ocÊow_lock
);

654 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

655 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_OK
)

656 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_DONE
;

658 
¥ocÊow
) {

659 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

660 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

661 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

664 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÖrocess %s-%d %d",

665 
¥ocÊow
->
pf_«me
,

666 
¥ocÊow
->
pf_ö°™˚
,

667 
¥ocÊow
->
pf_pid
);

669 
√xt_¥ocÊow
 = 
¥ocÊow
->
pf_√xt
;

675 
	`¥ocÊow_¶ìp
(
¥ocÊow
, 
waô_˙t
);

676 i‡(
¥ocÊow
->
pf_ru¬ög
) {

677 
pid_t
 
pid
;

679 
pid
 = 
¥ocÊow
->
pf_pid
;

680 #ifde‡
HAVE_SIGSEND


681 (Ë
	`sig£nd
(
P_PID
, 
pid
, 
SIGUSR1
);

683 (Ë
	`kûl
(
pid
, 
SIGUSR1
);

685 
	`¥ocÊow_waô
(
pid
);

687 (Ë
	`¥ocÊow_˛ónup
(
¥ocÊow
);

688 
¥ocÊow
 = 
√xt_¥ocÊow
;

689 i‡(
waô_˙t
 > 0)

690 
waô_˙t
--;

693 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_FINI
;

694 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

697 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

698 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 0;

699 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

700 
	}
}

714 
¥ocÊow_t
 *

715 
	$¥ocÊow_deföe_comm⁄
(
¥ocÊow_t
 **
li°
, *
«me
,

716 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
)

718 
¥ocÊow_t
 *
¥ocÊow
;

720 i‡(
«me
 =
NULL
)

721  (
NULL
);

723 
¥ocÊow
 = (
¥ocÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_PROCFLOW
);

725 i‡(
¥ocÊow
 =
NULL
)

726  (
NULL
);

728 i‡(
öhîô
)

729 (Ë
	`mem˝y
(
¥ocÊow
, 
öhîô
,  (
¥ocÊow_t
));

731 (Ë
	`mem£t
(
¥ocÊow
, 0,  (
¥ocÊow_t
));

733 
¥ocÊow
->
pf_ö°™˚
 = 
ö°™˚
;

734 (Ë
	`°r˝y
(
¥ocÊow
->
pf_«me
, 
«me
);

736 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "deföögÖro˚s†%s-%d", 
«me
, 
ö°™˚
);

739 i‡(*
li°
 =
NULL
) {

740 *
li°
 = 
¥ocÊow
;

741 
¥ocÊow
->
pf_√xt
 = 
NULL
;

743 
¥ocÊow
->
pf_√xt
 = *
li°
;

744 *
li°
 = 
¥ocÊow
;

746 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "process %s-%dÖroclist %zx",

747 
«me
, 
ö°™˚
, 
fûebích_shm
->
shm_¥ocÊowli°
);

749  (
¥ocÊow
);

750 
	}
}

761 
¥ocÊow_t
 *

762 
	$¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
)

764 
¥ocÊow_t
 *
¥ocÊow
;

766 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

768 
¥ocÊow
 = 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

769 
«me
, 
NULL
, 
FLOW_MASTER
);

770 
¥ocÊow
->
pf_ö°™˚s
 = 
ö°™˚s
;

772 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

774  (
¥ocÊow
);

775 
	}
}

790 
	$¥oc_¸óã
()

792 
fûebích_shm
->
shm_1°_îr
 = 0;

793 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_OK
;

795 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_run_lock
);

797 i‡(
	`¥ocÊow_öô
() != 0) {

798 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo createÖrocesses\n");

799 
	`fûebích_shutdown
(1);

803 i‡(
	`¥ocÊow_Æl°¨ãd
() != 0) {

804 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot startÑun");

812 i‡(
fûebích_shm
->
shm_ªquúed
 &&

813 (
	`ùc_ism¸óã
(
fûebích_shm
->
shm_ªquúed
) < 0)) {

814 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotállocate shared memory");

819 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

821 
fûebích_shm
->
shm_°¨âime
 = 
	`gëhπime
();

822 
	`evítgí_ª£t
();

823 
	}
}

831 
	$¥oc_shutdown
()

833 
	`fûebích_log
(
LOG_INFO
, "Shutting downÖrocesses");

834 
	`¥ocÊow_shutdown
();

835 i‡(
fûebích_shm
->
shm_ªquúed
)

836 
	`ùc_ismdñëe
();

837 
	`evítgí_ª£t
();

838 
	}
}

	@procflow.h

26 #i‚de‡
_FB_PROCFLOW_H


27 
	#_FB_PROCFLOW_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
	s¥ocÊow
 {

34 
	mpf_«me
[128];

35 
	mpf_ö°™˚
;

36 
avd_t
 
	mpf_ö°™˚s
;

37 
	mpf_ru¬ög
;

38 
Êag_t
 
	mpf_thªads_deföed_Êag
;

39 
¥ocÊow
 *
	mpf_√xt
;

40 
pid_t
 
	mpf_pid
;

41 
±hªad_t
 
	mpf_tid
;

42 
thªadÊow
 *
	mpf_thªads
;

43 
	mpf_©ås
;

44 
avd_t
 
	mpf_ni˚
;

45 } 
	t¥ocÊow_t
;

47 
¥ocÊow_t
 *
¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
);

48 
¥oc_¸óã
();

49 
¥ocÊow_shutdown
();

50 
¥oc_shutdown
();

51 
¥ocÊow_exec
(*
«me
, 
ö°™˚
);

	@stats.c

27 
	~<°dio.h
>

28 
	~<f˙é.h
>

29 
	~<sys/ty≥s.h
>

30 
	~<°d¨g.h
>

31 
	~<limôs.h
>

33 
	~"fûebích.h
"

34 
	~"Êow›.h
"

35 
	~"v¨s.h
"

36 
	~"°©s.h
"

37 
	~"fbtime.h
"

45 
Êow°©s
 *
	gglobÆ°©s
 = 
NULL
;

51 
	$°©s_add
(
Êow°©s
 *
a
, Êow°©†*
b
)

53 
i
;

55 
a
->
fs_cou¡
 +
b
->fs_count;

56 
a
->
fs_rcou¡
 +
b
->fs_rcount;

57 
a
->
fs_wcou¡
 +
b
->fs_wcount;

58 
a
->
fs_byãs
 +
b
->fs_bytes;

59 
a
->
fs_rbyãs
 +
b
->fs_rbytes;

60 
a
->
fs_wbyãs
 +
b
->fs_wbytes;

61 
a
->
fs_tŸÆ_œt
 +
b
->fs_total_lat;

63 i‡(
b
->
fs_maxœt
 > 
a
->fs_maxlat)

64 
a
->
fs_maxœt
 = 
b
->fs_maxlat;

66 i‡(
b
->
fs_möœt
 < 
a
->fs_minlat)

67 
a
->
fs_möœt
 = 
b
->fs_minlat;

69 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++)

70 
a
->
fs_di°ributi⁄
[
i
] +
b
->fs_distribution[i];

71 
	}
}

83 
	$°©s_¢≠
()

85 
Êow°©s
 *
io°©
 = &
globÆ°©s
[
FLOW_TYPE_IO
];

86 
Êow°©s
 *
aio°©
 = &
globÆ°©s
[
FLOW_TYPE_AIO
];

87 
hπime_t
 
‹ig_°¨âime
;

88 
Êow›_t
 *
Êow›
;

89 *
°r
;

90 
tŸÆ_time_£c
;

92 i‡(!
globÆ°©s
) {

93 
	`fûebích_log
(
LOG_ERROR
,

99 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_ERROR
) {

100 
	`fûebích_log
(
LOG_ERROR
,

106 
fûebích_shm
->
shm_bequõt
 = 1;

113 
‹ig_°¨âime
 = 
globÆ°©s
->
fs_°ime
;

114 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 * (
Êow°©s
));

115 
globÆ°©s
->
fs_°ime
 = 
‹ig_°¨âime
;

116 
globÆ°©s
->
fs_ëime
 = 
	`gëhπime
();

118 
tŸÆ_time_£c
 = (
globÆ°©s
->
fs_ëime
 -

119 
globÆ°©s
->
fs_°ime
Ë/ 
SEC2NS_FLOAT
;

120 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "StatsÖeriod = %.0f sec",

121 
tŸÆ_time_£c
);

124 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 i‡(
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
) {

127 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0, (
Êow°©s
));

128 
Êow›
->
fo_°©s
.
fs_möœt
 = 
ULLONG_MAX
;

130 
Êow›
 = flow›->
fo_√xt
;

134 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

135 
Êow›
) {

136 
Êow›_t
 *
Êow›_ma°î
;

138 i‡(
Êow›
->
fo_ö°™˚
 <
FLOW_DEFINITION
) {

139 
Êow›
 = flow›->
fo_√xt
;

144 
	`°©s_add
(&
globÆ°©s
[
Êow›
->
fo_ty≥
], &Êow›->
fo_°©s
);

145 
	`°©s_add
(&
globÆ°©s
[
FLOW_TYPE_GLOBAL
], &
Êow›
->
fo_°©s
);

147 
Êow›_ma°î
 = 
	`Êow›_föd_⁄e
(
Êow›
->
fo_«me
, 
FLOW_MASTER
);

148 i‡(
Êow›_ma°î
) {

150 
	`°©s_add
(&
Êow›_ma°î
->
fo_°©s
, &
Êow›
->fo_stats);

152 
	`fûebích_log
(
LOG_DEBUG_NEVER
,

154 
Êow›
->
fo_«me
);

157 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

160 
Êow›
->
fo_«me
,

161 
Êow›
->
fo_ö°™˚
,

162 
Êow›
->
fo_°©s
.
fs_cou¡
,

163 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

164 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

165 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

166 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

167 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

169 
Êow›
 = flow›->
fo_√xt
;

173 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

174 
°r
 = 
	`mÆloc
(1048576);

175 *
°r
 = '\0';

176 (Ë
	`°r˝y
(
°r
, "Per-Operation Breakdown\n");

177 
Êow›
) {

178 
löe
[1024];

179 
hi°ogøm
[1024];

180 
hi°_ªadög
[20];

181 
i
 = 0;

183 i‡(
Êow›
->
fo_ö°™˚
 !
FLOW_MASTER
) {

184 
Êow›
 = flow›->
fo_√xt
;

188 (Ë
	`¢¥ötf
(
löe
, (line), "%-20s %dops %8.0lfops/s "

190 
Êow›
->
fo_«me
,

191 
Êow›
->
fo_°©s
.
fs_cou¡
,

192 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

193 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

194 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

195 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

196 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

197 (Ë
	`°rˇt
(
°r
, 
löe
);

199 (Ë
	`¢¥ötf
(
löe
, (line)," [%.2fms - %5.2fms]",

200 
Êow›
->
fo_°©s
.
fs_möœt
 / 
SEC2MS_FLOAT
,

201 
Êow›
->
fo_°©s
.
fs_maxœt
 / 
SEC2MS_FLOAT
);

202 (Ë
	`°rˇt
(
°r
, 
löe
);

204 i‡(
fûebích_shm
->
œthi°_íabÀd
) {

205 (Ë
	`•rötf
(
hi°ogøm
, "\t[ ");

206 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

207 (Ë
	`•rötf
(
hi°_ªadög
, "%lu ",

208 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]);

209 (Ë
	`°rˇt
(
hi°ogøm
, 
hi°_ªadög
);

211 (Ë
	`°rˇt
(
hi°ogøm
, "]\n");

212 (Ë
	`°rˇt
(
°r
, 
hi°ogøm
);

214 (Ë
	`°rˇt
(
°r
, "\n");

216 
Êow›
 = flow›->
fo_√xt
;

220 
°r
[
	`°æí
(str) - 1] = '\0';

222 
	`fûebích_log
(
LOG_INFO
, "%s", 
°r
);

223 
	`‰ì
(
°r
);

225 
	`fûebích_log
(
LOG_INFO
,

228 
io°©
->
fs_cou¡
 + 
aio°©
->fs_count,

229 (
io°©
->
fs_cou¡
 + 
aio°©
->fs_cou¡Ë/ 
tŸÆ_time_£c
,

230 (
io°©
->
fs_rcou¡
 + 
aio°©
->fs_rcou¡Ë/ 
tŸÆ_time_£c
,

231 (
io°©
->
fs_wcou¡
 + 
aio°©
->fs_wcou¡Ë/ 
tŸÆ_time_£c
,

232 ((
io°©
->
fs_byãs
 + 
aio°©
->fs_byãsË/ 
MB_FLOAT
)

233 / 
tŸÆ_time_£c
,

234 (
io°©
->
fs_rcou¡
 + io°©->
fs_wcou¡
) ?

235 
io°©
->
fs_tŸÆ_œt
 /

236 ((
io°©
->
fs_rcou¡
 + io°©->
fs_wcou¡
Ë* 
SEC2MS_FLOAT
) : 0);

238 
fûebích_shm
->
shm_bequõt
 = 0;

239 
	}
}

247 
	$°©s_˛ór
()

249 
Êow›_t
 *
Êow›
;

251 i‡(
globÆ°©s
 =
NULL
)

252 
globÆ°©s
 = 
	`mÆloc
(
FLOW_TYPES
 *  (
Êow°©s
));

254 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 *  (
Êow°©s
));

256 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

258 
Êow›
) {

259 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Clearing stats for %s-%d",

260 
Êow›
->
fo_«me
,

261 
Êow›
->
fo_ö°™˚
);

262 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0,  (
Êow°©s
));

263 
Êow›
 = flow›->
fo_√xt
;

266 (Ë
	`mem£t
(
globÆ°©s
, 0, (
Êow°©s
));

267 
globÆ°©s
->
fs_°ime
 = 
	`gëhπime
();

268 
	}
}

	@stats.h

26 #i‚def 
_FB_STATS_H


27 
	#_FB_STATS_H


	)

29 
	~"fûebích.h
"

30 
	~"fbtime.h
"

32 
°©s_˛ór
();

33 
°©s_¢≠
();

35 
	#OSPROF_BUCKET_NUMBER
 64

	)

37 
	sÊow°©s
 {

40 
	mfs_cou¡
;

41 
uöt64_t
 
	mfs_rcou¡
;

42 
uöt64_t
 
	mfs_wcou¡
;

44 
uöt64_t
 
	mfs_byãs
;

45 
uöt64_t
 
	mfs_rbyãs
;

46 
uöt64_t
 
	mfs_wbyãs
;

48 
	mfs_di°ributi⁄
[
OSPROF_BUCKET_NUMBER
];

49 
hπime_t
 
	mfs_tŸÆ_œt
;

50 
	mfs_maxœt
;

51 
	mfs_möœt
;

56 
hπime_t
 
	mfs_°ime
;

57 
hπime_t
 
	mfs_ëime
;

60 
	#IS_FLOW_IOP
(
x
Ë(x->
fo_°©s
.
fs_rcou¡
 + x->fo_°©s.
fs_wcou¡
)

	)

61 
	#STAT_IOPS
(
x
Ë((x->
fs_rcou¡
Ë+ (x->
fs_wcou¡
))

	)

62 
	#IS_FLOW_ACTIVE
(
x
Ë(x->
fo_°©s
.
fs_cou¡
)

	)

63 
	#STAT_CPUTIME
(
x
Ë(x->
fs_˝u_›
)

	)

64 
	#STAT_OHEADTIME
(
x
Ë(x->
fs_˝u_ohód
)

	)

	@threadflow.c

28 
	~"c⁄fig.h
"

29 
	~<±hªad.h
>

30 
	~<sig«l.h
>

32 
	~"fûebích.h
"

33 
	~"thªadÊow.h
"

34 
	~"Êow›.h
"

35 
	~"ùc.h
"

37 
thªadÊow_t
 *
thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
,

38 *
«me
, 
thªadÊow_t
 *
öhîô
, 
ö°™˚
);

64 
	$thªadÊow_¸óãthªad
(
thªadÊow_t
 *
thªadÊow
)

66 
fböt_t
 
memsize
;

67 
memsize
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_memsize
);

68 
thªadÊow
->
tf_c⁄°memsize
 = 
memsize
;

69 
ªt
;

71 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "CreatingÅhread %s, memory = %ld",

72 
thªadÊow
->
tf_«me
, 
memsize
);

74 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

75 
fûebích_shm
->
shm_ªquúed
 +
memsize
;

77 
ªt
 = 
	`±hªad_¸óã
(&
thªadÊow
->
tf_tid
, 
NULL
,

78 (*(*)(*))
Êow›_°¨t
, 
thªadÊow
);

79 i‡(
ªt
 != 0) {

80 
	`fûebích_log
(
LOG_ERROR
, "thªad cª©êÁûed: %s", 
	`°ªº‹
(
ªt
));

81 
	`fûebích_shutdown
(1);

82  (
FILEBENCH_ERROR
);

85  (
FILEBENCH_OK
);

86 
	}
}

105 
	$thªadÊow_öô
(
¥ocÊow_t
 *
¥ocÊow
)

107 
thªadÊow_t
 *
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

108 
ªt
 = 0;

110 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

112 
thªadÊow
) {

113 
thªadÊow_t
 *
√wthªad
;

114 
ö°™˚s
;

115 
i
;

117 
ö°™˚s
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_ö°™˚s
);

118 
	`fûebích_log
(
LOG_VERBOSE
,

120 
ö°™˚s
, 
thªadÊow
->
tf_«me
);

122 
i
 = 1; i < 
ö°™˚s
; i++) {

124 
√wthªad
 =

125 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

126 
thªadÊow
->
tf_«me
,ÅhªadÊow, 
i
 + 1);

127 i‡(
√wthªad
 =
NULL
)

129 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

132 
√wthªad
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

133 
thªadÊow
->
tf_«me
,

134 
thªadÊow
, 1);

136 i‡(
√wthªad
 =
NULL
)

140 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

142 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

145 
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

147 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

157 
	`£t_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

159 
thªadÊow
) {

161 i‡(
thªadÊow
->
tf_tid
) {

162 *
°©us
;

164 i‡(
	`±hªad_joö
(
thªadÊow
->
tf_tid
, &
°©us
) == 0)

165 
ªt
 +*(*)
°©us
;

167 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

170 
¥ocÊow
->
pf_ru¬ög
 = 0;

172  (
ªt
);

173 
	}
}

180 
	$thªadÊow_kûl
(
thªadÊow_t
 *
thªadÊow
)

182 
waô_˙t
 = 2;

185 
thªadÊow
->
tf_ab‹t
 = 1;

188 
waô_˙t
 && 
thªadÊow
->
tf_ru¬ög
) {

189 (Ë
	`¶ìp
(1);

190 
waô_˙t
--;

193 i‡(
thªadÊow
->
tf_ru¬ög
) {

194 
thªadÊow
->
tf_ru¬ög
 = 
FALSE
;

195 (Ë
	`±hªad_kûl
(
thªadÊow
->
tf_tid
, 
SIGKILL
);

197 
	}
}

209 
	$thªadÊow_dñëe
(
thªadÊow_t
 **
thªadli°
,ÅhªadÊow_à*
thªadÊow
)

211 
thªadÊow_t
 *
íåy
 = *
thªadli°
;

213 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÅhread: (%s-%d)",

214 
thªadÊow
->
tf_«me
,

215 
thªadÊow
->
tf_ö°™˚
);

217 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

218 
fûebích_shm
->
shm_ªquúed
 -
thªadÊow
->
tf_c⁄°memsize
;

220 i‡(
thªadÊow
 =*
thªadli°
) {

222 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletedÅhread: (%s-%d)",

223 
thªadÊow
->
tf_«me
,

224 
thªadÊow
->
tf_ö°™˚
);

226 
	`thªadÊow_kûl
(
thªadÊow
);

227 
	`Êow›_dñëe_Æl
(&
thªadÊow
->
tf_thrd_f›s
);

228 *
thªadli°
 = 
thªadÊow
->
tf_√xt
;

229 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

230 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

234 
íåy
->
tf_√xt
) {

235 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

237 
íåy
->
tf_√xt
->
tf_«me
,

238 
íåy
->
tf_√xt
->
tf_ö°™˚
,

239 
thªadÊow
->
tf_«me
,

240 
thªadÊow
->
tf_ö°™˚
);

242 i‡(
thªadÊow
 =
íåy
->
tf_√xt
) {

244 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

246 
íåy
->
tf_√xt
->
tf_«me
,

247 
íåy
->
tf_√xt
->
tf_ö°™˚
);

248 
	`thªadÊow_kûl
(
íåy
->
tf_√xt
);

249 
	`Êow›_dñëe_Æl
(&
íåy
->
tf_√xt
->
tf_thrd_f›s
);

250 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

251 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

252 
íåy
->
tf_√xt
 =Éntry->tf_next->tf_next;

255 
íåy
 =É¡ry->
tf_√xt
;

259 
	}
}

267 
	$thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
)

269 
thªadÊow_t
 *
thªadÊow
;

271 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

273 
thªadÊow
 = *
thªadli°
;

274 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingállÅhreads");

276 
thªadÊow
) {

277 i‡(
thªadÊow
->
tf_ö°™˚
 &&

278 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

279 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

282 (Ë
	`thªadÊow_dñëe
(
thªadli°
, 
thªadÊow
);

283 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

286 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

287 
	}
}

297 
	$thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
)

299 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

301 
thªadÊow
) {

302 
waôs
;

304 i‡((
thªadÊow
->
tf_ö°™˚
 == 0) ||

305 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

306 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

310 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "CheckingÖid %dÅhread %s-%d",

311 
pid
,

312 
thªadÊow
->
tf_«me
,

313 
thªadÊow
->
tf_ö°™˚
);

315 
waôs
 = 10;

316 
waôs
 && (
thªadÊow
->
tf_ru¬ög
 == 0) &&

317 (
fûebích_shm
->
shm_f_ab‹t
 == 0)) {

318 (Ë
	`ùc_muãx_u∆ock
(

319 &
fûebích_shm
->
shm_thªadÊow_lock
);

320 i‡(
waôs
 < 3)

321 
	`fûebích_log
(
LOG_INFO
,

323 
pid
,

324 
thªadÊow
->
tf_«me
,

325 
thªadÊow
->
tf_ö°™˚
);

327 (Ë
	`¶ìp
(1);

328 (Ë
	`ùc_muãx_lock
(

329 &
fûebích_shm
->
shm_thªadÊow_lock
);

330 
waôs
--;

333 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

336 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

337 
	}
}

352 
thªadÊow_t
 *

353 
	$thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

354 
thªadÊow_t
 *
öhîô
, 
ö°™˚
)

356 
thªadÊow_t
 *
thªadÊow
;

357 
thªadÊow_t
 **
thªadli°p
 = &
¥ocÊow
->
pf_thªads
;

359 i‡(
«me
 =
NULL
)

360  (
NULL
);

362 
thªadÊow
 = (
thªadÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_THREADFLOW
);

364 i‡(
thªadÊow
 =
NULL
)

365  (
NULL
);

367 i‡(
öhîô
)

368 (Ë
	`mem˝y
(
thªadÊow
, 
öhîô
,  (
thªadÊow_t
));

370 (Ë
	`mem£t
(
thªadÊow
, 0,  (
thªadÊow_t
));

372 
thªadÊow
->
tf_utid
 = ++
fûebích_shm
->
shm_utid
;

374 
thªadÊow
->
tf_ö°™˚
 = 
ö°™˚
;

375 (Ë
	`°r˝y
(
thªadÊow
->
tf_«me
, 
«me
);

376 
thªadÊow
->
tf_¥o˚ss
 = 
¥ocÊow
;

377 (Ë
	`±hªad_muãx_öô
(&
thªadÊow
->
tf_lock
,

378 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

380 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DefiningÅhread %s-%d",

381 
«me
, 
ö°™˚
);

384 i‡(*
thªadli°p
 =
NULL
) {

385 *
thªadli°p
 = 
thªadÊow
;

386 
thªadÊow
->
tf_√xt
 = 
NULL
;

388 
thªadÊow
->
tf_√xt
 = *
thªadli°p
;

389 *
thªadli°p
 = 
thªadÊow
;

392  
thªadÊow
;

393 
	}
}

403 
thªadÊow_t
 *

404 
	$thªadÊow_deföe
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

405 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
)

407 
thªadÊow_t
 *
thªadÊow
;

409 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

411 i‡((
thªadÊow
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
, 
«me
,

412 
öhîô
, 
FLOW_MASTER
)Ë=
NULL
)

413  (
NULL
);

415 
thªadÊow
->
tf_ö°™˚s
 = 
ö°™˚s
;

417 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

419  (
thªadÊow
);

420 
	}
}

428 
thªadÊow_t
 *

429 
	$thªadÊow_föd
(
thªadÊow_t
 *
thªadli°
, *
«me
)

431 
thªadÊow_t
 *
thªadÊow
 = 
thªadli°
;

433 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

435 
thªadÊow
) {

436 i‡(
	`°rcmp
(
«me
, 
thªadÊow
->
tf_«me
) == 0) {

438 (Ë
	`ùc_muãx_u∆ock
(

439 &
fûebích_shm
->
shm_thªadÊow_lock
);

441  (
thªadÊow
);

443 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

446 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

449  (
NULL
);

450 
	}
}

	@threadflow.h

26 #i‚de‡
_FB_THREADFLOW_H


27 
	#_FB_THREADFLOW_H


	)

29 
	~"fûebích.h
"

31 
	#AL_READ
 1

	)

32 
	#AL_WRITE
 2

	)

34 #ifde‡
HAVE_AIO


35 
	saiﬁi°
 {

36 
	mÆ_ty≥
;

37 
aiﬁi°
 *
	mÆ_√xt
;

38 
aiﬁi°
 *
	mÆ_w‹k√xt
;

39 
aiocb64
 
	mÆ_aiocb
;

40 } 
	taiﬁi°_t
;

43 
	#THREADFLOW_MAXFD
 128

	)

44 
	#THREADFLOW_USEISM
 0x1

	)

46 
	sthªadÊow
 {

47 
	mtf_«me
[128];

48 
	mtf_©ås
;

49 
	mtf_ö°™˚
;

50 
	mtf_ru¬ög
;

51 
	mtf_ab‹t
;

52 
	mtf_utid
;

53 
¥ocÊow
 *
	mtf_¥o˚ss
;

54 
±hªad_t
 
	mtf_tid
;

55 
±hªad_muãx_t
 
	mtf_lock
;

56 
avd_t
 
	mtf_ö°™˚s
;

57 
thªadÊow
 *
	mtf_√xt
;

58 
Êow›
 *
	mtf_thrd_f›s
;

59 
ˇddr_t
 
	mtf_mem
;

60 
avd_t
 
	mtf_memsize
;

61 
fböt_t
 
	mtf_c⁄°memsize
;

62 
fb_fdesc_t
 
	mtf_fd
[
THREADFLOW_MAXFD
 + 1];

63 
fûe£ã¡ry_t
 *
	mtf_f£
[
THREADFLOW_MAXFD
 + 1];

64 
	mtf_fdrŸ‹
;

65 
Êow°©s
 
	mtf_°©s
;

66 
hπime_t
 
	mtf_°ime
;

67 #ifde‡
HAVE_AIO


68 
aiﬁi°_t
 *
	mtf_aiﬁi°
;

70 
avd_t
 
	mtf_i›rio
;

72 } 
	tthªadÊow_t
;

75 
	#THREADFLOW_DEFAULTMEM
 1024*1024LL;

	)

77 
thªadÊow_t
 *
thªadÊow_deföe
(
¥ocÊow_t
 *, *
«me
,

78 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
);

79 
thªadÊow_t
 *
thªadÊow_föd
(threadflow_t *, *);

80 
thªadÊow_öô
(
¥ocÊow_t
 *);

81 
Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
);

82 
thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
);

83 
thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
);

	@utils.c

28 
	~<limôs.h
>

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~<°d¨g.h
>

32 
	~<°dio.h
>

33 
	~<î∫o.h
>

34 #ifde‡
HAVE_STDINT_H


35 
	~<°döt.h
>

38 
	~"fûebích.h
"

39 
	~"utûs.h
"

40 
	~"∑r£πy≥s.h
"

58 
	$fb_°øŒoc
(*
°r
)

60 *
√w°r
;

62 i‡((
√w°r
 = 
	`mÆloc
(
	`°æí
(
°r
Ë+ 1)Ë=
NULL
)

63  (
NULL
);

64 (Ë
	`°r˝y
(
√w°r
, 
°r
);

65  (
√w°r
);

66 
	}
}

68 #i‚de‡
HAVE_STRLCPY


74 
size_t


75 
	$fb_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

77 
uöt_t
 
i
;

79 
i
 = 0; i < (
d°size
 - 1); i++) {

82 i‡(
§c
[
i
] == '\0')

85 
d°
[
i
] = 
§c
[i];

89 
d°
[
i
] = '\0';

90 
i
++;

92  (
i
);

93 
	}
}

96 #i‚de‡
HAVE_STRLCAT


102 
size_t


103 
	$fb_°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

105 
uöt_t
 
i
, 
j
;

108 
i
 = 0; i < (
d°size
 - 1); i++) {

109 i‡(
d°
[
i
] == '\0')

114 
j
 = 0; 
i
 < (
d°size
 - 1); i++) {

115 i‡(
§c
[
j
] == '\0')

118 
d°
[
i
] = 
§c
[
j
];

119 
j
++;

123 
d°
[
i
] = '\0';

124 
i
++;

126  (
i
);

127 
	}
}

131 #ifde‡
HAVE_PROC_SYS_KERNEL_SHMMAX


138 
	$fb_£t_shmmax
()

140 
FILE
 *
f
;

141 
ªt
;

143 
f
 = 
	`f›í
("/proc/sys/kernel/shmmax", "r+");

144 i‡(!
f
) {

145 
	`fûebích_log
(
LOG_FATAL
, "WARNING: CouldÇot open "

155 
	#SOME_LARGE_SHMAX
 "268435456"

	)

156 
ªt
 = 
	`fwrôe
(
SOME_LARGE_SHMAX
, (SOME_LARGE_SHMAX), 1, 
f
);

157 i‡(
ªt
 != 1)

158 
	`fûebích_log
(
LOG_ERROR
, "CoudÇot writeÅo "

160 #unde‡
SOME_LARGE_SHMAX


162 
	`f˛o£
(
f
);

165 
	}
}

168 
	$fb_£t_shmmax
()

171 
	}
}

174 #ifde‡
HAVE_SETRLIMIT


189 
	$fb_£t_æimô
()

191 
æimô
 
æp
;

193 ()
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

194 
æp
.
æim_cur
 =ÑÕ.
æim_max
;

195 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

196 
	#SOME_LARGE_NUMBER_OF_FILES
 50000

	)

197 
æp
.
æim_cur
 =ÑÕ.
æim_max
 = 
SOME_LARGE_NUMBER_OF_FILES
;

198 #unde‡
SOME_LARGE_NUMBER_OF_FILES


199 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

201 
	}
}

204 
	$fb_£t_æimô
()

207 
	}
}

	@utils.h

26 #i‚def 
_FB_UTILS_H


27 
	#_FB_UTILS_H


	)

29 
	~"fûebích.h
"

31 *
fb_°øŒoc
(*
°r
);

33 #ifde‡
HAVE_STRLCAT


34 
	#fb_°æˇt
 
°æˇt


	)

36 
size_t
 
fb_°æˇt
(*
d°
, c⁄° *
§c
, size_à
d°size
);

39 #ifde‡
HAVE_STRLCPY


40 
	#fb_°æ˝y
 
°æ˝y


	)

42 
size_t
 
fb_°æ˝y
(*
d°
, c⁄° *
§c
, size_à
d°size
);

45 
fb_£t_shmmax
();

46 
fb_£t_æimô
();

	@vars.c

29 
	~<°dlib.h
>

30 
	~<°dio.h
>

31 
	~<°rög.h
>

32 
	~<î∫o.h
>

33 
	~<as£π.h
>

35 
	~"fûebích.h
"

36 
	~"v¨s.h
"

37 
	~"misc.h
"

38 
	~"utûs.h
"

39 
	~"°©s.h
"

40 
	~"evítgí.h
"

41 
	~"fb_øndom.h
"

73 
	$avd_gë_ty≥_ãxtifõd
(
avd_t
 
avd
)

75 
avd
->
avd_ty≥
) {

76 
AVD_INVALID
:

78 
AVD_VAL_BOOL
:

80 
AVD_VARVAL_BOOL
:

82 
AVD_VAL_INT
:

84 
AVD_VARVAL_INT
:

86 
AVD_VAL_DBL
:

88 
AVD_VARVAL_DBL
:

90 
AVD_VAL_STR
:

92 
AVD_VARVAL_STR
:

94 
AVD_VARVAL_RANDOM
:

96 
AVD_VARVAL_CUSTOM
:

98 
AVD_VARVAL_UNKNOWN
:

103 
	}
}

106 
	$£t_avd_ty≥_by_v¨
(
avd_t
 
avd
, 
v¨_t
 *
v¨
, 
îr‹_⁄_unknown
) {

107 
v¨
->
v¨_ty≥
) {

108 
VAR_BOOL
:

109 
avd
->
avd_ty≥
 = 
AVD_VARVAL_BOOL
;

110 
avd
->
avd_vÆ
.
boﬁ±r
 = &
v¨
->
v¨_vÆ
.
boﬁón
;

112 
VAR_INT
:

113 
avd
->
avd_ty≥
 = 
AVD_VARVAL_INT
;

114 
avd
->
avd_vÆ
.
öçå
 = &
v¨
->
v¨_vÆ
.
öãgî
;

116 
VAR_DBL
:

117 
avd
->
avd_ty≥
 = 
AVD_VARVAL_DBL
;

118 
avd
->
avd_vÆ
.
dbÕå
 = &
v¨
->
v¨_vÆ
.
dbl
;

120 
VAR_STR
:

121 
avd
->
avd_ty≥
 = 
AVD_VARVAL_STR
;

122 
avd
->
avd_vÆ
.
°Ωå
 = &
v¨
->
v¨_vÆ
.
°rög
;

124 
VAR_RANDOM
:

125 
avd
->
avd_ty≥
 = 
AVD_VARVAL_RANDOM
;

126 
avd
->
avd_vÆ
.
ønd±r
 = 
v¨
->
v¨_vÆ
.randptr;

128 
VAR_CUSTOM
:

129 
avd
->
avd_ty≥
 = 
AVD_VARVAL_CUSTOM
;

130 
avd
->
avd_vÆ
.
cv¨±r
 = 
v¨
->
v¨_vÆ
.cvarptr;

132 
VAR_UNKNOWN
:

133 i‡(
îr‹_⁄_unknown
) {

134 
	`fûebích_log
(
LOG_ERROR
,

135 "N⁄öôülized v¨übÀ %s", 
v¨
->
v¨_«me
);

136 
	`fûebích_shutdown
(1);

138 
avd
->
avd_ty≥
 = 
AVD_VARVAL_UNKNOWN
;

139 
avd
->
avd_vÆ
.
v¨±r
 = 
v¨
;

142 
	`fûebích_log
(
LOG_ERROR
,

143 "InvÆid v¨übÀÅy≥ (v¨übÀ: %s)", 
v¨
->
v¨_«me
);

144 
	`fûebích_shutdown
(1);

146 
	}
}

148 
boﬁón_t


149 
	$avd_gë_boﬁ
(
avd_t
 
avd
)

151 
v¨_t
 *
v¨
;

153 
	`as£π
(
avd
);

155 
avd
->
avd_ty≥
) {

156 
AVD_VAL_BOOL
:

157  
avd
->
avd_vÆ
.
boﬁvÆ
;

158 
AVD_VARVAL_BOOL
:

159 
	`as£π
(
avd
->
avd_vÆ
.
boﬁ±r
);

160  *(
avd
->
avd_vÆ
.
boﬁ±r
);

161 
AVD_VAL_INT
:

162 i‡(
avd
->
avd_vÆ
.
ötvÆ
)

163  
TRUE
;

164  
FALSE
;

165 
AVD_VARVAL_INT
:

166 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

167 i‡(*(
avd
->
avd_vÆ
.
öçå
))

168  
TRUE
;

169  
FALSE
;

170 
AVD_VAL_DBL
:

171 i‡(
avd
->
avd_vÆ
.
dblvÆ
)

172  
TRUE
;

173  
FALSE
;

174 
AVD_VARVAL_DBL
:

175 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

176 i‡(*(
avd
->
avd_vÆ
.
dbÕå
))

177  
TRUE
;

178  
FALSE
;

179 
AVD_VARVAL_UNKNOWN
:

180 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

181 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

182  
	`avd_gë_boﬁ
(
avd
);

184 
	`fûebích_log
(
LOG_ERROR
,

186 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

187  
FALSE
;

189 
	}
}

191 
uöt64_t


192 
	$avd_gë_öt
(
avd_t
 
avd
)

194 
ønddi°_t
 *
∫dp
;

195 
cv¨_t
 *
cv¨
;

196 
v¨_t
 *
v¨
;

198 
	`as£π
(
avd
);

200 
avd
->
avd_ty≥
) {

201 
AVD_VAL_INT
:

202  
avd
->
avd_vÆ
.
ötvÆ
;

203 
AVD_VARVAL_INT
:

204 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

205  *(
avd
->
avd_vÆ
.
öçå
);

206 
AVD_VAL_DBL
:

207  (
uöt64_t
)
avd
->
avd_vÆ
.
dblvÆ
;

208 
AVD_VARVAL_DBL
:

209 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

210  (
uöt64_t
)*(
avd
->
avd_vÆ
.
dbÕå
);

211 
AVD_VARVAL_RANDOM
:

212 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

213 
	`as£π
(
∫dp
);

214  (
uöt64_t
)
∫dp
->
	`∫d_gë
(rndp);

215 
AVD_VARVAL_CUSTOM
:

216 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

217 
	`as£π
(
cv¨
);

218  (
uöt64_t
)
	`gë_cv¨_vÆue
(
cv¨
);

219 
AVD_VARVAL_UNKNOWN
:

220 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

221 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

222  
	`avd_gë_öt
(
avd
);

224 
	`fûebích_log
(
LOG_ERROR
,

226 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

229 
	}
}

232 
	$avd_gë_dbl
(
avd_t
 
avd
)

234 
ønddi°_t
 *
∫dp
;

235 
cv¨_t
 *
cv¨
;

236 
v¨_t
 *
v¨
;

238 
	`as£π
(
avd
);

240 
avd
->
avd_ty≥
) {

241 
AVD_VAL_DBL
:

242  
avd
->
avd_vÆ
.
dblvÆ
;

243 
AVD_VARVAL_DBL
:

244 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

245  *(
avd
->
avd_vÆ
.
dbÕå
);

246 
AVD_VAL_INT
:

247  ()
avd
->
avd_vÆ
.
ötvÆ
;

248 
AVD_VARVAL_INT
:

249 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

250  ()(*(
avd
->
avd_vÆ
.
öçå
));

251 
AVD_VARVAL_RANDOM
:

252 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

253 
	`as£π
(
∫dp
);

254  
∫dp
->
	`∫d_gë
(rndp);

255 
AVD_VARVAL_CUSTOM
:

256 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

257 
	`as£π
(
cv¨
);

258  
	`gë_cv¨_vÆue
(
cv¨
);

259 
AVD_VARVAL_UNKNOWN
:

260 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

261 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

262  
	`avd_gë_dbl
(
avd
);

264 
	`fûebích_log
(
LOG_ERROR
,

266 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

269 
	}
}

272 
	$avd_gë_°r
(
avd_t
 
avd
)

274 
	`as£π
(
avd
);

275 
v¨_t
 *
v¨
;

277 
avd
->
avd_ty≥
) {

278 
AVD_VAL_STR
:

279  
avd
->
avd_vÆ
.
°rvÆ
;

280 
AVD_VARVAL_STR
:

281 
	`as£π
(
avd
->
avd_vÆ
.
°Ωå
);

282  *
avd
->
avd_vÆ
.
°Ωå
;

283 
AVD_VARVAL_UNKNOWN
:

284 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

285 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

286  
	`avd_gë_°r
(
avd
);

288 
	`fûebích_log
(
LOG_ERROR
,

290 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

291  
NULL
;

293 
	}
}

295 
avd_t


296 
	$avd_Æloc_cmn
()

298 
avd_t
 
avd
;

300 
avd
 = (
avd_t
)
	`ùc_mÆloc
(
FILEBENCH_AVD
);

301 i‡(!
avd
)

302 
	`fûebích_log
(
LOG_ERROR
, "AVDállocation failed");

304  
avd
;

305 
	}
}

307 
avd_t


308 
	$avd_boﬁ_Æloc
(
boﬁón_t
 
vÆ
)

310 
avd_t
 
avd
;

312 
avd
 = 
	`avd_Æloc_cmn
();

313 i‡(!
avd
)

314  
NULL
;

316 
avd
->
avd_ty≥
 = 
AVD_VAL_BOOL
;

317 
avd
->
avd_vÆ
.
boﬁvÆ
 = 
vÆ
;

319  
avd
;

320 
	}
}

322 
avd_t


323 
	$avd_öt_Æloc
(
uöt64_t
 
vÆ
)

325 
avd_t
 
avd
;

327 
avd
 = 
	`avd_Æloc_cmn
();

328 i‡(!
avd
)

329  
NULL
;

331 
avd
->
avd_ty≥
 = 
AVD_VAL_INT
;

332 
avd
->
avd_vÆ
.
ötvÆ
 = 
vÆ
;

334  
avd
;

335 
	}
}

337 
avd_t


338 
	$avd_dbl_Æloc
(
vÆ
)

340 
avd_t
 
avd
;

342 
avd
 = 
	`avd_Æloc_cmn
();

343 i‡(!
avd
)

344  
NULL
;

346 
avd
->
avd_ty≥
 = 
AVD_VAL_DBL
;

347 
avd
->
avd_vÆ
.
dblvÆ
 = 
vÆ
;

349  
avd
;

350 
	}
}

352 
avd_t


353 
	$avd_°r_Æloc
(*
°rög
)

355 
avd_t
 
avd
;

357 
	`as£π
(
°rög
);

359 
avd
 = 
	`avd_Æloc_cmn
();

360 i‡(!
avd
)

361  
NULL
;

363 
avd
->
avd_ty≥
 = 
AVD_VAL_STR
;

364 
avd
->
avd_vÆ
.
°rvÆ
 = 
	`ùc_°øŒoc
(
°rög
);

366  
avd
;

367 
	}
}

369 
v¨_t
 *

370 
	$v¨_Æloc
(*
«me
)

372 
v¨_t
 *
v¨
;

374 
v¨
 = (
v¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_VARIABLE
);

375 i‡(!
v¨
) {

376 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for variables");

377  
NULL
;

380 
	`mem£t
(
v¨
, 0, (*var));

381 
	`VAR_SET_UNKNOWN
(
v¨
);

383 
v¨
->
v¨_«me
 = 
	`ùc_°øŒoc
(
«me
);

384 i‡(!
v¨
->
v¨_«me
) {

385 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for strings");

386  
NULL
;

389 
v¨
->
v¨_√xt
 = 
fûebích_shm
->
shm_v¨_li°
;

390 
fûebích_shm
->
shm_v¨_li°
 = 
v¨
;

392  
v¨
;

393 
	}
}

395 
v¨_t
 *

396 
	$v¨_föd
(*
«me
)

398 
v¨_t
 *
v¨
;

400 
v¨
 = 
fûebích_shm
->
shm_v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
)

401 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

402  
v¨
;

404  
NULL
;

405 
	}
}

407 
v¨_t
 *

408 
	$v¨_föd_Æloc
(*
«me
)

410 
v¨_t
 *
v¨
;

412 
v¨
 = 
	`v¨_föd
(
«me
);

413 i‡(!
v¨
)

414 
v¨
 = 
	`v¨_Æloc
(
«me
);

416  
v¨
;

417 
	}
}

420 
	$v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

422 
v¨_t
 *
v¨
;

424 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

425 i‡(!
v¨
) {

426 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

430 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

433 
	}
}

436 
	$v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

438 
v¨_t
 *
v¨
;

440 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

441 i‡(!
v¨
) {

442 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

446 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

449 
	}
}

452 
	$v¨_assign_doubÀ
(*
«me
, 
dbl
)

454 
v¨_t
 *
v¨
;

456 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

457 i‡(!
v¨
) {

458 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

462 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

465 
	}
}

468 
	$v¨_assign_°rög
(*
«me
, *
°rög
)

470 
v¨_t
 *
v¨
;

471 *
°Ωå
;

473 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

474 i‡(!
v¨
) {

475 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

479 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

480 i‡(!
°Ωå
) {

481 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

485 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

488 
	}
}

491 
	$v¨_assign_øndom
(*
«me
, 
ønddi°_t
 *
∫dp
)

493 
v¨_t
 *
v¨
;

495 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

496 i‡(!
v¨
) {

497 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

501 
	`VAR_SET_RANDOM
(
v¨
, 
∫dp
);

504 
	}
}

507 
	$v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar)

509 
v¨_t
 *
v¨
;

511 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

512 i‡(!
v¨
) {

513 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

517 
	`VAR_SET_CUSTOM
(
v¨
, 
cv¨
);

520 
	}
}

530 
avd_t


531 
	$avd_v¨_Æloc
(*
v¨«me
)

533 
v¨_t
 *
v¨
;

534 
avd_t
 
avd
;

536 
v¨
 = 
	`v¨_föd_Æloc
(
v¨«me
);

537 i‡(!
v¨
) {

538 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸác˚s†v¨übÀ %s", 
v¨«me
);

539 
	`fûebích_shutdown
(1);

542 
avd
 = 
	`avd_Æloc_cmn
();

543 i‡(!
avd
)

544  
NULL
;

546 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 0);

548  
avd
;

549 
	}
}

552 
	$__v¨_to_°rög
(
v¨_t
 *
v¨
)

554 
tmp
[128];

556 i‡(
	`VAR_HAS_RANDOM
(
v¨
)) {

557 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

558 
RAND_TYPE_UNIFORM
:

559  
	`fb_°øŒoc
("uniformÑandom var");

560 
RAND_TYPE_GAMMA
:

561  
	`fb_°øŒoc
("gammaÑandom var");

562 
RAND_TYPE_TABLE
:

563  
	`fb_°øŒoc
("tabularÑandom var");

565  
	`fb_°øŒoc
("unitializedÑandom var");

569 i‡(
	`VAR_HAS_CUSTOM
(
v¨
))

570  
	`fb_°øŒoc
("custom variable");

572 i‡(
	`VAR_HAS_STRING
(
v¨
Ë&& v¨->
v¨_vÆ
.
°rög
)

573  
	`fb_°øŒoc
(
v¨
->
v¨_vÆ
.
°rög
);

575 i‡(
	`VAR_HAS_BOOLEAN
(
v¨
)) {

576 i‡(
v¨
->
v¨_vÆ
.
boﬁón
)

577  
	`fb_°øŒoc
("true");

579  
	`fb_°øŒoc
("false");

582 i‡(
	`VAR_HAS_INTEGER
(
v¨
)) {

583 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%llu",

584 (
u_l⁄gl⁄g_t
)
v¨
->
v¨_vÆ
.
öãgî
);

585  
	`fb_°øŒoc
(
tmp
);

588 i‡(
	`VAR_HAS_DOUBLE
(
v¨
)) {

589 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%lf",

590 
v¨
->
v¨_vÆ
.
dbl
);

591  
	`fb_°øŒoc
(
tmp
);

594  
	`fb_°øŒoc
("No default");

595 
	}
}

598 
	$v¨_to_°rög
(*
«me
)

600 
v¨_t
 *
v¨
;

602 
v¨
 = 
	`v¨_föd
(
«me
);

603 i‡(!
v¨
)

604  
NULL
;

606  
	`__v¨_to_°rög
(
v¨
);

607 
	}
}

610 
	$v¨_øndv¨_to_°rög
(*
«me
, 
∑øm_«me
)

612 
v¨_t
 *
v¨
;

613 
uöt64_t
 
vÆue
;

614 
tmp
[128];

616 
v¨
 = 
	`v¨_föd
(
«me
);

617 i‡(!
v¨
)

618  
	`v¨_to_°rög
(
«me
);

620 i‡(!
	`VAR_HAS_RANDOM
(
v¨
))

621  
	`v¨_to_°rög
(
«me
);

623 
∑øm_«me
) {

624 
RAND_PARAM_TYPE
:

625 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

626 
RAND_TYPE_UNIFORM
:

627  
	`fb_°øŒoc
("uniform");

628 
RAND_TYPE_GAMMA
:

629  
	`fb_°øŒoc
("gamma");

630 
RAND_TYPE_TABLE
:

631  
	`fb_°øŒoc
("tabular");

633  
	`fb_°øŒoc
("uninitialized");

636 
RAND_PARAM_SRC
:

637 i‡(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
)

638  
	`fb_°øŒoc
("rand48");

640  
	`fb_°øŒoc
("urandom");

642 
RAND_PARAM_SEED
:

643 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_£ed
);

646 
RAND_PARAM_MIN
:

647 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_mö
);

650 
RAND_PARAM_MEAN
:

651 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_món
);

654 
RAND_PARAM_GAMMA
:

655 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_gamma
);

658 
RAND_PARAM_ROUND
:

659 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_round
);

663  
NULL
;

668 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%Œu", (
u_l⁄gl⁄g_t
)
vÆue
);

669  (
	`fb_°øŒoc
(
tmp
));

670 
	}
}

674 
v¨_t
 *

675 
	$v¨_föd_li°_⁄ly
(*
«me
, 
v¨_t
 *
v¨_li°
)

677 
v¨_t
 *
v¨
;

679 
v¨
 = 
v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
) {

680 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

681  
v¨
;

684  
NULL
;

685 
	}
}

687 
v¨_t
 *

688 
	$v¨_föd_loˇl_n‹mÆ
(*
«me
)

690 
v¨_t
 *
v¨
;

692 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_loc_li°
);

693 i‡(!
v¨
)

694 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_li°
);

696  
v¨
;

697 
	}
}

704 
	$v¨_c›y
(
v¨_t
 *
d°_v¨
, v¨_à*
§c_v¨
) {

705 *
°Ωå
;

707 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
))

708 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

710 i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
))

711 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

713 i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
))

714 
	`VAR_SET_DBL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

716 i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

717 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

718 i‡(!
°Ωå
) {

719 
	`fûebích_log
(
LOG_ERROR
,

721 
d°_v¨
->
v¨_«me
);

724 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

728 
	}
}

734 
v¨_t
 *

735 
	$v¨_lv¨_Æloc_loˇl
(*
«me
)

737  
	`v¨_Æloc
(
«me
);

738 
	}
}

747 
v¨_t
 *

748 
	$v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
)

750 
v¨_t
 *
d°_v¨
, *
§c_v¨
;

751 *
°Ωå
;

753 
§c_«me
 += 1;

755 
§c_v¨
 = 
	`v¨_föd_loˇl_n‹mÆ
(
§c_«me
);

756 i‡(!
§c_v¨
) {

757 
	`fûebích_log
(
LOG_ERROR
,

758 "C™nŸ föd sour˚ v¨übÀ %s", 
§c_«me
);

759  
NULL
;

762 
d°_v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

763 i‡(!
d°_v¨
) {

764 
	`fûebích_log
(
LOG_ERROR
, "C™nŸássig¿v¨übÀ %s", 
«me
);

765  
NULL
;

768 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
)) {

769 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

770 } i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
)) {

771 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

772 } i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

773 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

774 i‡(!
°Ωå
) {

775 
	`fûebích_log
(
LOG_ERROR
,

776 "C™nŸássig¿v¨übÀ %s", 
«me
);

777  
NULL
;

779 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

780 } i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
)) {

781 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

782 } i‡(
	`VAR_HAS_RANDOM
(
§c_v¨
))

783 
	`VAR_SET_RANDOM
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
ønd±r
);

785  
d°_v¨
;

786 
	}
}

788 
v¨_t
 *

789 
	$v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

791 
v¨_t
 *
v¨
;

793 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

794 i‡(!
v¨
) {

795 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

796 
«me
);

797  
NULL
;

800 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

802  
v¨
;

803 
	}
}

805 
v¨_t
 *

806 
	$v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

808 
v¨_t
 *
v¨
;

810 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

811 i‡(!
v¨
) {

812 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

813 
«me
);

814  
NULL
;

817 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

819  
v¨
;

820 
	}
}

822 
v¨_t
 *

823 
	$v¨_lv¨_assign_doubÀ
(*
«me
, 
dbl
)

825 
v¨_t
 *
v¨
;

827 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

829 i‡(!
v¨
) {

830 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

831 
«me
);

832  
NULL
;

835 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

837  
v¨
;

838 
	}
}

840 
v¨_t
 *

841 
	$v¨_lv¨_assign_°rög
(*
«me
, *
°rög
)

843 
v¨_t
 *
v¨
;

844 *
°Ωå
;

846 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

847 i‡(!
v¨
) {

848 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

849 
«me
);

850  
NULL
;

853 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

854 i‡(!
°Ωå
) {

855 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

856 
«me
);

857  
NULL
;

860 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

862  
v¨
;

863 
	}
}

871 
	$avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
)

875 
	}
}

878 
	$v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

879 
v¨_t
 *
m°r_lv¨s
)

881 
v¨_t
 *
¥Ÿo_lv¨
;

884 
¥Ÿo_lv¨
 = 
	`v¨_föd_li°_⁄ly
(
√wlv¨
->
v¨_«me
, 
¥Ÿo_comp_v¨s
);

886 i‡(!
¥Ÿo_lv¨
)

893 i‡(
	`VAR_HAS_UNKNOWN
(
√wlv¨
)) {

895 (Ë
	`v¨_c›y
(
√wlv¨
, 
¥Ÿo_lv¨
);

897 
	}
}

	@vars.h

27 #i‚de‡
_VARS_H


28 
	#_VARS_H


	)

30 
	~"fûebích.h
"

33 
	eavd_ty≥
 {

34 
	mAVD_INVALID
 = 0,

36 
	mAVD_VAL_BOOL
,

37 
	mAVD_VARVAL_BOOL
,

38 
	mAVD_VAL_INT
,

39 
	mAVD_VARVAL_INT
,

40 
	mAVD_VAL_DBL
,

41 
	mAVD_VARVAL_DBL
,

42 
	mAVD_VAL_STR
,

43 
	mAVD_VARVAL_STR
,

45 
	mAVD_VARVAL_UNKNOWN
,

48 
	mAVD_VARVAL_RANDOM
,

51 
	mAVD_VARVAL_CUSTOM


54 } 
	tavd_ty≥_t
;

57 
	savd
 {

58 
avd_ty≥_t
 
	mavd_ty≥
;

60 
boﬁón_t
 
	mboﬁvÆ
;

61 
boﬁón_t
 *
	mboﬁ±r
;

62 
uöt64_t
 
	mötvÆ
;

63 
uöt64_t
 *
	möçå
;

64 
	mdblvÆ
;

65 *
	mdbÕå
;

66 *
	m°rvÆ
;

67 **
	m°Ωå
;

68 
v¨
 *
	mv¨±r
;

73 
ønddi°
 *
	mønd±r
;

74 
cv¨
 *
	mcv¨±r
;

75 } 
	mavd_vÆ
;

76 } *
	tavd_t
;

78 
	#AVD_IS_RANDOM
(
vp
Ë((vpË&& ((vp)->
avd_ty≥
 =
AVD_VARVAL_RANDOM
))

	)

79 
	#AVD_IS_STRING
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_STR
) || \

80 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_STR
)))

	)

81 
	#AVD_IS_BOOL
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_BOOL
) || \

82 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_BOOL
)))

	)

83 
	#AVD_IS_INT
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_INT
) || \

84 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_INT
)))

	)

87 
	ev¨_ty≥
 {

88 
	mVAR_INVALID
 = 0,

89 
	mVAR_BOOL
,

90 
	mVAR_INT
,

91 
	mVAR_DBL
,

92 
	mVAR_STR
,

93 
	mVAR_RANDOM
,

94 
	mVAR_CUSTOM
,

95 
	mVAR_UNKNOWN
,

96 } 
	tv¨_ty≥_t
;

98 
	sv¨
 {

99 *
	mv¨_«me
;

100 
v¨_ty≥_t
 
	mv¨_ty≥
;

101 
v¨
 *
	mv¨_√xt
;

103 
boﬁón_t
 
	mboﬁón
;

104 
uöt64_t
 
	möãgî
;

105 
	mdbl
;

106 *
	m°rög
;

107 
ønddi°
 *
	mønd±r
;

108 
cv¨
 *
	mcv¨±r
;

109 } 
	mv¨_vÆ
;

110 } 
	tv¨_t
;

113 
	#VAR_HAS_BOOLEAN
(
vp
) \

114 ((
vp
)->
v¨_ty≥
 =
VAR_BOOL
)

	)

115 
	#VAR_HAS_INTEGER
(
vp
) \

116 ((
vp
)->
v¨_ty≥
 =
VAR_INT
)

	)

117 
	#VAR_HAS_DOUBLE
(
vp
) \

118 ((
vp
)->
v¨_ty≥
 =
VAR_DBL
)

	)

119 
	#VAR_HAS_STRING
(
vp
) \

120 ((
vp
)->
v¨_ty≥
 =
VAR_STR
)

	)

121 
	#VAR_HAS_RANDOM
(
vp
) \

122 ((
vp
)->
v¨_ty≥
 =
VAR_RANDOM
)

	)

123 
	#VAR_HAS_CUSTOM
(
vp
) \

124 ((
vp
)->
v¨_ty≥
 =
VAR_CUSTOM
)

	)

125 
	#VAR_HAS_UNKNOWN
(
vp
) \

126 ((
vp
)->
v¨_ty≥
 =
VAR_UNKNOWN
)

	)

128 
	#VAR_SET_BOOL
(
vp
, 
vÆ
) \

130 (
vp
)->
v¨_vÆ
.
boﬁón
 = (
vÆ
); \

131 (
vp
)->
v¨_ty≥
 = 
VAR_BOOL
;\

132 }

	)

133 
	#VAR_SET_INT
(
vp
, 
vÆ
) \

135 (
vp
)->
v¨_vÆ
.
öãgî
 = (
vÆ
); \

136 (
vp
)->
v¨_ty≥
 = 
VAR_INT
; \

137 }

	)

138 
	#VAR_SET_DBL
(
vp
, 
vÆ
) \

140 (
vp
)->
v¨_vÆ
.
dbl
 = (
vÆ
); \

141 (
vp
)->
v¨_ty≥
 = 
VAR_DBL
; \

142 }

	)

143 
	#VAR_SET_STR
(
vp
, 
vÆ
) \

145 (
vp
)->
v¨_vÆ
.
°rög
 = (
vÆ
); \

146 (
vp
)->
v¨_ty≥
 = 
VAR_STR
; \

147 }

	)

148 
	#VAR_SET_RANDOM
(
vp
, 
vÆ
) \

150 (
vp
)->
v¨_vÆ
.
ønd±r
 = (
vÆ
); \

151 (
vp
)->
v¨_ty≥
 = 
VAR_RANDOM
; \

152 }

	)

153 
	#VAR_SET_CUSTOM
(
vp
, 
vÆ
) \

155 (
vp
)->
v¨_vÆ
.
cv¨±r
 = (
vÆ
); \

156 (
vp
)->
v¨_ty≥
 = 
VAR_CUSTOM
; \

157 }

	)

158 
	#VAR_SET_UNKNOWN
(
vp
) \

160 (
vp
)->
v¨_ty≥
 = 
VAR_UNKNOWN
; \

161 }

	)

163 
avd_t
 
avd_boﬁ_Æloc
(
boﬁón_t
 
boﬁ
);

164 
avd_t
 
avd_öt_Æloc
(
uöt64_t
 
öãgî
);

165 
avd_t
 
avd_dbl_Æloc
(
öãgî
);

166 
avd_t
 
avd_°r_Æloc
(*
°rög
);

167 
avd_t
 
avd_v¨_Æloc
(*
v¨«me
);

169 
v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
);

170 
v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
);

171 
v¨_assign_doubÀ
(*
«me
, 
dbl
);

172 
v¨_assign_°rög
(*
«me
, *
°rög
);

173 
v¨_assign_øndom
(*
«me
, 
ønddi°
 *
∫dp
);

174 
v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar);

176 
boﬁón_t
 
avd_gë_boﬁ
(
avd_t
);

177 
uöt64_t
 
avd_gë_öt
(
avd_t
);

178 
avd_gë_dbl
(
avd_t
);

179 *
avd_gë_°r
(
avd_t
);

182 
avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
);

183 
v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

184 
v¨_t
 *
m°r_lv¨s
);

185 
v¨_t
 *
v¨_lv¨_Æloc_loˇl
(*
«me
);

186 
v¨_t
 *
v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
);

187 
v¨_t
 *
v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
);

188 
v¨_t
 *
v¨_lv¨_assign_doubÀ
(*
«me
, );

189 
v¨_t
 *
v¨_lv¨_assign_°rög
(*
«me
, *
°rög
);

190 
v¨_t
 *
v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
);

193 *
v¨_to_°rög
(*
«me
);

194 *
v¨_øndv¨_to_°rög
(*
«me
, 
∑øm
);

	@/usr/include/aio.h

22 #i‚de‡
_AIO_H


23 
	#_AIO_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<bôs/ty≥s/sigevít_t.h
>

28 
	~<bôs/sigevít-c⁄°s.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

31 
__BEGIN_DECLS


34 
	saiocb


36 
	maio_fûdes
;

37 
	maio_lio_›code
;

38 
	maio_ªq¥io
;

39 vﬁ©ûê*
	maio_buf
;

40 
size_t
 
	maio_nbyãs
;

41 
sigevít
 
	maio_sigevít
;

44 
aiocb
 *
	m__√xt_¥io
;

45 
	m__abs_¥io
;

46 
	m__pﬁicy
;

47 
	m__îr‹_code
;

48 
__ssize_t
 
	m__ªtu∫_vÆue
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__off_t
 
	maio_off£t
;

52 
	m__∑d
[ (
__off64_t
Ë-  (
__off_t
)];

54 
__off64_t
 
	maio_off£t
;

56 
	m__glibc_ª£rved
[32];

61 #ifde‡
__USE_LARGEFILE64


62 
	saiocb64


64 
	maio_fûdes
;

65 
	maio_lio_›code
;

66 
	maio_ªq¥io
;

67 vﬁ©ûê*
	maio_buf
;

68 
size_t
 
	maio_nbyãs
;

69 
sigevít
 
	maio_sigevít
;

72 
aiocb
 *
	m__√xt_¥io
;

73 
	m__abs_¥io
;

74 
	m__pﬁicy
;

75 
	m__îr‹_code
;

76 
__ssize_t
 
	m__ªtu∫_vÆue
;

78 
__off64_t
 
	maio_off£t
;

79 
	m__glibc_ª£rved
[32];

84 #ifde‡
__USE_GNU


87 
	saioöô


89 
	maio_thªads
;

90 
	maio_num
;

91 
	maio_locks
;

92 
	maio_u£dba
;

93 
	maio_debug
;

94 
	maio_numu£rs
;

95 
	maio_idÀ_time
;

97 
	maio_ª£rved
;

105 
	mAIO_CANCELED
,

106 
	#AIO_CANCELED
 
AIO_CANCELED


	)

107 
	mAIO_NOTCANCELED
,

108 
	#AIO_NOTCANCELED
 
AIO_NOTCANCELED


	)

109 
	mAIO_ALLDONE


110 
	#AIO_ALLDONE
 
AIO_ALLDONE


	)

117 
	mLIO_READ
,

118 
	#LIO_READ
 
LIO_READ


	)

119 
	mLIO_WRITE
,

120 
	#LIO_WRITE
 
LIO_WRITE


	)

121 
	mLIO_NOP


122 
	#LIO_NOP
 
LIO_NOP


	)

129 
	mLIO_WAIT
,

130 
	#LIO_WAIT
 
LIO_WAIT


	)

131 
	mLIO_NOWAIT


132 
	#LIO_NOWAIT
 
LIO_NOWAIT


	)

137 #ifde‡
__USE_GNU


138 
	$aio_öô
 (c⁄° 
aioöô
 *
__öô
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

142 #i‚de‡
__USE_FILE_OFFSET64


144 
	$aio_ªad
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

146 
	$aio_wrôe
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$lio_li°io
 (
__mode
,

150 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

151 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
	$aio_îr‹
 (c⁄° 
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

157 
__ssize_t
 
	$aio_ªtu∫
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

161 
	$aio_ˇn˚l
 (
__fûdes
, 
aiocb
 *
__aiocbp
Ë
__THROW
;

168 
	$aio_su•íd
 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

169 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

170 
	`__n⁄nuŒ
 ((1));

174 
	$aio_fsync
 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
)

175 
__THROW
 
	`__n⁄nuŒ
 ((2));

177 #ifde‡
__REDIRECT_NTH


178 
	`__REDIRECT_NTH
 (
aio_ªad
, (
aiocb
 *
__aiocbp
), 
aio_ªad64
)

179 
	`__n⁄nuŒ
 ((1));

180 
	`__REDIRECT_NTH
 (
aio_wrôe
, (
aiocb
 *
__aiocbp
), 
aio_wrôe64
)

181 
	`__n⁄nuŒ
 ((1));

183 
	`__REDIRECT_NTH
 (
lio_li°io
,

184 (
__mode
,

185 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

186 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
),

187 
lio_li°io64
Ë
	`__n⁄nuŒ
 ((2));

189 
	`__REDIRECT_NTH
 (
aio_îr‹
, (c⁄° 
aiocb
 *
__aiocbp
),

190 
aio_îr‹64
Ë
	`__n⁄nuŒ
 ((1));

191 
__ssize_t
 
	`__REDIRECT_NTH
 (
aio_ªtu∫
, (
aiocb
 *
__aiocbp
),

192 
aio_ªtu∫64
Ë
	`__n⁄nuŒ
 ((1));

194 
	`__REDIRECT_NTH
 (
aio_ˇn˚l
,

195 (
__fûdes
, 
aiocb
 *
__aiocbp
),

196 
aio_ˇn˚l64
);

198 
	`__REDIRECT_NTH
 (
aio_su•íd
,

199 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

200 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
),

201 
aio_su•íd64
Ë
	`__n⁄nuŒ
 ((1));

203 
	`__REDIRECT_NTH
 (
aio_fsync
,

204 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
),

205 
aio_fsync64
Ë
	`__n⁄nuŒ
 ((2));

208 
	#aio_ªad
 
aio_ªad64


	)

209 
	#aio_wrôe
 
aio_wrôe64


	)

210 
	#lio_li°io
 
lio_li°io64


	)

211 
	#aio_îr‹
 
aio_îr‹64


	)

212 
	#aio_ªtu∫
 
aio_ªtu∫64


	)

213 
	#aio_ˇn˚l
 
aio_ˇn˚l64


	)

214 
	#aio_su•íd
 
aio_su•íd64


	)

215 
	#aio_fsync
 
aio_fsync64


	)

219 #ifde‡
__USE_LARGEFILE64


220 
	$aio_ªad64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$aio_wrôe64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

223 
	$lio_li°io64
 (
__mode
,

224 
aiocb64
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

225 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

226 
__THROW
 
	`__n⁄nuŒ
 ((2));

228 
	$aio_îr‹64
 (c⁄° 
aiocb64
 *
__aiocbp
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 
__ssize_t
 
	$aio_ªtu∫64
 (
aiocb64
 *
__aiocbp
)

231 
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$aio_ˇn˚l64
 (
__fûdes
, 
aiocb64
 *
__aiocbp
Ë
__THROW
;

235 
	$aio_su•íd64
 (c⁄° 
aiocb64
 *c⁄° 
__li°
[], 
__√¡
,

236 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

237 
__THROW
 
	`__n⁄nuŒ
 ((1));

239 
	$aio_fsync64
 (
__›î©i⁄
, 
aiocb64
 *
__aiocbp
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2));

243 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name \

90 : 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


404 
	~<bôs/dúít_ext.h
>

	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 #i‡
	`__GNUC_PREREQ
 (3, 0)

188 
__exãnsi⁄__
 union

190 
Dl_£Ω©h
 
dls_£Ω©h
[0];

191 
Dl_£Ω©h
 
__dls_£Ω©h_∑d
[1];

194 
Dl_£Ω©h
 
dls_£Ω©h
[1];

196 } 
	tDl_£röfo
;

200 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_FILE_OFFSET64


148 
f˙é
 (
__fd
, 
__cmd
, ...);

150 #ifde‡
__REDIRECT


151 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

153 
	#f˙é
 
f˙é64


	)

156 #ifde‡
__USE_LARGEFILE64


157 
f˙é64
 (
__fd
, 
__cmd
, ...);

167 #i‚de‡
__USE_FILE_OFFSET64


168 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__REDIRECT


171 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

172 
	`__n⁄nuŒ
 ((1));

174 
	#›í
 
›í64


	)

177 #ifde‡
__USE_LARGEFILE64


178 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__USE_ATFILE


191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

195 #ifde‡
__REDIRECT


196 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

197 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

199 
	#›í©
 
›í©64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

204 
	`__n⁄nuŒ
 ((2));

213 #i‚de‡
__USE_FILE_OFFSET64


214 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #ifde‡
__REDIRECT


217 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

218 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

220 
	#¸ót
 
¸ót64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

227 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

228 && !
deföed
 
__USE_POSIX
))

237 
	#F_ULOCK
 0

	)

238 
	#F_LOCK
 1

	)

239 
	#F_TLOCK
 2

	)

240 
	#F_TEST
 3

	)

242 #i‚de‡
__USE_FILE_OFFSET64


243 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

245 #ifde‡
__REDIRECT


246 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

248 
	#lockf
 
lockf64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

256 #ifde‡
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


260 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

261 
__advi£
Ë
__THROW
;

263 #ifde‡
__REDIRECT_NTH


264 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

265 
__off64_t
 
__Àn
, 
__advi£
),

266 
posix_Ádvi£64
);

268 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

273 
__advi£
Ë
__THROW
;

281 #i‚de‡
__USE_FILE_OFFSET64


282 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

284 #ifde‡
__REDIRECT


285 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

286 
__off64_t
 
__Àn
),

287 
posix_ÁŒoˇã64
);

289 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

292 #ifde‡
__USE_LARGEFILE64


293 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

299 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

300 && 
deföed
 
__va_¨g_∑ck_Àn


301 
	~<bôs/f˙é2.h
>

304 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
	slc⁄v


55 *
	mdecimÆ_poöt
;

56 *
	mthoußnds_£p
;

62 *
	mgroupög
;

68 *
	möt_cuº_symbﬁ
;

69 *
	mcuºícy_symbﬁ
;

70 *
	mm⁄_decimÆ_poöt
;

71 *
	mm⁄_thoußnds_£p
;

72 *
	mm⁄_groupög
;

73 *
	mposôive_sign
;

74 *
	m√g©ive_sign
;

75 
	möt_‰ac_digôs
;

76 
	m‰ac_digôs
;

78 
	mp_cs_¥e˚des
;

80 
	mp_£p_by_•a˚
;

82 
	mn_cs_¥e˚des
;

84 
	mn_£p_by_•a˚
;

91 
	mp_sign_po¢
;

92 
	mn_sign_po¢
;

93 #ifde‡
__USE_ISOC99


95 
	möt_p_cs_¥e˚des
;

97 
	möt_p_£p_by_•a˚
;

99 
	möt_n_cs_¥e˚des
;

101 
	möt_n_£p_by_•a˚
;

108 
	möt_p_sign_po¢
;

109 
	möt_n_sign_po¢
;

111 
	m__öt_p_cs_¥e˚des
;

112 
	m__öt_p_£p_by_•a˚
;

113 
	m__öt_n_cs_¥e˚des
;

114 
	m__öt_n_£p_by_•a˚
;

115 
	m__öt_p_sign_po¢
;

116 
	m__öt_n_sign_po¢
;

122 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

125 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

128 #ifdef 
__USE_XOPEN2K8


135 
	~<bôs/ty≥s/loˇÀ_t.h
>

141 
loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

142 
loˇÀ_t
 
__ba£
Ë
__THROW
;

148 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

149 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

150 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

151 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

152 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

153 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

154 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

155 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

156 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

157 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

158 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

159 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

160 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

161 | 
LC_NUMERIC_MASK
 \

162 | 
LC_TIME_MASK
 \

163 | 
LC_COLLATE_MASK
 \

164 | 
LC_MONETARY_MASK
 \

165 | 
LC_MESSAGES_MASK
 \

166 | 
LC_PAPER_MASK
 \

167 | 
LC_NAME_MASK
 \

168 | 
LC_ADDRESS_MASK
 \

169 | 
LC_TELEPHONE_MASK
 \

170 | 
LC_MEASUREMENT_MASK
 \

171 | 
LC_IDENTIFICATION_MASK
 \

172 )

	)

176 
loˇÀ_t
 
	$du∂oˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

180 
	$‰ìloˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

187 
loˇÀ_t
 
	$u£loˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	#LC_GLOBAL_LOCALE
 ((
loˇÀ_t
Ë-1L)

	)

195 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


39 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

42 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

43 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

50 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

51 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

58 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

59 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2, 3));

62 
	$‰ì
 (*
__±r
Ë
__THROW
;

65 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

66 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

69 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


70 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

74 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

78 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

81 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

82 
__THROW
 
__©åibuã_mÆloc__
;

86 
	smÆlöfo


88 
¨ía
;

89 
‹dblks
;

90 
smblks
;

91 
hblks
;

92 
hblkhd
;

93 
usmblks
;

94 
fsmblks
;

95 
u‹dblks
;

96 
f‹dblks
;

97 
kìpco°
;

101 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

104 #i‚de‡
M_MXFAST


105 
	#M_MXFAST
 1

	)

107 #i‚de‡
M_NLBLKS


108 
	#M_NLBLKS
 2

	)

110 #i‚de‡
M_GRAIN


111 
	#M_GRAIN
 3

	)

113 #i‚de‡
M_KEEP


114 
	#M_KEEP
 4

	)

118 
	#M_TRIM_THRESHOLD
 -1

	)

119 
	#M_TOP_PAD
 -2

	)

120 
	#M_MMAP_THRESHOLD
 -3

	)

121 
	#M_MMAP_MAX
 -4

	)

122 
	#M_CHECK_ACTION
 -5

	)

123 
	#M_PERTURB
 -6

	)

124 
	#M_ARENA_TEST
 -7

	)

125 
	#M_ARENA_MAX
 -8

	)

128 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

132 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

136 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

139 
	$mÆloc_°©s
 (Ë
__THROW
;

142 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

145 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

147 
__MALLOC_DEPRECATED
;

148 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

150 
__MALLOC_DEPRECATED
;

151 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

152 
size_t
 
__size
,

154 
__MALLOC_DEPRECATED
;

155 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

156 
size_t
 
__size
,

158 
__MALLOC_DEPRECATED
;

159 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

162 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

878 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

879 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

886 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

887 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

889 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

893 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

894 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

895 #ñi‡
deföed
 
__˝lu•lus


903 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

904 #ñi‡
	`__GNUC_PREREQ
 (4,0)

905 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

907 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

911 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

912 || 
	$__glibc_˛™g_¥îeq
 (2,8)

913 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

915 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

919 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

920 || 
	$__glibc_˛™g_¥îeq
 (2,8)

921 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

923 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

928 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

929 || 
	$__glibc_˛™g_¥îeq
 (2,8)

930 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

932 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

936 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

937 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


943 
	#isöf
(
x
) \

944 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

945 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

946 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

947 || 
	$__glibc_˛™g_¥îeq
 (3,7)

948 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

950 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

954 
	#MATH_ERRNO
 1

	)

955 
	#MATH_ERREXCEPT
 2

	)

962 #ifde‡
__FAST_MATH__


963 
	#m©h_îrh™dlög
 0

	)

964 #ñi‡
deföed
 
__NO_MATH_ERRNO__


965 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

967 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

972 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

973 
	~<bôs/isˇn⁄iˇl.h
>

976 #i‚de‡
__˝lu•lus


977 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

986 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

987 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

988 
ölöe
 

989 
	`issig«lög
 (
__vÆ
)

991 #ifde‡
__NO_LONG_DOUBLE_MATH


992  
	`__issig«lög
 (
__vÆ
);

994  
	`__issig«lögl
 (
__vÆ
);

997 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1000 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1002 
	}
}

1006 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1009 #i‚de‡
__˝lu•lus


1010 #ifde‡
__SUPPORT_SNAN__


1011 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1013 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1017 #ifde‡
__SUPPORT_SNAN__


1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1028 
ölöe
 

1029 
iszîo
 (
__vÆ
)

1031 #ifde‡
__NO_LONG_DOUBLE_MATH


1032  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1034  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1037 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1040 
ölöe
 

1041 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1043  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1047 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1048 
iszîo
 (
__T
 
__vÆ
)

1050  
__vÆ
 == 0;

1057 #ifde‡
__USE_XOPEN


1059 
	#MAXFLOAT
 3.40282347e+38F

	)

1064 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1065 
	#M_E
 2.7182818284590452354

	)

1066 
	#M_LOG2E
 1.4426950408889634074

	)

1067 
	#M_LOG10E
 0.43429448190325182765

	)

1068 
	#M_LN2
 0.69314718055994530942

	)

1069 
	#M_LN10
 2.30258509299404568402

	)

1070 
	#M_PI
 3.14159265358979323846

	)

1071 
	#M_PI_2
 1.57079632679489661923

	)

1072 
	#M_PI_4
 0.78539816339744830962

	)

1073 
	#M_1_PI
 0.31830988618379067154

	)

1074 
	#M_2_PI
 0.63661977236758134308

	)

1075 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1076 
	#M_SQRT2
 1.41421356237309504880

	)

1077 
	#M_SQRT1_2
 0.70710678118654752440

	)

1083 #ifde‡
__USE_GNU


1084 
	#M_El
 2.718281828459045235360287471352662498L

	)

1085 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1086 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1087 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1088 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1089 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1090 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1091 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1092 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1093 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1094 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1095 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1096 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1099 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1100 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1101 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1102 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1103 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1104 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1105 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1106 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1107 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1108 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1109 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1110 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1111 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1112 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1115 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1116 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1117 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1118 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1119 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1120 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1121 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1122 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1123 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1124 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1125 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1126 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1127 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1128 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1131 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1132 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1133 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1134 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1135 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1136 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1137 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1138 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1139 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1140 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1141 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1142 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1143 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1144 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1147 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1148 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1149 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1150 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1151 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1152 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1153 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1154 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1155 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1156 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1157 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1158 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1159 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1160 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1163 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1164 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1165 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1166 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1167 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1168 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1169 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1170 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1171 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1172 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1173 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1174 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1175 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1176 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1179 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1180 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1181 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1182 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1183 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1184 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1185 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1186 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1187 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1188 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1189 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1190 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1191 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1192 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1195 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1202 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1203 
	#__NO_MATH_INLINES
 1

	)

1206 #ifde‡
__USE_ISOC99


1207 #i‡
__GNUC_PREREQ
 (3, 1)

1214 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1215 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1216 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1217 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1218 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1219 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1221 
	#isgª©î
(
x
, 
y
) \

1222 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1223 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1224 
	#isgª©îequÆ
(
x
, 
y
) \

1225 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1226 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1227 
	#i¶ess
(
x
, 
y
) \

1228 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1229 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1230 
	#i¶es£quÆ
(
x
, 
y
) \

1231 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1232 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1233 
	#i¶essgª©î
(
x
, 
y
) \

1234 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1235 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1237 
	#isun‹dîed
(
x
, 
y
) \

1238 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1239 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1244 #ifde‡
__USE_EXTERN_INLINES


1245 
	~<bôs/m©hölöe.h
>

1249 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1252 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1253 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1254 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1255 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1256 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1257 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1259 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1264 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1265 
	#i£qsig
(
x
, 
y
) \

1266 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1279 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1281 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1283 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1285  
__i£qsigf
 (
__x
, 
__y
);

1289 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1291 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1293  
__i£qsig
 (
__x
, 
__y
);

1297 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1299 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1301 #i‚de‡
__NO_LONG_DOUBLE_MATH


1302  
__i£qsigl
 (
__x
, 
__y
);

1304  
__i£qsig
 (
__x
, 
__y
);

1309 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1312 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1314 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1316  
__i£qsigf128
 (
__x
, 
__y
);

1321 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1322 
ölöe
 

1323 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1325 #i‡
__˝lu•lus
 >= 201103L

1326 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1328 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1330  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1338 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<bôs/°döt-uöä.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	~<bôs/ty≥s/sigevít_t.h
>

37 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

40 
	~<bôs/√tdb.h
>

43 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

44 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

45 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

46 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

47 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

48 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

51 
	g__BEGIN_DECLS


53 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


56 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

59 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

63 
	#HOST_NOT_FOUND
 1

	)

64 
	#TRY_AGAIN
 2

	)

66 
	#NO_RECOVERY
 3

	)

68 
	#NO_DATA
 4

	)

71 #ifde‡
__USE_MISC


72 
	#NETDB_INTERNAL
 -1

	)

73 
	#NETDB_SUCCESS
 0

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

77 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


79 
	#IPPORT_RESERVED
 1024

	)

82 #ifde‡
__USE_GNU


84 
	#SCOPE_DELIMITER
 '%'

	)

87 #ifde‡
__USE_MISC


90 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

93 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

98 
	sho°ít


100 *
h_«me
;

101 **
h_Æü£s
;

102 
h_addπy≥
;

103 
h_Àngth
;

104 **
h_addr_li°
;

105 #ifde‡
__USE_MISC


106 
	#h_addr
 
h_addr_li°
[0]

	)

115 
	`£tho°ít
 (
__°ay_›í
);

121 
	`ídho°ít
 ();

128 
ho°ít
 *
	`gëho°ít
 ();

135 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

136 
__ty≥
);

142 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

144 #ifde‡
__USE_MISC


153 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

165 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

167 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

168 *
__ª°ri˘
 
__h_î∫›
);

170 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

171 
__ty≥
,

172 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

173 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

174 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

175 *
__ª°ri˘
 
__h_î∫›
);

177 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

178 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

179 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

180 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

181 *
__ª°ri˘
 
__h_î∫›
);

183 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

184 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

185 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

186 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

187 *
__ª°ri˘
 
__h_î∫›
);

196 
	`£äëít
 (
__°ay_›í
);

202 
	`íd√ã¡
 ();

209 
√ã¡
 *
	`gë√ã¡
 ();

216 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

222 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

224 #ifdef 
__USE_MISC


235 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

236 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

237 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

238 *
__ª°ri˘
 
__h_î∫›
);

240 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

241 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

242 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

243 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

244 *
__ª°ri˘
 
__h_î∫›
);

246 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

247 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

248 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

249 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

250 *
__ª°ri˘
 
__h_î∫›
);

255 
	s£rvít


257 *
s_«me
;

258 **
s_Æü£s
;

259 
s_p‹t
;

260 *
s_¥Ÿo
;

268 
	`£t£rvít
 (
__°ay_›í
);

274 
	`íd£rvít
 ();

281 
£rvít
 *
	`gë£rvít
 ();

288 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

295 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

298 #ifdef 
__USE_MISC


306 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

307 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

308 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

310 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

311 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

312 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

313 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

314 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

316 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

317 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

318 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

319 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

324 
	s¥Ÿ€¡


326 *
p_«me
;

327 **
p_Æü£s
;

328 
p_¥Ÿo
;

336 
	`£çrŸ€¡
 (
__°ay_›í
);

342 
	`íd¥Ÿ€¡
 ();

349 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

355 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

361 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

364 #ifdef 
__USE_MISC


372 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

373 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

374 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

376 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

377 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

378 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

379 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

381 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

382 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

383 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

384 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

393 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

401 
	`íd√tgª¡
 ();

410 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

411 **
__ª°ri˘
 
__u£Ω
,

412 **
__ª°ri˘
 
__domaöp
);

421 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

422 c⁄° *
__u£r
, c⁄° *
__domaö
);

430 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

431 **
__ª°ri˘
 
__u£Ω
,

432 **
__ª°ri˘
 
__domaöp
,

433 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

437 #ifde‡
__USE_MISC


449 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

450 c⁄° *
__ª°ri˘
 
__locu£r
,

451 c⁄° *
__ª°ri˘
 
__ªmu£r
,

452 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

461 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

462 c⁄° *
__ª°ri˘
 
__locu£r
,

463 c⁄° *
__ª°ri˘
 
__ªmu£r
,

464 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

465 
ß_Ámûy_t
 
__af
);

477 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

478 c⁄° *
__ª°ri˘
 
__«me
,

479 c⁄° *
__ª°ri˘
 
__∑ss
,

480 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

489 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

490 c⁄° *
__ª°ri˘
 
__«me
,

491 c⁄° *
__ª°ri˘
 
__∑ss
,

492 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

493 
ß_Ámûy_t
 
__af
);

503 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

504 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

513 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

514 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

515 
ß_Ámûy_t
 
__af
);

526 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

527 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

537 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

538 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

539 
ß_Ámûy_t
 
__af
);

549 
	`ºesvp‹t
 (*
__Æp‹t
);

558 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

563 #ifde‡
__USE_XOPEN2K


565 
	saddröfo


567 
ai_Êags
;

568 
ai_Ámûy
;

569 
ai_sockty≥
;

570 
ai_¥Ÿocﬁ
;

571 
sockÀn_t
 
ai_addæí
;

572 
sockaddr
 *
ai_addr
;

573 *
ai_ˇn⁄«me
;

574 
addröfo
 *
ai_√xt
;

577 #ifde‡
__USE_GNU


579 
	sgaicb


581 c⁄° *
¨_«me
;

582 c⁄° *
¨_£rvi˚
;

583 c⁄° 
addröfo
 *
¨_ªque°
;

584 
addröfo
 *
¨_ªsu…
;

586 
__ªtu∫
;

587 
__glibc_ª£rved
[5];

591 
	#GAI_WAIT
 0

	)

592 
	#GAI_NOWAIT
 1

	)

596 
	#AI_PASSIVE
 0x0001

	)

597 
	#AI_CANONNAME
 0x0002

	)

598 
	#AI_NUMERICHOST
 0x0004

	)

599 
	#AI_V4MAPPED
 0x0008

	)

600 
	#AI_ALL
 0x0010

	)

601 
	#AI_ADDRCONFIG
 0x0020

	)

603 #ifde‡
__USE_GNU


604 
	#AI_IDN
 0x0040

	)

607 
	#AI_CANONIDN
 0x0080

	)

608 
	#AI_IDN_ALLOW_UNASSIGNED
 \

609 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë0x0100

	)

610 
	#AI_IDN_USE_STD3_ASCII_RULES
 \

611 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë0x0200

	)

613 
	#AI_NUMERICSERV
 0x0400

	)

616 
	#EAI_BADFLAGS
 -1

	)

617 
	#EAI_NONAME
 -2

	)

618 
	#EAI_AGAIN
 -3

	)

619 
	#EAI_FAIL
 -4

	)

620 
	#EAI_FAMILY
 -6

	)

621 
	#EAI_SOCKTYPE
 -7

	)

622 
	#EAI_SERVICE
 -8

	)

623 
	#EAI_MEMORY
 -10

	)

624 
	#EAI_SYSTEM
 -11

	)

625 
	#EAI_OVERFLOW
 -12

	)

626 #ifde‡
__USE_GNU


627 
	#EAI_NODATA
 -5

	)

628 
	#EAI_ADDRFAMILY
 -9

	)

629 
	#EAI_INPROGRESS
 -100

	)

630 
	#EAI_CANCELED
 -101

	)

631 
	#EAI_NOTCANCELED
 -102

	)

632 
	#EAI_ALLDONE
 -103

	)

633 
	#EAI_INTR
 -104

	)

634 
	#EAI_IDN_ENCODE
 -105

	)

637 #ifde‡
__USE_MISC


638 
	#NI_MAXHOST
 1025

	)

639 
	#NI_MAXSERV
 32

	)

642 
	#NI_NUMERICHOST
 1

	)

643 
	#NI_NUMERICSERV
 2

	)

644 
	#NI_NOFQDN
 4

	)

645 
	#NI_NAMEREQD
 8

	)

646 
	#NI_DGRAM
 16

	)

647 #ifde‡
__USE_GNU


648 
	#NI_IDN
 32

	)

649 
	#NI_IDN_ALLOW_UNASSIGNED
 \

650 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë64

	)

651 
	#NI_IDN_USE_STD3_ASCII_RULES
 \

652 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë128

	)

660 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

661 c⁄° *
__ª°ri˘
 
__£rvi˚
,

662 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

663 
addröfo
 **
__ª°ri˘
 
__∑i
);

666 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

669 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

675 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

676 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

677 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

678 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

681 #ifde‡
__USE_GNU


690 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

691 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

701 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

702 c⁄° 
time•ec
 *
__timeout
);

705 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

708 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

711 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‡!
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_ALLSNOOPERS_GROUP
 ((
ö_addr_t
Ë0xe000006aË

	)

208 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

210 #i‡!
__USE_KERNEL_IPV6_DEFS


212 
	sö6_addr


216 
uöt8_t
 
	m__u6_addr8
[16];

217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

219 } 
	m__ö6_u
;

220 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

221 #ifde‡
__USE_MISC


222 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

223 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

228 c⁄° 
ö6_addr
 
ö6addr_™y
;

229 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

230 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

231 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

233 
	#INET_ADDRSTRLEN
 16

	)

234 
	#INET6_ADDRSTRLEN
 46

	)

238 
	ssockaddr_ö


240 
__SOCKADDR_COMMON
 (
sö_
);

241 
ö_p‹t_t
 
	msö_p‹t
;

242 
ö_addr
 
	msö_addr
;

245 
	msö_zîo
[ (
sockaddr
)

246 - 
__SOCKADDR_COMMON_SIZE


247 -  (
ö_p‹t_t
)

248 -  (
ö_addr
)];

251 #i‡!
__USE_KERNEL_IPV6_DEFS


253 
	ssockaddr_ö6


255 
__SOCKADDR_COMMON
 (
sö6_
);

256 
ö_p‹t_t
 
	msö6_p‹t
;

257 
uöt32_t
 
	msö6_Êowöfo
;

258 
ö6_addr
 
	msö6_addr
;

259 
uöt32_t
 
	msö6_sc›e_id
;

263 #ifde‡
__USE_MISC


265 
	sù_mªq


268 
ö_addr
 
	mimr_mu…üddr
;

271 
ö_addr
 
	mimr_öãrÁ˚
;

274 
	sù_mªq_sour˚


277 
ö_addr
 
	mimr_mu…üddr
;

280 
ö_addr
 
	mimr_öãrÁ˚
;

283 
ö_addr
 
	mimr_sour˚addr
;

287 #i‡!
__USE_KERNEL_IPV6_DEFS


289 
	sùv6_mªq


292 
ö6_addr
 
	mùv6mr_mu…üddr
;

295 
	mùv6mr_öãrÁ˚
;

299 #ifde‡
__USE_MISC


301 
	sgroup_ªq


304 
uöt32_t
 
	mgr_öãrÁ˚
;

307 
sockaddr_°‹age
 
	mgr_group
;

310 
	sgroup_sour˚_ªq


313 
uöt32_t
 
	mg§_öãrÁ˚
;

316 
sockaddr_°‹age
 
	mg§_group
;

319 
sockaddr_°‹age
 
	mg§_sour˚
;

324 
	sù_msfûãr


327 
ö_addr
 
	mimsf_mu…üddr
;

330 
ö_addr
 
	mimsf_öãrÁ˚
;

333 
uöt32_t
 
	mimsf_fmode
;

336 
uöt32_t
 
	mimsf_num§c
;

338 
ö_addr
 
	mimsf_¶i°
[1];

341 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

342 -  (
ö_addr
) \

343 + (
num§c
Ë*  (
ö_addr
))

	)

345 
	sgroup_fûãr


348 
uöt32_t
 
	mgf_öãrÁ˚
;

351 
sockaddr_°‹age
 
	mgf_group
;

354 
uöt32_t
 
	mgf_fmode
;

357 
uöt32_t
 
	mgf_num§c
;

359 
sockaddr_°‹age
 
	mgf_¶i°
[1];

362 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

363 -  (
sockaddr_°‹age
) \

364 + ((
num§c
) \

365 *  (
sockaddr_°‹age
)))

	)

375 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

376 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

377 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

378 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

379 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

380 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

381 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

383 
	~<ídün.h
>

386 
	~<bôs/byãsw≠.h
>

387 
	~<bôs/uöä-idítôy.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

397 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

398 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

399 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

415 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

416 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

417 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

425 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

441 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

442 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

449 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

457 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

458 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

459 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‡!
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sched.h
>

23 
	~<time.h
>

25 
	~<bôs/ídün.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

35 
	mPTHREAD_CREATE_JOINABLE
,

36 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

37 
	mPTHREAD_CREATE_DETACHED


38 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

45 
	mPTHREAD_MUTEX_TIMED_NP
,

46 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

47 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

48 
	mPTHREAD_MUTEX_ADAPTIVE_NP


49 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


51 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

52 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

53 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

54 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


56 #ifde‡
__USE_GNU


58 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


63 #ifde‡
__USE_XOPEN2K


67 
	mPTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_ROBUST
,

70 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


75 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


79 
	mPTHREAD_PRIO_NONE
,

80 
	mPTHREAD_PRIO_INHERIT
,

81 
	mPTHREAD_PRIO_PROTECT


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_TIMED_NP
Ë} }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_RECURSIVE_NP
Ë} }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ERRORCHECK_NP
Ë} }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ADAPTIVE_NP
Ë} }

	)

99 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


102 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

103 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

104 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

105 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


110 
	#PTHREAD_RWLOCK_INITIALIZER
 \

111 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_DEFAULT_NP
Ë} }

	)

112 #ifde‡
__USE_GNU


113 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

114 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
Ë} }

	)

122 
	mPTHREAD_INHERIT_SCHED
,

123 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

124 
	mPTHREAD_EXPLICIT_SCHED


125 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

132 
	mPTHREAD_SCOPE_SYSTEM
,

133 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

134 
	mPTHREAD_SCOPE_PROCESS


135 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

142 
	mPTHREAD_PROCESS_PRIVATE
,

143 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

144 
	mPTHREAD_PROCESS_SHARED


145 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

151 
	#PTHREAD_COND_INITIALIZER
 { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }

	)

155 
	s_±hªad_˛ónup_buf„r


157 (*
	m__routöe
) (*);

158 *
	m__¨g
;

159 
	m__ˇn˚…y≥
;

160 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

166 
	mPTHREAD_CANCEL_ENABLE
,

167 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

168 
	mPTHREAD_CANCEL_DISABLE


169 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

173 
	mPTHREAD_CANCEL_DEFERRED
,

174 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

175 
	mPTHREAD_CANCEL_ASYNCHRONOUS


176 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

178 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

182 
	#PTHREAD_ONCE_INIT
 0

	)

185 #ifde‡
__USE_XOPEN2K


189 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

193 
__BEGIN_DECLS


198 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

199 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

200 *(*
__°¨t_routöe
) (*),

201 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

207 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

215 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

217 #ifde‡
__USE_GNU


220 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

228 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

229 c⁄° 
time•ec
 *
__ab°ime
);

238 
	`±hªad_˛ockjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

239 
˛ockid_t
 
__˛ockid
,

240 c⁄° 
time•ec
 *
__ab°ime
);

247 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

251 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

254 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

255 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

263 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

266 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

271 *
__dëach°©e
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

275 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

276 
__dëach°©e
)

277 
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

282 
size_t
 *
__gu¨dsize
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

287 
size_t
 
__gu¨dsize
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

293 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

298 c⁄° 
sched_∑øm
 *
__ª°ri˘


299 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


303 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

304 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

307 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

308 
__THROW
 
	`__n⁄nuŒ
 ((1));

311 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


312 
__©å
, *
__ª°ri˘
 
__öhîô
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

316 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

317 
__öhîô
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

322 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

323 *
__ª°ri˘
 
__sc›e
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

327 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

328 
__THROW
 
	`__n⁄nuŒ
 ((1));

331 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


332 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

339 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

340 *
__°ackaddr
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

344 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


345 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

352 
size_t
 
__°acksize
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_XOPEN2K


357 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 **
__ª°ri˘
 
__°ackaddr
,

359 
size_t
 *
__ª°ri˘
 
__°acksize
)

360 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

365 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

366 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

369 #ifde‡
__USE_GNU


372 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

373 
size_t
 
__˝u£tsize
,

374 c⁄° 
˝u_£t_t
 *
__˝u£t
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

379 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

380 
size_t
 
__˝u£tsize
,

381 
˝u_£t_t
 *
__˝u£t
)

382 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

385 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1));

396 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

397 
__THROW
 
	`__n⁄nuŒ
 ((2));

405 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

406 c⁄° 
sched_∑øm
 *
__∑øm
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3));

410 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

411 *
__ª°ri˘
 
__pﬁicy
,

412 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

413 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

416 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

417 
__THROW
;

420 #ifde‡
__USE_GNU


422 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

423 
size_t
 
__buÊí
)

424 
__THROW
 
	`__n⁄nuŒ
 ((2));

427 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

432 #ifde‡
__USE_UNIX98


434 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

437 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

440 #ifde‡
__USE_GNU


445 
	$±hªad_yõld
 (Ë
__THROW
;

450 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

451 c⁄° 
˝u_£t_t
 *
__˝u£t
)

452 
__THROW
 
	`__n⁄nuŒ
 ((3));

455 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

456 
˝u_£t_t
 *
__˝u£t
)

457 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

471 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

482 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

486 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

489 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

494 
	`±hªad_ã°ˇn˚l
 ();

503 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

504 
__mask_was_ßved
;

505 } 
__ˇn˚l_jmp_buf
[1];

506 *
__∑d
[4];

507 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

510 #i‚de‡
__˛ónup_f˘_©åibuã


511 
	#__˛ónup_f˘_©åibuã


	)

516 
	s__±hªad_˛ónup_‰ame


518 (*
__ˇn˚l_routöe
) (*);

519 *
__ˇn˚l_¨g
;

520 
__do_ô
;

521 
__ˇn˚l_ty≥
;

524 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


525 #ifde‡
__˝lu•lus


527 ˛as†
	c__±hªad_˛ónup_˛ass


529 (*
__ˇn˚l_routöe
) (*);

530 *
__ˇn˚l_¨g
;

531 
__do_ô
;

532 
__ˇn˚l_ty≥
;

534 
public
:

535 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

536 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

537 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

538 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

539 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

540 &
__ˇn˚l_ty≥
); 
	}
}

541 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

551 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

553 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

557 
	#±hªad_˛ónup_p›
(
execuã
) \

558 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

559 } 0)

	)

561 #ifde‡
__USE_GNU


565 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

567 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

568 
__˛‰ame
.
	`__de„r
 ()

	)

573 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

574 
__˛‰ame
.
	`__ª°‹e
 (); \

575 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

576 } 0)

	)

583 
__exã∫_ölöe
 

584 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

586 i‡(
__‰ame
->
__do_ô
)

587 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

588 
	}
}

597 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

599 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

600 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

601 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

602 .
__do_ô
 = 1 };

	)

606 
	#±hªad_˛ónup_p›
(
execuã
) \

607 
__˛‰ame
.
__do_ô
 = (
execuã
); \

608 } 0)

	)

610 #ifde‡
__USE_GNU


614 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

616 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

617 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

618 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

619 .
__do_ô
 = 1 }; \

620 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

621 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

626 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

627 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

628 
__˛‰ame
.
__do_ô
 = (
execuã
); \

629 } 0)

	)

640 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

642 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

643 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

644 *
__ˇn˚l_¨g
 = (
¨g
); \

645 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

646 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

647 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

649 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

650 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

654 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

655 dÿ{

	)

656 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

657 
__˛ónup_f˘_©åibuã
;

661 
	#±hªad_˛ónup_p›
(
execuã
) \

664 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

665 i‡(
execuã
) \

666 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

667 } 0)

	)

668 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

669 
__˛ónup_f˘_©åibuã
;

671 #ifde‡
__USE_GNU


675 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

697 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

700 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

701 i‡(
execuã
) \

702 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

703 
	}
} 0)

	)

704 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

705 
__˛ónup_f˘_©åibuã
;

709 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

710 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

711 #i‚de‡
SHARED


712 
	`__©åibuã__
 ((
__wók__
))

718 
__jmp_buf_èg
;

719 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

725 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

726 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1));

730 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

731 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

735 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

741 #ifde‡
__USE_XOPEN2K


743 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

744 c⁄° 
time•ec
 *
__ª°ri˘


745 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

748 #ifde‡
__USE_GNU


749 
	$±hªad_muãx_˛ocklock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

750 
˛ockid_t
 
__˛ockid
,

751 c⁄° 
time•ec
 *
__ª°ri˘


752 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

756 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

757 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

761 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

762 
__ª°ri˘
 
__muãx
,

763 *
__ª°ri˘
 
__¥io˚ûög
)

764 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

768 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

769 
__¥io˚ûög
,

770 *
__ª°ri˘
 
__ﬁd_˚ûög
)

771 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

774 #ifde‡
__USE_XOPEN2K8


776 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 #ifde‡
__USE_GNU


779 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

780 
__THROW
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1));

793 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

798 
__ª°ri˘
 
__©å
,

799 *
__ª°ri˘
 
__psh¨ed
)

800 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

803 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

804 
__psh¨ed
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


809 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


810 
__©å
, *
__ª°ri˘
 
__köd
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

816 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

817 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

822 
__ª°ri˘
 
__©å
,

823 *
__ª°ri˘
 
__¥Ÿocﬁ
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

828 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

829 
__¥Ÿocﬁ
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1));

833 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

834 
__ª°ri˘
 
__©å
,

835 *
__ª°ri˘
 
__¥io˚ûög
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

839 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

840 
__¥io˚ûög
)

841 
__THROW
 
	`__n⁄nuŒ
 ((1));

843 #ifde‡
__USE_XOPEN2K


845 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

846 *
__robu°√ss
)

847 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 #ifde‡
__USE_GNU


849 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

850 *
__robu°√ss
)

851 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

855 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

856 
__robu°√ss
)

857 
__THROW
 
	`__n⁄nuŒ
 ((1));

858 #ifde‡
__USE_GNU


859 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

860 
__robu°√ss
)

861 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


871 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

872 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


873 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

876 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

877 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

881 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

887 #ifde‡
__USE_XOPEN2K


889 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

890 c⁄° 
time•ec
 *
__ª°ri˘


891 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

894 #ifde‡
__USE_GNU


895 
	$±hªad_rwlock_˛ockrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

896 
˛ockid_t
 
__˛ockid
,

897 c⁄° 
time•ec
 *
__ª°ri˘


898 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

902 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

903 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

906 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

907 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

909 #ifde‡
__USE_XOPEN2K


911 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

912 c⁄° 
time•ec
 *
__ª°ri˘


913 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

916 #ifde‡
__USE_GNU


917 
	$±hªad_rwlock_˛ockwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 
˛ockid_t
 
__˛ockid
,

919 c⁄° 
time•ec
 *
__ª°ri˘


920 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

924 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

925 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

940 
__ª°ri˘
 
__©å
,

941 *
__ª°ri˘
 
__psh¨ed
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

945 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

946 
__psh¨ed
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1));

950 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

951 
__ª°ri˘
 
__©å
,

952 *
__ª°ri˘
 
__¥ef
)

953 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

956 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

957 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

975 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

978 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

979 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

986 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

987 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

988 
	`__n⁄nuŒ
 ((1, 2));

997 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

998 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

999 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1000 
	`__n⁄nuŒ
 ((1, 2, 3));

1002 #ifde‡
__USE_GNU


1010 
	$±hªad_c⁄d_˛ockwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1011 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1012 
__˛ockid_t
 
__˛ock_id
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 4));

1020 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1029 
__ª°ri˘
 
__©å
,

1030 *
__ª°ri˘
 
__psh¨ed
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1034 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1035 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1037 #ifde‡
__USE_XOPEN2K


1039 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1040 
__ª°ri˘
 
__©å
,

1041 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1045 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1046 
__˛ockid_t
 
__˛ock_id
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1051 #ifde‡
__USE_XOPEN2K


1056 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1057 
__THROW
 
	`__n⁄nuŒ
 ((1));

1060 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1061 
__THROW
 
	`__n⁄nuŒ
 ((1));

1064 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1065 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1068 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1069 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1072 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1073 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1080 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1081 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1082 
__©å
, 
__cou¡
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1086 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1087 
__THROW
 
	`__n⁄nuŒ
 ((1));

1090 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1091 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1095 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1096 
__THROW
 
	`__n⁄nuŒ
 ((1));

1099 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1100 
__THROW
 
	`__n⁄nuŒ
 ((1));

1103 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1104 
__ª°ri˘
 
__©å
,

1105 *
__ª°ri˘
 
__psh¨ed
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1109 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1110 
__psh¨ed
)

1111 
__THROW
 
	`__n⁄nuŒ
 ((1));

1123 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1124 (*
__de°r_fun˘i⁄
) (*))

1125 
__THROW
 
	`__n⁄nuŒ
 ((1));

1128 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1131 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1134 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1135 c⁄° *
__poöãr
Ë
__THROW
 ;

1138 #ifde‡
__USE_XOPEN2K


1140 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1141 
__˛ockid_t
 *
__˛ock_id
)

1142 
__THROW
 
	`__n⁄nuŒ
 ((2));

1157 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1158 (*
__∑ª¡
) (),

1159 (*
__chûd
Ë()Ë
__THROW
;

1162 #ifde‡
__USE_EXTERN_INLINES


1164 
__exã∫_ölöe
 

1165 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1167  
__thªad1
 =
__thªad2
;

1168 
	}
}

1171 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

28 
	~<bôs/£m≠h‹e.h
>

31 
__BEGIN_DECLS


35 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

36 
__THROW
 
	`__n⁄nuŒ
 ((1));

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...)

43 
__THROW
 
	`__n⁄nuŒ
 ((1));

46 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

55 
	$£m_waô
 (
£m_t
 *
__£m
Ë
	`__n⁄nuŒ
 ((1));

57 #ifde‡
__USE_XOPEN2K


62 
	$£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

63 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

64 
	`__n⁄nuŒ
 ((1, 2));

67 #ifde‡
__USE_GNU


68 
	$£m_˛ockwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

69 
˛ockid_t
 
˛ock
,

70 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

71 
	`__n⁄nuŒ
 ((1, 3));

75 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

78 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

81 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

82 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

85 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

374 
	~<bôs/sig«l_ext.h
>

376 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	$©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1170 
	~<bôs/uni°d_ext.h
>

1172 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<bôs/ty≥s/time_t.h
>

32 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‚de‡
__USE_XOPEN2K


34 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

44 
	~<bôs/˝u-£t.h
>

47 
	#sched_¥i‹ôy
 
sched_¥i‹ôy


	)

48 
	#__sched_¥i‹ôy
 
sched_¥i‹ôy


	)

51 
__BEGIN_DECLS


54 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

55 
__THROW
;

58 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

62 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

65 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

68 
	$sched_yõld
 (Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

77 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

80 #ifde‡
__USE_GNU


82 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

83 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

86 
˝u£ç
)

	)

87 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

88 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

90 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

91 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

92 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

93 
˝u£ç
)

	)

94 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

95 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

97 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

98 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

100 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

102 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

104 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

106 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

108 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

110 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

111 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

112 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

113 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

115 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

116 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

117 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

121 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

126 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

129 
__END_DECLS


	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
104
1753
aslr.c
aslr.h
config.h
cvars/cvar-erlang.c
cvars/cvar-erlang.h
cvars/cvar-exponential.c
cvars/cvar-exponential.h
cvars/cvar-gamma.c
cvars/cvar-lognormal.c
cvars/cvar-lognormal.h
cvars/cvar-normal.c
cvars/cvar-normal.h
cvars/cvar-triangular.c
cvars/cvar-triangular.h
cvars/cvar-uniform.c
cvars/cvar-uniform.h
cvars/cvar-weibull.c
cvars/cvar-weibull.h
cvars/cvar.h
cvars/cvar_tokens.c
cvars/cvar_tokens.h
cvars/cvar_trace.h
cvars/mtwist/mttest.c
cvars/mtwist/mtwist.c
cvars/mtwist/mtwist.h
cvars/mtwist/randistrs.c
cvars/mtwist/randistrs.h
cvars/mtwist/rdtest.c
cvars/test/sanity.c
eventgen.c
eventgen.h
fb_avl.c
fb_avl.h
fb_cvar.c
fb_cvar.h
fb_localfs.c
fb_random.c
fb_random.h
fbtime.c
fbtime.h
filebench.h
fileset.c
fileset.h
flag.h
flowop.c
flowop.h
flowop_library.c
fsplug.h
gamma_dist.c
gamma_dist.h
ioprio.c
ioprio.h
ipc.c
ipc.h
misc.c
misc.h
multi_client_sync.c
multi_client_sync.h
parser_gram.c
parser_gram.h
parser_lex.c
parsertypes.h
procflow.c
procflow.h
stats.c
stats.h
threadflow.c
threadflow.h
utils.c
utils.h
vars.c
vars.h
/usr/include/aio.h
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdc-predef.h
